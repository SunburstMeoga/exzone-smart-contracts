{
	"id": "9471984386206281631fc71071a05890",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"projects/bsc-library/contracts/BEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"./IBEP20.sol\";\n\n/**\n * @dev Implementation of the {IBEP20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {BEP20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-BEP20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of BEP20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IBEP20-approve}.\n */\ncontract BEP20 is Context, IBEP20, Ownable {\n    using Address for address;\n\n    mapping(address => uint256) private _balances;\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(\n        string memory name,\n        string memory symbol\n    ) Ownable(_msgSender()) {\n        _name = name;\n        _symbol = symbol;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the bep token owner.\n     */\n    function getOwner() external view override returns (address) {\n        return owner();\n    }\n\n    /**\n     * @dev Returns the token name.\n     */\n    function name() public view override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the token decimals.\n     */\n    function decimals() public view override returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev Returns the token symbol.\n     */\n    function symbol() public view override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {BEP20-totalSupply}.\n     */\n    function totalSupply() public view override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {BEP20-balanceOf}.\n     */\n    function balanceOf(address account) public view override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {BEP20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(\n        address recipient,\n        uint256 amount\n    ) public override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {BEP20-allowance}.\n     */\n    function allowance(\n        address owner,\n        address spender\n    ) public view override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {BEP20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(\n        address spender,\n        uint256 amount\n    ) public override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {BEP20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {BEP20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for `sender`'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(\n            sender,\n            _msgSender(),\n            _allowances[sender][_msgSender()] - amount\n        );\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {BEP20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(\n        address spender,\n        uint256 addedValue\n    ) public returns (bool) {\n        _approve(\n            _msgSender(),\n            spender,\n            _allowances[_msgSender()][spender] + addedValue\n        );\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {BEP20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(\n        address spender,\n        uint256 subtractedValue\n    ) public returns (bool) {\n        _approve(\n            _msgSender(),\n            spender,\n            _allowances[_msgSender()][spender] - subtractedValue\n        );\n        return true;\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n     * the total supply.\n     *\n     * Requirements\n     *\n     * - `msg.sender` must be the token owner\n     */\n    function mint(uint256 amount) public onlyOwner returns (bool) {\n        _mint(_msgSender(), amount);\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal {\n        require(sender != address(0), \"BEP20: transfer from the zero address\");\n        require(recipient != address(0), \"BEP20: transfer to the zero address\");\n\n        _balances[sender] -= amount;\n        _balances[recipient] += amount;\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0), \"BEP20: mint to the zero address\");\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal {\n        require(account != address(0), \"BEP20: burn from the zero address\");\n\n        _balances[account] -= amount;\n        _totalSupply -= amount;\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal {\n        require(owner != address(0), \"BEP20: approve from the zero address\");\n        require(spender != address(0), \"BEP20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n     * from the caller's allowance.\n     *\n     * See {_burn} and {_approve}.\n     */\n    function _burnFrom(address account, uint256 amount) internal {\n        _burn(account, amount);\n        _approve(\n            account,\n            _msgSender(),\n            _allowances[account][_msgSender()] - amount\n        );\n    }\n}\n"
			},
			"projects/bsc-library/contracts/IBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.4.0;\n\ninterface IBEP20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8);\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory);\n\n  /**\n   * @dev Returns the token name.\n   */\n  function name() external view returns (string memory);\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address _owner, address spender)\n    external\n    view\n    returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(\n    address sender,\n    address recipient,\n    uint256 amount\n  ) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122001c189066b019b4852ae5e149388012f4eac65513d55ad40698d5f22c7f1a1e964736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122001c189066b019b4852ae5e149388012f4eac65513d55ad40698d5f22c7f1a1e964736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xC1 DUP10 MOD PUSH12 0x19B4852AE5E149388012F4E 0xAC PUSH6 0x513D55AD4069 DUP14 PUSH0 0x22 0xC7 CALL LOG1 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "195:6066:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122001c189066b019b4852ae5e149388012f4eac65513d55ad40698d5f22c7f1a1e964736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xC1 DUP10 MOD PUSH12 0x19B4852AE5E149388012F4E 0xAC PUSH6 0x513D55AD4069 DUP14 PUSH0 0x22 0xC7 CALL LOG1 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "195:6066:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122001c189066b019b4852ae5e149388012f4eac65513d55ad40698d5f22c7f1a1e964736f6c63430008180033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"projects/bsc-library/contracts/BEP20.sol",
								"projects/bsc-library/contracts/IBEP20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"projects/bsc-library/contracts/BEP20.sol": {
				"BEP20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IBEP20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {BEP20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-BEP20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of BEP20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IBEP20-approve}.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"projects/bsc-library/contracts/BEP20.sol\":1401:9840  contract BEP20 is Context, IBEP20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"projects/bsc-library/contracts/BEP20.sol\":2041:2218  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1708:1759   */\n  mstore\n    /* \"#utility.yul\":1681:1699   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_12:\n  pop\n    /* \"projects/bsc-library/contracts/BEP20.sol\":2149:2154  _name */\n  0x04\n    /* \"projects/bsc-library/contracts/BEP20.sol\":2149:2161  _name = name */\n  tag_15\n    /* \"projects/bsc-library/contracts/BEP20.sol\":2157:2161  name */\n  dup4\n    /* \"projects/bsc-library/contracts/BEP20.sol\":2149:2154  _name */\n  dup3\n    /* \"projects/bsc-library/contracts/BEP20.sol\":2149:2161  _name = name */\n  tag_16\n  jump\t// in\ntag_15:\n  pop\n    /* \"projects/bsc-library/contracts/BEP20.sol\":2171:2178  _symbol */\n  0x05\n    /* \"projects/bsc-library/contracts/BEP20.sol\":2171:2187  _symbol = symbol */\n  tag_17\n    /* \"projects/bsc-library/contracts/BEP20.sol\":2181:2187  symbol */\n  dup3\n    /* \"projects/bsc-library/contracts/BEP20.sol\":2171:2178  _symbol */\n  dup3\n    /* \"projects/bsc-library/contracts/BEP20.sol\":2171:2187  _symbol = symbol */\n  tag_16\n  jump\t// in\ntag_17:\n  pop\n  pop\n    /* \"projects/bsc-library/contracts/BEP20.sol\":2197:2206  _decimals */\n  0x06\n    /* \"projects/bsc-library/contracts/BEP20.sol\":2197:2211  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"projects/bsc-library/contracts/BEP20.sol\":2209:2211  18 */\n  0x12\n    /* \"projects/bsc-library/contracts/BEP20.sol\":2197:2211  _decimals = 18 */\n  or\n  swap1\n  sstore\n  pop\n    /* \"projects/bsc-library/contracts/BEP20.sol\":1401:9840  contract BEP20 is Context, IBEP20, Ownable {... */\n  jump(tag_27)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_21:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:990   */\ntag_22:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_30:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_32\n  tag_21\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_34\n  tag_21\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":732:735   */\n  dup7\n    /* \"#utility.yul\":725:729   */\n  0x20\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:730   */\n  add\n    /* \"#utility.yul\":701:736   */\n  gt\n    /* \"#utility.yul\":698:753   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":749:750   */\n  0x00\n    /* \"#utility.yul\":746:747   */\n  dup1\n    /* \"#utility.yul\":739:751   */\n  revert\n    /* \"#utility.yul\":698:753   */\ntag_35:\n    /* \"#utility.yul\":771:772   */\n  0x00\n    /* \"#utility.yul\":762:772   */\n  swap2\n  pop\n    /* \"#utility.yul\":781:914   */\ntag_36:\n    /* \"#utility.yul\":795:797   */\n  dup4\n    /* \"#utility.yul\":792:793   */\n  dup3\n    /* \"#utility.yul\":789:798   */\n  lt\n    /* \"#utility.yul\":781:914   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":883:897   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":879:902   */\n  dup4\n  add\n    /* \"#utility.yul\":873:903   */\n  mload\n    /* \"#utility.yul\":852:866   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":848:871   */\n  dup5\n  add\n    /* \"#utility.yul\":841:904   */\n  mstore\n    /* \"#utility.yul\":806:816   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":781:914   */\n  jump(tag_36)\ntag_38:\n    /* \"#utility.yul\":958:959   */\n  0x00\n    /* \"#utility.yul\":951:955   */\n  0x20\n    /* \"#utility.yul\":946:948   */\n  dup6\n    /* \"#utility.yul\":938:944   */\n  dup4\n    /* \"#utility.yul\":934:949   */\n  add\n    /* \"#utility.yul\":930:956   */\n  add\n    /* \"#utility.yul\":923:960   */\n  mstore\n    /* \"#utility.yul\":978:984   */\n  dup1\n    /* \"#utility.yul\":969:984   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:990   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":995:1557   */\ntag_3:\n    /* \"#utility.yul\":1094:1100   */\n  0x00\n    /* \"#utility.yul\":1102:1108   */\n  dup1\n    /* \"#utility.yul\":1155:1157   */\n  0x40\n    /* \"#utility.yul\":1143:1152   */\n  dup4\n    /* \"#utility.yul\":1134:1141   */\n  dup6\n    /* \"#utility.yul\":1130:1153   */\n  sub\n    /* \"#utility.yul\":1126:1158   */\n  slt\n    /* \"#utility.yul\":1123:1175   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1171:1172   */\n  0x00\n    /* \"#utility.yul\":1168:1169   */\n  dup1\n    /* \"#utility.yul\":1161:1173   */\n  revert\n    /* \"#utility.yul\":1123:1175   */\ntag_40:\n    /* \"#utility.yul\":1198:1214   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1263:1277   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1260:1294   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1290:1291   */\n  0x00\n    /* \"#utility.yul\":1287:1288   */\n  dup1\n    /* \"#utility.yul\":1280:1292   */\n  revert\n    /* \"#utility.yul\":1260:1294   */\ntag_41:\n    /* \"#utility.yul\":1313:1374   */\n  tag_42\n    /* \"#utility.yul\":1366:1373   */\n  dup7\n    /* \"#utility.yul\":1357:1363   */\n  dup4\n    /* \"#utility.yul\":1346:1355   */\n  dup8\n    /* \"#utility.yul\":1342:1364   */\n  add\n    /* \"#utility.yul\":1313:1374   */\n  tag_22\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1303:1374   */\n  swap4\n  pop\n    /* \"#utility.yul\":1420:1422   */\n  0x20\n    /* \"#utility.yul\":1409:1418   */\n  dup6\n    /* \"#utility.yul\":1405:1423   */\n  add\n    /* \"#utility.yul\":1399:1424   */\n  mload\n    /* \"#utility.yul\":1383:1424   */\n  swap2\n  pop\n    /* \"#utility.yul\":1449:1451   */\n  dup1\n    /* \"#utility.yul\":1439:1447   */\n  dup3\n    /* \"#utility.yul\":1436:1452   */\n  gt\n    /* \"#utility.yul\":1433:1469   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1465:1466   */\n  0x00\n    /* \"#utility.yul\":1462:1463   */\n  dup1\n    /* \"#utility.yul\":1455:1467   */\n  revert\n    /* \"#utility.yul\":1433:1469   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1488:1551   */\n  tag_44\n    /* \"#utility.yul\":1543:1550   */\n  dup6\n    /* \"#utility.yul\":1532:1540   */\n  dup3\n    /* \"#utility.yul\":1521:1530   */\n  dup7\n    /* \"#utility.yul\":1517:1541   */\n  add\n    /* \"#utility.yul\":1488:1551   */\n  tag_22\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1478:1551   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":995:1557   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1770:2150   */\ntag_23:\n    /* \"#utility.yul\":1849:1850   */\n  0x01\n    /* \"#utility.yul\":1845:1857   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1892:1904   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1913:1974   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1967:1971   */\n  0x7f\n    /* \"#utility.yul\":1959:1965   */\n  dup3\n    /* \"#utility.yul\":1955:1972   */\n  and\n    /* \"#utility.yul\":1945:1972   */\n  swap2\n  pop\n    /* \"#utility.yul\":1913:1974   */\ntag_47:\n    /* \"#utility.yul\":2020:2022   */\n  0x20\n    /* \"#utility.yul\":2012:2018   */\n  dup3\n    /* \"#utility.yul\":2009:2023   */\n  lt\n    /* \"#utility.yul\":1989:2007   */\n  dup2\n    /* \"#utility.yul\":1986:2024   */\n  sub\n    /* \"#utility.yul\":1983:2144   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":2066:2076   */\n  0x4e487b71\n    /* \"#utility.yul\":2061:2064   */\n  0xe0\n    /* \"#utility.yul\":2057:2077   */\n  shl\n    /* \"#utility.yul\":2054:2055   */\n  0x00\n    /* \"#utility.yul\":2047:2078   */\n  mstore\n    /* \"#utility.yul\":2101:2105   */\n  0x22\n    /* \"#utility.yul\":2098:2099   */\n  0x04\n    /* \"#utility.yul\":2091:2106   */\n  mstore\n    /* \"#utility.yul\":2129:2133   */\n  0x24\n    /* \"#utility.yul\":2126:2127   */\n  0x00\n    /* \"#utility.yul\":2119:2134   */\n  revert\n    /* \"#utility.yul\":1983:2144   */\ntag_48:\n  pop\n    /* \"#utility.yul\":1770:2150   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2281:2799   */\ntag_25:\n    /* \"#utility.yul\":2383:2385   */\n  0x1f\n    /* \"#utility.yul\":2378:2381   */\n  dup3\n    /* \"#utility.yul\":2375:2386   */\n  gt\n    /* \"#utility.yul\":2372:2793   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2419:2424   */\n  dup1\n    /* \"#utility.yul\":2416:2417   */\n  0x00\n    /* \"#utility.yul\":2409:2425   */\n  mstore\n    /* \"#utility.yul\":2463:2467   */\n  0x20\n    /* \"#utility.yul\":2460:2461   */\n  0x00\n    /* \"#utility.yul\":2450:2468   */\n  keccak256\n    /* \"#utility.yul\":2533:2535   */\n  0x1f\n    /* \"#utility.yul\":2521:2531   */\n  dup5\n    /* \"#utility.yul\":2517:2536   */\n  add\n    /* \"#utility.yul\":2514:2515   */\n  0x05\n    /* \"#utility.yul\":2510:2537   */\n  shr\n    /* \"#utility.yul\":2504:2508   */\n  dup2\n    /* \"#utility.yul\":2500:2538   */\n  add\n    /* \"#utility.yul\":2569:2573   */\n  0x20\n    /* \"#utility.yul\":2557:2567   */\n  dup6\n    /* \"#utility.yul\":2554:2574   */\n  lt\n    /* \"#utility.yul\":2551:2598   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":2592:2596   */\n  dup1\n    /* \"#utility.yul\":2551:2598   */\ntag_52:\n    /* \"#utility.yul\":2647:2649   */\n  0x1f\n    /* \"#utility.yul\":2642:2645   */\n  dup5\n    /* \"#utility.yul\":2638:2650   */\n  add\n    /* \"#utility.yul\":2635:2636   */\n  0x05\n    /* \"#utility.yul\":2631:2651   */\n  shr\n    /* \"#utility.yul\":2625:2629   */\n  dup3\n    /* \"#utility.yul\":2621:2652   */\n  add\n    /* \"#utility.yul\":2611:2652   */\n  swap2\n  pop\n    /* \"#utility.yul\":2702:2783   */\ntag_53:\n    /* \"#utility.yul\":2720:2722   */\n  dup2\n    /* \"#utility.yul\":2713:2718   */\n  dup2\n    /* \"#utility.yul\":2710:2723   */\n  lt\n    /* \"#utility.yul\":2702:2783   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":2779:2780   */\n  0x00\n    /* \"#utility.yul\":2765:2781   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2746:2747   */\n  0x01\n    /* \"#utility.yul\":2735:2748   */\n  add\n    /* \"#utility.yul\":2702:2783   */\n  jump(tag_53)\ntag_55:\n    /* \"#utility.yul\":2706:2709   */\n  pop\n  pop\n    /* \"#utility.yul\":2372:2793   */\ntag_51:\n    /* \"#utility.yul\":2281:2799   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2975:4320   */\ntag_16:\n    /* \"#utility.yul\":3095:3105   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3117:3147   */\n  dup2\n  gt\n    /* \"#utility.yul\":3114:3170   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":3150:3168   */\n  tag_59\n  tag_21\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":3179:3276   */\n  tag_60\n    /* \"#utility.yul\":3269:3275   */\n  dup2\n    /* \"#utility.yul\":3229:3267   */\n  tag_61\n    /* \"#utility.yul\":3261:3265   */\n  dup5\n    /* \"#utility.yul\":3255:3266   */\n  sload\n    /* \"#utility.yul\":3229:3267   */\n  tag_23\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":3223:3227   */\n  dup5\n    /* \"#utility.yul\":3179:3276   */\n  tag_25\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":3331:3335   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3388:3390   */\n  0x1f\n    /* \"#utility.yul\":3377:3391   */\n  dup4\n  gt\n    /* \"#utility.yul\":3405:3406   */\n  0x01\n    /* \"#utility.yul\":3400:4063   */\n  dup2\n  eq\n  tag_63\n  jumpi\n    /* \"#utility.yul\":4107:4108   */\n  0x00\n    /* \"#utility.yul\":4124:4130   */\n  dup5\n    /* \"#utility.yul\":4121:4210   */\n  iszero\n  tag_64\n  jumpi\n  pop\n    /* \"#utility.yul\":4176:4195   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":4170:4196   */\n  mload\n    /* \"#utility.yul\":4121:4210   */\ntag_64:\n  not(0x00)\n    /* \"#utility.yul\":2932:2933   */\n  0x03\n    /* \"#utility.yul\":2928:2939   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2924:2948   */\n  shr\n    /* \"#utility.yul\":2920:2949   */\n  not\n    /* \"#utility.yul\":2910:2950   */\n  and\n    /* \"#utility.yul\":2956:2957   */\n  0x01\n    /* \"#utility.yul\":2952:2963   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2907:2964   */\n  or\n    /* \"#utility.yul\":4223:4304   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3370:4314   */\n  jump(tag_62)\n    /* \"#utility.yul\":3400:4063   */\ntag_63:\n    /* \"#utility.yul\":2228:2229   */\n  0x00\n    /* \"#utility.yul\":2221:2235   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2265:2269   */\n  0x20\n    /* \"#utility.yul\":2252:2270   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3436:3456   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3554:3790   */\ntag_67:\n    /* \"#utility.yul\":3568:3575   */\n  dup3\n    /* \"#utility.yul\":3565:3566   */\n  dup2\n    /* \"#utility.yul\":3562:3576   */\n  lt\n    /* \"#utility.yul\":3554:3790   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":3657:3676   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3651:3677   */\n  mload\n    /* \"#utility.yul\":3636:3678   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3749:3776   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3717:3718   */\n  0x01\n    /* \"#utility.yul\":3705:3719   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3584:3603   */\n  dup5\n  add\n    /* \"#utility.yul\":3554:3790   */\n  jump(tag_67)\ntag_69:\n    /* \"#utility.yul\":3558:3561   */\n  pop\n    /* \"#utility.yul\":3818:3824   */\n  dup6\n    /* \"#utility.yul\":3809:3816   */\n  dup3\n    /* \"#utility.yul\":3806:3825   */\n  lt\n    /* \"#utility.yul\":3803:4004   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":3879:3898   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3873:3899   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3962:3963   */\n  0x03\n    /* \"#utility.yul\":3958:3972   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3974:3977   */\n  0xf8\n    /* \"#utility.yul\":3954:3978   */\n  and\n    /* \"#utility.yul\":3950:3987   */\n  shr\n    /* \"#utility.yul\":3946:3988   */\n  not\n    /* \"#utility.yul\":3931:3989   */\n  and\n    /* \"#utility.yul\":3916:3990   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3803:4004   */\ntag_70:\n  pop\n  pop\n    /* \"#utility.yul\":4050:4051   */\n  0x01\n    /* \"#utility.yul\":4041:4047   */\n  dup5\n    /* \"#utility.yul\":4038:4039   */\n  0x01\n    /* \"#utility.yul\":4034:4048   */\n  shl\n    /* \"#utility.yul\":4030:4052   */\n  add\n    /* \"#utility.yul\":4024:4028   */\n  dup6\n    /* \"#utility.yul\":4017:4053   */\n  sstore\n    /* \"#utility.yul\":3370:4314   */\ntag_62:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2975:4320   */\n  pop\n  pop\n  jump\t// out\ntag_27:\n    /* \"projects/bsc-library/contracts/BEP20.sol\":1401:9840  contract BEP20 is Context, IBEP20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"projects/bsc-library/contracts/BEP20.sol\":1401:9840  contract BEP20 is Context, IBEP20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x893d20e8\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"projects/bsc-library/contracts/BEP20.sol\":2431:2521  function name() public view override returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"projects/bsc-library/contracts/BEP20.sol\":3903:4083  function approve(... */\n    tag_4:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"projects/bsc-library/contracts/BEP20.sol\":3903:4083  function approve(... */\n      tag_24\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"projects/bsc-library/contracts/BEP20.sol\":2886:2984  function totalSupply() public view override returns (uint256) {... */\n    tag_5:\n        /* \"projects/bsc-library/contracts/BEP20.sol\":2965:2977  _totalSupply */\n      sload(0x03)\n        /* \"projects/bsc-library/contracts/BEP20.sol\":2886:2984  function totalSupply() public view override returns (uint256) {... */\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"projects/bsc-library/contracts/BEP20.sol\":2886:2984  function totalSupply() public view override returns (uint256) {... */\n      tag_24\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4540:4878  function transferFrom(... */\n    tag_6:\n      tag_26\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n        /* \"projects/bsc-library/contracts/BEP20.sol\":2583:2673  function decimals() public view override returns (uint8) {... */\n    tag_7:\n        /* \"projects/bsc-library/contracts/BEP20.sol\":2657:2666  _decimals */\n      sload(0x06)\n        /* \"projects/bsc-library/contracts/BEP20.sol\":2583:2673  function decimals() public view override returns (uint8) {... */\n      mload(0x40)\n        /* \"projects/bsc-library/contracts/BEP20.sol\":2657:2666  _decimals */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"projects/bsc-library/contracts/BEP20.sol\":2583:2673  function decimals() public view override returns (uint8) {... */\n      tag_24\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"projects/bsc-library/contracts/BEP20.sol\":5272:5544  function increaseAllowance(... */\n    tag_8:\n      tag_26\n      tag_46\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n        /* \"projects/bsc-library/contracts/BEP20.sol\":3041:3158  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_9:\n      tag_32\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"projects/bsc-library/contracts/BEP20.sol\":3133:3151  _balances[account] */\n      and\n        /* \"projects/bsc-library/contracts/BEP20.sol\":3107:3114  uint256 */\n      0x00\n        /* \"projects/bsc-library/contracts/BEP20.sol\":3133:3151  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"projects/bsc-library/contracts/BEP20.sol\":3133:3142  _balances */\n      0x01\n        /* \"projects/bsc-library/contracts/BEP20.sol\":3133:3151  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"projects/bsc-library/contracts/BEP20.sol\":3041:3158  function balanceOf(address account) public view override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      stop\n        /* \"projects/bsc-library/contracts/BEP20.sol\":2281:2373  function getOwner() external view override returns (address) {... */\n    tag_11:\n        /* \"projects/bsc-library/contracts/BEP20.sol\":2333:2340  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"projects/bsc-library/contracts/BEP20.sol\":2281:2373  function getOwner() external view override returns (address) {... */\n    tag_56:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2255:2287   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2237:2288   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2225:2227   */\n      0x20\n        /* \"#utility.yul\":2210:2228   */\n      add\n        /* \"projects/bsc-library/contracts/BEP20.sol\":2281:2373  function getOwner() external view override returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_56)\n        /* \"projects/bsc-library/contracts/BEP20.sol\":2733:2827  function symbol() public view override returns (string memory) {... */\n    tag_13:\n      tag_22\n      tag_64\n      jump\t// in\n        /* \"projects/bsc-library/contracts/BEP20.sol\":6520:6647  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_14:\n      tag_26\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n        /* \"projects/bsc-library/contracts/BEP20.sol\":6030:6312  function decreaseAllowance(... */\n    tag_15:\n      tag_26\n      tag_72\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"projects/bsc-library/contracts/BEP20.sol\":3360:3546  function transfer(... */\n    tag_16:\n      tag_26\n      tag_76\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n        /* \"projects/bsc-library/contracts/BEP20.sol\":3603:3766  function allowance(... */\n    tag_17:\n      tag_32\n      tag_80\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"projects/bsc-library/contracts/BEP20.sol\":3732:3750  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"projects/bsc-library/contracts/BEP20.sol\":3706:3713  uint256 */\n      0x00\n        /* \"projects/bsc-library/contracts/BEP20.sol\":3732:3750  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"projects/bsc-library/contracts/BEP20.sol\":3732:3743  _allowances */\n      0x02\n        /* \"projects/bsc-library/contracts/BEP20.sol\":3732:3750  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"projects/bsc-library/contracts/BEP20.sol\":3732:3759  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"projects/bsc-library/contracts/BEP20.sol\":3603:3766  function allowance(... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_54\n      tag_85\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n        /* \"projects/bsc-library/contracts/BEP20.sol\":2431:2521  function name() public view override returns (string memory) {... */\n    tag_23:\n        /* \"projects/bsc-library/contracts/BEP20.sol\":2477:2490  string memory */\n      0x60\n        /* \"projects/bsc-library/contracts/BEP20.sol\":2509:2514  _name */\n      0x04\n        /* \"projects/bsc-library/contracts/BEP20.sol\":2502:2514  return _name */\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_89\n      jump\t// in\n    tag_90:\n      dup1\n      iszero\n      tag_91\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_92\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_91)\n    tag_92:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_93:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_93\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"projects/bsc-library/contracts/BEP20.sol\":2431:2521  function name() public view override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"projects/bsc-library/contracts/BEP20.sol\":3903:4083  function approve(... */\n    tag_29:\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4000:4004  bool */\n      0x00\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4016:4055  _approve(_msgSender(), spender, amount) */\n      tag_95\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4039:4046  spender */\n      dup5\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4048:4054  amount */\n      dup5\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4016:4024  _approve */\n      tag_98\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4016:4055  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_95:\n      pop\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4072:4076  true */\n      0x01\n        /* \"projects/bsc-library/contracts/BEP20.sol\":3903:4083  function approve(... */\n    tag_94:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4540:4878  function transferFrom(... */\n    tag_39:\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4668:4672  bool */\n      0x00\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4684:4720  _transfer(sender, recipient, amount) */\n      tag_101\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4694:4700  sender */\n      dup5\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4702:4711  recipient */\n      dup5\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4713:4719  amount */\n      dup5\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4684:4693  _transfer */\n      tag_102\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4684:4720  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4798:4817  _allowances[sender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4798:4809  _allowances */\n      0x02\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4798:4817  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4798:4831  _allowances[sender][_msgSender()] */\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4730:4850  _approve(... */\n      tag_103\n      swap2\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4752:4758  sender */\n      dup7\n      swap2\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4798:4840  _allowances[sender][_msgSender()] - amount */\n      tag_106\n      swap1\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4834:4840  amount */\n      dup7\n      swap1\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4798:4840  _allowances[sender][_msgSender()] - amount */\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4730:4738  _approve */\n      tag_98\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4730:4850  _approve(... */\n      jump\t// in\n    tag_103:\n      pop\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4867:4871  true */\n      0x01\n        /* \"projects/bsc-library/contracts/BEP20.sol\":4540:4878  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"projects/bsc-library/contracts/BEP20.sol\":5272:5544  function increaseAllowance(... */\n    tag_47:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"projects/bsc-library/contracts/BEP20.sol\":5374:5378  bool */\n      0x00\n        /* \"projects/bsc-library/contracts/BEP20.sol\":5459:5484  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"projects/bsc-library/contracts/BEP20.sol\":5459:5470  _allowances */\n      0x02\n        /* \"projects/bsc-library/contracts/BEP20.sol\":5459:5484  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"projects/bsc-library/contracts/BEP20.sol\":5459:5493  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"projects/bsc-library/contracts/BEP20.sol\":5374:5378  bool */\n      swap1\n      swap2\n        /* \"projects/bsc-library/contracts/BEP20.sol\":5390:5516  _approve(... */\n      tag_95\n      swap2\n        /* \"projects/bsc-library/contracts/BEP20.sol\":5438:5445  spender */\n      dup6\n      swap1\n        /* \"projects/bsc-library/contracts/BEP20.sol\":5459:5506  _allowances[_msgSender()][spender] + addedValue */\n      tag_106\n      swap1\n        /* \"projects/bsc-library/contracts/BEP20.sol\":5496:5506  addedValue */\n      dup7\n      swap1\n        /* \"projects/bsc-library/contracts/BEP20.sol\":5459:5506  _allowances[_msgSender()][spender] + addedValue */\n      tag_114\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"projects/bsc-library/contracts/BEP20.sol\":2733:2827  function symbol() public view override returns (string memory) {... */\n    tag_64:\n        /* \"projects/bsc-library/contracts/BEP20.sol\":2781:2794  string memory */\n      0x60\n        /* \"projects/bsc-library/contracts/BEP20.sol\":2813:2820  _symbol */\n      0x05\n        /* \"projects/bsc-library/contracts/BEP20.sol\":2806:2820  return _symbol */\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n        /* \"projects/bsc-library/contracts/BEP20.sol\":6520:6647  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_69:\n        /* \"projects/bsc-library/contracts/BEP20.sol\":6576:6580  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_132:\n        /* \"projects/bsc-library/contracts/BEP20.sol\":6592:6619  _mint(_msgSender(), amount) */\n      tag_134\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"projects/bsc-library/contracts/BEP20.sol\":6612:6618  amount */\n      dup4\n        /* \"projects/bsc-library/contracts/BEP20.sol\":6592:6597  _mint */\n      tag_136\n        /* \"projects/bsc-library/contracts/BEP20.sol\":6592:6619  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_134:\n      pop\n        /* \"projects/bsc-library/contracts/BEP20.sol\":6636:6640  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1554:1555  _ */\n    tag_133:\n        /* \"projects/bsc-library/contracts/BEP20.sol\":6520:6647  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"projects/bsc-library/contracts/BEP20.sol\":6030:6312  function decreaseAllowance(... */\n    tag_73:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"projects/bsc-library/contracts/BEP20.sol\":6137:6141  bool */\n      0x00\n        /* \"projects/bsc-library/contracts/BEP20.sol\":6222:6247  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"projects/bsc-library/contracts/BEP20.sol\":6222:6233  _allowances */\n      0x02\n        /* \"projects/bsc-library/contracts/BEP20.sol\":6222:6247  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"projects/bsc-library/contracts/BEP20.sol\":6222:6256  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"projects/bsc-library/contracts/BEP20.sol\":6137:6141  bool */\n      swap1\n      swap2\n        /* \"projects/bsc-library/contracts/BEP20.sol\":6153:6284  _approve(... */\n      tag_95\n      swap2\n        /* \"projects/bsc-library/contracts/BEP20.sol\":6201:6208  spender */\n      dup6\n      swap1\n        /* \"projects/bsc-library/contracts/BEP20.sol\":6222:6274  _allowances[_msgSender()][spender] - subtractedValue */\n      tag_106\n      swap1\n        /* \"projects/bsc-library/contracts/BEP20.sol\":6259:6274  subtractedValue */\n      dup7\n      swap1\n        /* \"projects/bsc-library/contracts/BEP20.sol\":6222:6274  _allowances[_msgSender()][spender] - subtractedValue */\n      tag_107\n      jump\t// in\n        /* \"projects/bsc-library/contracts/BEP20.sol\":3360:3546  function transfer(... */\n    tag_77:\n        /* \"projects/bsc-library/contracts/BEP20.sol\":3460:3464  bool */\n      0x00\n        /* \"projects/bsc-library/contracts/BEP20.sol\":3476:3518  _transfer(_msgSender(), recipient, amount) */\n      tag_95\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"projects/bsc-library/contracts/BEP20.sol\":3500:3509  recipient */\n      dup5\n        /* \"projects/bsc-library/contracts/BEP20.sol\":3511:3517  amount */\n      dup5\n        /* \"projects/bsc-library/contracts/BEP20.sol\":3476:3485  _transfer */\n      tag_102\n        /* \"projects/bsc-library/contracts/BEP20.sol\":3476:3518  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_149\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2237:2288   */\n      mstore\n        /* \"#utility.yul\":2210:2228   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"projects/bsc-library/contracts/BEP20.sol\":9066:9428  function _approve(... */\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"projects/bsc-library/contracts/BEP20.sol\":9189:9208  owner != address(0) */\n      dup4\n      and\n        /* \"projects/bsc-library/contracts/BEP20.sol\":9181:9249  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3731:3733   */\n      0x20\n        /* \"projects/bsc-library/contracts/BEP20.sol\":9181:9249  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3713:3734   */\n      mstore\n        /* \"#utility.yul\":3770:3772   */\n      0x24\n        /* \"#utility.yul\":3750:3768   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3743:3773   */\n      mstore\n        /* \"#utility.yul\":3809:3843   */\n      0x42455032303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3789:3807   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3782:3844   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3860:3878   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3853:3887   */\n      mstore\n        /* \"#utility.yul\":3904:3923   */\n      0x84\n      add\n        /* \"projects/bsc-library/contracts/BEP20.sol\":9181:9249  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_150\n        /* \"#utility.yul\":3529:3929   */\n      jump\n        /* \"projects/bsc-library/contracts/BEP20.sol\":9181:9249  require(owner != address(0), \"BEP20: approve from the zero address\") */\n    tag_154:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"projects/bsc-library/contracts/BEP20.sol\":9267:9288  spender != address(0) */\n      dup3\n      and\n        /* \"projects/bsc-library/contracts/BEP20.sol\":9259:9327  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4136:4138   */\n      0x20\n        /* \"projects/bsc-library/contracts/BEP20.sol\":9259:9327  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4118:4139   */\n      mstore\n        /* \"#utility.yul\":4175:4177   */\n      0x22\n        /* \"#utility.yul\":4155:4173   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4148:4178   */\n      mstore\n        /* \"#utility.yul\":4214:4248   */\n      0x42455032303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4194:4212   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4187:4249   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4265:4283   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4258:4290   */\n      mstore\n        /* \"#utility.yul\":4307:4326   */\n      0x84\n      add\n        /* \"projects/bsc-library/contracts/BEP20.sol\":9259:9327  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_150\n        /* \"#utility.yul\":3934:4332   */\n      jump\n        /* \"projects/bsc-library/contracts/BEP20.sol\":9259:9327  require(spender != address(0), \"BEP20: approve to the zero address\") */\n    tag_157:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"projects/bsc-library/contracts/BEP20.sol\":9338:9356  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"projects/bsc-library/contracts/BEP20.sol\":9338:9349  _allowances */\n      0x02\n        /* \"projects/bsc-library/contracts/BEP20.sol\":9338:9356  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"projects/bsc-library/contracts/BEP20.sol\":9338:9365  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"projects/bsc-library/contracts/BEP20.sol\":9338:9374  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"projects/bsc-library/contracts/BEP20.sol\":9389:9421  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"projects/bsc-library/contracts/BEP20.sol\":9389:9421  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"projects/bsc-library/contracts/BEP20.sol\":9389:9421  Approval(owner, spender, amount) */\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"projects/bsc-library/contracts/BEP20.sol\":9066:9428  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7121:7526  function _transfer(... */\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7248:7268  sender != address(0) */\n      dup4\n      and\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7240:7310  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4539:4541   */\n      0x20\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7240:7310  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4521:4542   */\n      mstore\n        /* \"#utility.yul\":4578:4580   */\n      0x25\n        /* \"#utility.yul\":4558:4576   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4551:4581   */\n      mstore\n        /* \"#utility.yul\":4617:4651   */\n      0x42455032303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4597:4615   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4590:4652   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4668:4686   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4661:4696   */\n      mstore\n        /* \"#utility.yul\":4713:4732   */\n      0x84\n      add\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7240:7310  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_150\n        /* \"#utility.yul\":4337:4738   */\n      jump\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7240:7310  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7328:7351  recipient != address(0) */\n      dup3\n      and\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7320:7391  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4945:4947   */\n      0x20\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7320:7391  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4927:4948   */\n      mstore\n        /* \"#utility.yul\":4984:4986   */\n      0x23\n        /* \"#utility.yul\":4964:4982   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4957:4987   */\n      mstore\n        /* \"#utility.yul\":5023:5057   */\n      0x42455032303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5003:5021   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4996:5058   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5074:5092   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5067:5100   */\n      mstore\n        /* \"#utility.yul\":5117:5136   */\n      0x84\n      add\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7320:7391  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_150\n        /* \"#utility.yul\":4743:5142   */\n      jump\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7320:7391  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n    tag_165:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7402:7419  _balances[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7402:7411  _balances */\n      0x01\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7402:7419  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7402:7429  _balances[sender] -= amount */\n      dup1\n      sload\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7423:7429  amount */\n      dup4\n      swap3\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7402:7419  _balances[sender] */\n      swap1\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7402:7429  _balances[sender] -= amount */\n      tag_168\n      swap1\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7423:7429  amount */\n      dup5\n      swap1\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7402:7429  _balances[sender] -= amount */\n      tag_107\n      jump\t// in\n    tag_168:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7439:7459  _balances[recipient] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7439:7448  _balances */\n      0x01\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7439:7459  _balances[recipient] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7439:7469  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7463:7469  amount */\n      dup4\n      swap3\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7439:7459  _balances[recipient] */\n      swap1\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7439:7469  _balances[recipient] += amount */\n      tag_169\n      swap1\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7463:7469  amount */\n      dup5\n      swap1\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7439:7469  _balances[recipient] += amount */\n      tag_114\n      jump\t// in\n    tag_169:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7501:7510  recipient */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7484:7519  Transfer(sender, recipient, amount) */\n      and\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7493:7499  sender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7484:7519  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7512:7518  amount */\n      dup4\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7484:7519  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_160\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_120\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2237:2288   */\n      mstore\n        /* \"#utility.yul\":2210:2228   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_150\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7796:8058  function _mint(address account, uint256 amount) internal {... */\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7871:7892  account != address(0) */\n      dup3\n      and\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7863:7928  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5349:5351   */\n      0x20\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7863:7928  require(account != address(0), \"BEP20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5331:5352   */\n      mstore\n        /* \"#utility.yul\":5388:5390   */\n      0x1f\n        /* \"#utility.yul\":5368:5386   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5361:5391   */\n      mstore\n        /* \"#utility.yul\":5427:5460   */\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":5407:5425   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5400:5461   */\n      mstore\n        /* \"#utility.yul\":5478:5496   */\n      0x64\n      add\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7863:7928  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_150\n        /* \"#utility.yul\":5147:5502   */\n      jump\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7863:7928  require(account != address(0), \"BEP20: mint to the zero address\") */\n    tag_179:\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7955:7961  amount */\n      dup1\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7939:7951  _totalSupply */\n      0x03\n      0x00\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7939:7961  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_182\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_182:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7971:7989  _balances[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7971:7980  _balances */\n      0x01\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7971:7989  _balances[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7971:7999  _balances[account] += amount */\n      dup1\n      sload\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7993:7999  amount */\n      dup4\n      swap3\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7971:7989  _balances[account] */\n      swap1\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7971:7999  _balances[account] += amount */\n      tag_183\n      swap1\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7993:7999  amount */\n      dup5\n      swap1\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7971:7999  _balances[account] += amount */\n      tag_114\n      jump\t// in\n    tag_183:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"projects/bsc-library/contracts/BEP20.sol\":8014:8051  Transfer(address(0), account, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"projects/bsc-library/contracts/BEP20.sol\":8014:8051  Transfer(address(0), account, amount) */\n      dup4\n      and\n      swap1\n        /* \"projects/bsc-library/contracts/BEP20.sol\":8031:8032  0 */\n      0x00\n      swap1\n        /* \"projects/bsc-library/contracts/BEP20.sol\":8014:8051  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"projects/bsc-library/contracts/BEP20.sol\":8014:8051  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"projects/bsc-library/contracts/BEP20.sol\":7796:8058  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_25:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      0x20\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_189:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_191\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_189)\n    tag_191:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_185:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_133\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":745:999   */\n    tag_28:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_195\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_195:\n        /* \"#utility.yul\":913:942   */\n      tag_196\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_185\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_38:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_200:\n        /* \"#utility.yul\":1563:1592   */\n      tag_201\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_185\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_202\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_185\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_51:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_205:\n        /* \"#utility.yul\":2051:2080   */\n      tag_206\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_185\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2299:2479   */\n    tag_68:\n        /* \"#utility.yul\":2358:2364   */\n      0x00\n        /* \"#utility.yul\":2411:2413   */\n      0x20\n        /* \"#utility.yul\":2399:2408   */\n      dup3\n        /* \"#utility.yul\":2390:2397   */\n      dup5\n        /* \"#utility.yul\":2386:2409   */\n      sub\n        /* \"#utility.yul\":2382:2414   */\n      slt\n        /* \"#utility.yul\":2379:2431   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":2427:2428   */\n      0x00\n        /* \"#utility.yul\":2424:2425   */\n      dup1\n        /* \"#utility.yul\":2417:2429   */\n      revert\n        /* \"#utility.yul\":2379:2431   */\n    tag_209:\n      pop\n        /* \"#utility.yul\":2450:2473   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2299:2479   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2484:2744   */\n    tag_81:\n        /* \"#utility.yul\":2552:2558   */\n      0x00\n        /* \"#utility.yul\":2560:2566   */\n      dup1\n        /* \"#utility.yul\":2613:2615   */\n      0x40\n        /* \"#utility.yul\":2601:2610   */\n      dup4\n        /* \"#utility.yul\":2592:2599   */\n      dup6\n        /* \"#utility.yul\":2588:2611   */\n      sub\n        /* \"#utility.yul\":2584:2616   */\n      slt\n        /* \"#utility.yul\":2581:2633   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":2629:2630   */\n      0x00\n        /* \"#utility.yul\":2626:2627   */\n      dup1\n        /* \"#utility.yul\":2619:2631   */\n      revert\n        /* \"#utility.yul\":2581:2633   */\n    tag_211:\n        /* \"#utility.yul\":2652:2681   */\n      tag_212\n        /* \"#utility.yul\":2671:2680   */\n      dup4\n        /* \"#utility.yul\":2652:2681   */\n      tag_185\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2642:2681   */\n      swap2\n      pop\n        /* \"#utility.yul\":2700:2738   */\n      tag_213\n        /* \"#utility.yul\":2734:2736   */\n      0x20\n        /* \"#utility.yul\":2723:2732   */\n      dup5\n        /* \"#utility.yul\":2719:2737   */\n      add\n        /* \"#utility.yul\":2700:2738   */\n      tag_185\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":2690:2738   */\n      swap1\n      pop\n        /* \"#utility.yul\":2484:2744   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2749:3129   */\n    tag_89:\n        /* \"#utility.yul\":2828:2829   */\n      0x01\n        /* \"#utility.yul\":2824:2836   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2871:2883   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2892:2953   */\n      tag_215\n      jumpi\n        /* \"#utility.yul\":2946:2950   */\n      0x7f\n        /* \"#utility.yul\":2938:2944   */\n      dup3\n        /* \"#utility.yul\":2934:2951   */\n      and\n        /* \"#utility.yul\":2924:2951   */\n      swap2\n      pop\n        /* \"#utility.yul\":2892:2953   */\n    tag_215:\n        /* \"#utility.yul\":2999:3001   */\n      0x20\n        /* \"#utility.yul\":2991:2997   */\n      dup3\n        /* \"#utility.yul\":2988:3002   */\n      lt\n        /* \"#utility.yul\":2968:2986   */\n      dup2\n        /* \"#utility.yul\":2965:3003   */\n      sub\n        /* \"#utility.yul\":2962:3123   */\n      tag_216\n      jumpi\n        /* \"#utility.yul\":3045:3055   */\n      0x4e487b71\n        /* \"#utility.yul\":3040:3043   */\n      0xe0\n        /* \"#utility.yul\":3036:3056   */\n      shl\n        /* \"#utility.yul\":3033:3034   */\n      0x00\n        /* \"#utility.yul\":3026:3057   */\n      mstore\n        /* \"#utility.yul\":3080:3084   */\n      0x22\n        /* \"#utility.yul\":3077:3078   */\n      0x04\n        /* \"#utility.yul\":3070:3085   */\n      mstore\n        /* \"#utility.yul\":3108:3112   */\n      0x24\n        /* \"#utility.yul\":3105:3106   */\n      0x00\n        /* \"#utility.yul\":3098:3113   */\n      revert\n        /* \"#utility.yul\":2962:3123   */\n    tag_216:\n      pop\n        /* \"#utility.yul\":2749:3129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3134:3261   */\n    tag_186:\n        /* \"#utility.yul\":3195:3205   */\n      0x4e487b71\n        /* \"#utility.yul\":3190:3193   */\n      0xe0\n        /* \"#utility.yul\":3186:3206   */\n      shl\n        /* \"#utility.yul\":3183:3184   */\n      0x00\n        /* \"#utility.yul\":3176:3207   */\n      mstore\n        /* \"#utility.yul\":3226:3230   */\n      0x11\n        /* \"#utility.yul\":3223:3224   */\n      0x04\n        /* \"#utility.yul\":3216:3231   */\n      mstore\n        /* \"#utility.yul\":3250:3254   */\n      0x24\n        /* \"#utility.yul\":3247:3248   */\n      0x00\n        /* \"#utility.yul\":3240:3255   */\n      revert\n        /* \"#utility.yul\":3266:3394   */\n    tag_107:\n        /* \"#utility.yul\":3333:3342   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":3354:3365   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":3351:3388   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":3368:3386   */\n      tag_94\n      tag_186\n      jump\t// in\n        /* \"#utility.yul\":3399:3524   */\n    tag_114:\n        /* \"#utility.yul\":3464:3473   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3485:3495   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3482:3518   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":3498:3516   */\n      tag_94\n      tag_186\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220b3f861a81140af383fb365600c35593772517c3f14ae7a70979798d38ce80a1864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_489": {
									"entryPoint": null,
									"id": 489,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_412": {
									"entryPoint": null,
									"id": 412,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 152,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 584,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 231,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4322:5",
										"nodeType": "YulBlock",
										"src": "0:4322:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:5",
													"nodeType": "YulBlock",
													"src": "46:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:5",
																		"nodeType": "YulLiteral",
																		"src": "63:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:5",
																				"nodeType": "YulLiteral",
																				"src": "70:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:5",
																				"nodeType": "YulLiteral",
																				"src": "75:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:5"
																		},
																		"nativeSrc": "66:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:5"
																},
																"nativeSrc": "56:31:5",
																"nodeType": "YulFunctionCall",
																"src": "56:31:5"
															},
															"nativeSrc": "56:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:5",
																		"nodeType": "YulLiteral",
																		"src": "103:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:5",
																		"nodeType": "YulLiteral",
																		"src": "106:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:5"
																},
																"nativeSrc": "96:15:5",
																"nodeType": "YulFunctionCall",
																"src": "96:15:5"
															},
															"nativeSrc": "96:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:5",
																		"nodeType": "YulLiteral",
																		"src": "127:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:5",
																		"nodeType": "YulLiteral",
																		"src": "130:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:5"
																},
																"nativeSrc": "120:15:5",
																"nodeType": "YulFunctionCall",
																"src": "120:15:5"
															},
															"nativeSrc": "120:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:5"
											},
											{
												"body": {
													"nativeSrc": "210:780:5",
													"nodeType": "YulBlock",
													"src": "210:780:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:5",
																"nodeType": "YulBlock",
																"src": "259:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:5",
																					"nodeType": "YulLiteral",
																					"src": "268:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:5",
																					"nodeType": "YulLiteral",
																					"src": "271:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:5"
																			},
																			"nativeSrc": "261:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:5"
																		},
																		"nativeSrc": "261:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:5",
																						"nodeType": "YulLiteral",
																						"src": "246:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:5"
																				},
																				"nativeSrc": "234:17:5",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:5"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:5"
																		},
																		"nativeSrc": "230:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:5"
																},
																"nativeSrc": "223:35:5",
																"nodeType": "YulFunctionCall",
																"src": "223:35:5"
															},
															"nativeSrc": "220:55:5",
															"nodeType": "YulIf",
															"src": "220:55:5"
														},
														{
															"nativeSrc": "284:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "300:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "294:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:5"
																},
																"nativeSrc": "294:13:5",
																"nodeType": "YulFunctionCall",
																"src": "294:13:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "288:2:5",
																	"nodeType": "YulTypedName",
																	"src": "288:2:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "316:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "334:2:5",
																				"nodeType": "YulLiteral",
																				"src": "334:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "338:1:5",
																				"nodeType": "YulLiteral",
																				"src": "338:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "330:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:5"
																		},
																		"nativeSrc": "330:10:5",
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "342:1:5",
																		"nodeType": "YulLiteral",
																		"src": "342:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "326:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:5"
																},
																"nativeSrc": "326:18:5",
																"nodeType": "YulFunctionCall",
																"src": "326:18:5"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "320:2:5",
																	"nodeType": "YulTypedName",
																	"src": "320:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "367:22:5",
																"nodeType": "YulBlock",
																"src": "367:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "369:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:5"
																			},
																			"nativeSrc": "369:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:5"
																		},
																		"nativeSrc": "369:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "359:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:5"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "363:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "356:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:5"
																},
																"nativeSrc": "356:10:5",
																"nodeType": "YulFunctionCall",
																"src": "356:10:5"
															},
															"nativeSrc": "353:36:5",
															"nodeType": "YulIf",
															"src": "353:36:5"
														},
														{
															"nativeSrc": "398:17:5",
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "412:2:5",
																		"nodeType": "YulLiteral",
																		"src": "412:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "408:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:5"
																},
																"nativeSrc": "408:7:5",
																"nodeType": "YulFunctionCall",
																"src": "408:7:5"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "402:2:5",
																	"nodeType": "YulTypedName",
																	"src": "402:2:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "424:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "444:2:5",
																		"nodeType": "YulLiteral",
																		"src": "444:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "438:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:5"
																},
																"nativeSrc": "438:9:5",
																"nodeType": "YulFunctionCall",
																"src": "438:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "428:6:5",
																	"nodeType": "YulTypedName",
																	"src": "428:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "456:71:5",
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "478:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "502:2:5",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "506:4:5",
																										"nodeType": "YulLiteral",
																										"src": "506:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "498:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:5"
																								},
																								"nativeSrc": "498:13:5",
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:5"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "513:2:5",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "494:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:5"
																						},
																						"nativeSrc": "494:22:5",
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "518:2:5",
																						"nodeType": "YulLiteral",
																						"src": "518:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "490:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:5"
																				},
																				"nativeSrc": "490:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:5"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "523:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "486:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:5"
																		},
																		"nativeSrc": "486:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "474:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:5"
																},
																"nativeSrc": "474:53:5",
																"nodeType": "YulFunctionCall",
																"src": "474:53:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "460:10:5",
																	"nodeType": "YulTypedName",
																	"src": "460:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "586:22:5",
																"nodeType": "YulBlock",
																"src": "586:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "588:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:5"
																			},
																			"nativeSrc": "588:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:5"
																		},
																		"nativeSrc": "588:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "545:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:5"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "557:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "542:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:5"
																		},
																		"nativeSrc": "542:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "565:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "577:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "562:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:5"
																		},
																		"nativeSrc": "562:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "539:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:5"
																},
																"nativeSrc": "539:46:5",
																"nodeType": "YulFunctionCall",
																"src": "539:46:5"
															},
															"nativeSrc": "536:72:5",
															"nodeType": "YulIf",
															"src": "536:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "624:2:5",
																		"nodeType": "YulLiteral",
																		"src": "624:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "628:10:5",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "617:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:5"
																},
																"nativeSrc": "617:22:5",
																"nodeType": "YulFunctionCall",
																"src": "617:22:5"
															},
															"nativeSrc": "617:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "617:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "655:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "663:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "648:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:5"
																},
																"nativeSrc": "648:18:5",
																"nodeType": "YulFunctionCall",
																"src": "648:18:5"
															},
															"nativeSrc": "648:18:5",
															"nodeType": "YulExpressionStatement",
															"src": "648:18:5"
														},
														{
															"nativeSrc": "675:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "685:4:5",
																"nodeType": "YulLiteral",
																"src": "685:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "679:2:5",
																	"nodeType": "YulTypedName",
																	"src": "679:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "737:16:5",
																"nodeType": "YulBlock",
																"src": "737:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "746:1:5",
																					"nodeType": "YulLiteral",
																					"src": "746:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "749:1:5",
																					"nodeType": "YulLiteral",
																					"src": "749:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "739:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "739:6:5"
																			},
																			"nativeSrc": "739:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "739:12:5"
																		},
																		"nativeSrc": "739:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "739:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "712:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:5"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "720:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "708:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:5"
																				},
																				"nativeSrc": "708:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "725:4:5",
																				"nodeType": "YulLiteral",
																				"src": "725:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "704:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:5"
																		},
																		"nativeSrc": "704:26:5",
																		"nodeType": "YulFunctionCall",
																		"src": "704:26:5"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "732:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "732:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "701:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:5"
																},
																"nativeSrc": "701:35:5",
																"nodeType": "YulFunctionCall",
																"src": "701:35:5"
															},
															"nativeSrc": "698:55:5",
															"nodeType": "YulIf",
															"src": "698:55:5"
														},
														{
															"nativeSrc": "762:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "762:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "771:1:5",
																"nodeType": "YulLiteral",
																"src": "771:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "766:1:5",
																	"nodeType": "YulTypedName",
																	"src": "766:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "827:87:5",
																"nodeType": "YulBlock",
																"src": "827:87:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nativeSrc": "856:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "856:6:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "864:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "864:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "852:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "852:3:5"
																							},
																							"nativeSrc": "852:14:5",
																							"nodeType": "YulFunctionCall",
																							"src": "852:14:5"
																						},
																						{
																							"name": "_4",
																							"nativeSrc": "868:2:5",
																							"nodeType": "YulIdentifier",
																							"src": "868:2:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "848:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "848:3:5"
																					},
																					"nativeSrc": "848:23:5",
																					"nodeType": "YulFunctionCall",
																					"src": "848:23:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nativeSrc": "887:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "887:6:5"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "895:1:5",
																											"nodeType": "YulIdentifier",
																											"src": "895:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "883:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "883:3:5"
																									},
																									"nativeSrc": "883:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "883:14:5"
																								},
																								{
																									"name": "_4",
																									"nativeSrc": "899:2:5",
																									"nodeType": "YulIdentifier",
																									"src": "899:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "879:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "879:3:5"
																							},
																							"nativeSrc": "879:23:5",
																							"nodeType": "YulFunctionCall",
																							"src": "879:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "873:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "873:5:5"
																					},
																					"nativeSrc": "873:30:5",
																					"nodeType": "YulFunctionCall",
																					"src": "873:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "841:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "841:6:5"
																			},
																			"nativeSrc": "841:63:5",
																			"nodeType": "YulFunctionCall",
																			"src": "841:63:5"
																		},
																		"nativeSrc": "841:63:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "841:63:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "792:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "792:1:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "795:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "795:2:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "789:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "789:2:5"
																},
																"nativeSrc": "789:9:5",
																"nodeType": "YulFunctionCall",
																"src": "789:9:5"
															},
															"nativeSrc": "781:133:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "799:19:5",
																"nodeType": "YulBlock",
																"src": "799:19:5",
																"statements": [
																	{
																		"nativeSrc": "801:15:5",
																		"nodeType": "YulAssignment",
																		"src": "801:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "810:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "810:1:5"
																				},
																				{
																					"name": "_4",
																					"nativeSrc": "813:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "813:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "806:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "806:3:5"
																			},
																			"nativeSrc": "806:10:5",
																			"nodeType": "YulFunctionCall",
																			"src": "806:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "801:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "801:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "785:3:5",
																"nodeType": "YulBlock",
																"src": "785:3:5",
																"statements": []
															},
															"src": "781:133:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "938:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "938:6:5"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "946:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "946:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "934:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "934:3:5"
																				},
																				"nativeSrc": "934:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "934:15:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "951:4:5",
																				"nodeType": "YulLiteral",
																				"src": "951:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "930:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "930:3:5"
																		},
																		"nativeSrc": "930:26:5",
																		"nodeType": "YulFunctionCall",
																		"src": "930:26:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "958:1:5",
																		"nodeType": "YulLiteral",
																		"src": "958:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "923:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "923:6:5"
																},
																"nativeSrc": "923:37:5",
																"nodeType": "YulFunctionCall",
																"src": "923:37:5"
															},
															"nativeSrc": "923:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "923:37:5"
														},
														{
															"nativeSrc": "969:15:5",
															"nodeType": "YulAssignment",
															"src": "969:15:5",
															"value": {
																"name": "memPtr",
																"nativeSrc": "978:6:5",
																"nodeType": "YulIdentifier",
																"src": "978:6:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "969:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "969:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:844:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:5",
														"nodeType": "YulTypedName",
														"src": "184:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:5",
														"nodeType": "YulTypedName",
														"src": "192:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:5",
														"nodeType": "YulTypedName",
														"src": "200:5:5",
														"type": ""
													}
												],
												"src": "146:844:5"
											},
											{
												"body": {
													"nativeSrc": "1113:444:5",
													"nodeType": "YulBlock",
													"src": "1113:444:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1159:16:5",
																"nodeType": "YulBlock",
																"src": "1159:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1168:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1168:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1171:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1171:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1161:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1161:6:5"
																			},
																			"nativeSrc": "1161:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1161:12:5"
																		},
																		"nativeSrc": "1161:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1161:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1134:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1134:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1143:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1143:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1130:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1130:3:5"
																		},
																		"nativeSrc": "1130:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1130:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1155:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1155:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1126:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1126:3:5"
																},
																"nativeSrc": "1126:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1126:32:5"
															},
															"nativeSrc": "1123:52:5",
															"nodeType": "YulIf",
															"src": "1123:52:5"
														},
														{
															"nativeSrc": "1184:30:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1184:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1204:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1204:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1198:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1198:5:5"
																},
																"nativeSrc": "1198:16:5",
																"nodeType": "YulFunctionCall",
																"src": "1198:16:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1188:6:5",
																	"nodeType": "YulTypedName",
																	"src": "1188:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1223:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1223:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1241:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1241:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1245:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1245:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1237:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1237:3:5"
																		},
																		"nativeSrc": "1237:10:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1237:10:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1249:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1249:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1233:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1233:3:5"
																},
																"nativeSrc": "1233:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1233:18:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1227:2:5",
																	"nodeType": "YulTypedName",
																	"src": "1227:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1278:16:5",
																"nodeType": "YulBlock",
																"src": "1278:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1287:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1287:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1290:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1290:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1280:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1280:6:5"
																			},
																			"nativeSrc": "1280:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1280:12:5"
																		},
																		"nativeSrc": "1280:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1280:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1266:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1266:6:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1274:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "1274:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1263:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1263:2:5"
																},
																"nativeSrc": "1263:14:5",
																"nodeType": "YulFunctionCall",
																"src": "1263:14:5"
															},
															"nativeSrc": "1260:34:5",
															"nodeType": "YulIf",
															"src": "1260:34:5"
														},
														{
															"nativeSrc": "1303:71:5",
															"nodeType": "YulAssignment",
															"src": "1303:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:5"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1357:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1357:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1342:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1342:3:5"
																		},
																		"nativeSrc": "1342:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1342:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1366:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1366:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1313:28:5",
																	"nodeType": "YulIdentifier",
																	"src": "1313:28:5"
																},
																"nativeSrc": "1313:61:5",
																"nodeType": "YulFunctionCall",
																"src": "1313:61:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1303:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:5"
																}
															]
														},
														{
															"nativeSrc": "1383:41:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1383:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1409:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1409:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1420:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1420:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1405:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1405:3:5"
																		},
																		"nativeSrc": "1405:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1405:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1399:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1399:5:5"
																},
																"nativeSrc": "1399:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1399:25:5"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1387:8:5",
																	"nodeType": "YulTypedName",
																	"src": "1387:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1453:16:5",
																"nodeType": "YulBlock",
																"src": "1453:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1462:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1462:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1465:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1465:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1455:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1455:6:5"
																			},
																			"nativeSrc": "1455:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1455:12:5"
																		},
																		"nativeSrc": "1455:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1455:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1439:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "1439:8:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1449:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "1449:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1436:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1436:2:5"
																},
																"nativeSrc": "1436:16:5",
																"nodeType": "YulFunctionCall",
																"src": "1436:16:5"
															},
															"nativeSrc": "1433:36:5",
															"nodeType": "YulIf",
															"src": "1433:36:5"
														},
														{
															"nativeSrc": "1478:73:5",
															"nodeType": "YulAssignment",
															"src": "1478:73:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1521:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1521:9:5"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1532:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "1532:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1517:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1517:3:5"
																		},
																		"nativeSrc": "1517:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1517:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1543:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1543:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1488:28:5",
																	"nodeType": "YulIdentifier",
																	"src": "1488:28:5"
																},
																"nativeSrc": "1488:63:5",
																"nodeType": "YulFunctionCall",
																"src": "1488:63:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1478:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1478:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "995:562:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1071:9:5",
														"nodeType": "YulTypedName",
														"src": "1071:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1082:7:5",
														"nodeType": "YulTypedName",
														"src": "1082:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1094:6:5",
														"nodeType": "YulTypedName",
														"src": "1094:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1102:6:5",
														"nodeType": "YulTypedName",
														"src": "1102:6:5",
														"type": ""
													}
												],
												"src": "995:562:5"
											},
											{
												"body": {
													"nativeSrc": "1663:102:5",
													"nodeType": "YulBlock",
													"src": "1663:102:5",
													"statements": [
														{
															"nativeSrc": "1673:26:5",
															"nodeType": "YulAssignment",
															"src": "1673:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1685:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1685:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1696:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1696:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1681:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1681:3:5"
																},
																"nativeSrc": "1681:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1681:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1673:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1673:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1715:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1715:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1730:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1730:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1746:3:5",
																								"nodeType": "YulLiteral",
																								"src": "1746:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1751:1:5",
																								"nodeType": "YulLiteral",
																								"src": "1751:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1742:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1742:3:5"
																						},
																						"nativeSrc": "1742:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1742:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1755:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1755:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1738:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1738:3:5"
																				},
																				"nativeSrc": "1738:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1738:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1726:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1726:3:5"
																		},
																		"nativeSrc": "1726:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1726:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1708:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1708:6:5"
																},
																"nativeSrc": "1708:51:5",
																"nodeType": "YulFunctionCall",
																"src": "1708:51:5"
															},
															"nativeSrc": "1708:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "1708:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1562:203:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1632:9:5",
														"nodeType": "YulTypedName",
														"src": "1632:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1643:6:5",
														"nodeType": "YulTypedName",
														"src": "1643:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1654:4:5",
														"nodeType": "YulTypedName",
														"src": "1654:4:5",
														"type": ""
													}
												],
												"src": "1562:203:5"
											},
											{
												"body": {
													"nativeSrc": "1825:325:5",
													"nodeType": "YulBlock",
													"src": "1825:325:5",
													"statements": [
														{
															"nativeSrc": "1835:22:5",
															"nodeType": "YulAssignment",
															"src": "1835:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1849:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1849:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1852:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1852:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1845:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1845:3:5"
																},
																"nativeSrc": "1845:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1845:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1835:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1835:6:5"
																}
															]
														},
														{
															"nativeSrc": "1866:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1866:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1896:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1896:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1902:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1902:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1892:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1892:3:5"
																},
																"nativeSrc": "1892:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1892:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1870:18:5",
																	"nodeType": "YulTypedName",
																	"src": "1870:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1943:31:5",
																"nodeType": "YulBlock",
																"src": "1943:31:5",
																"statements": [
																	{
																		"nativeSrc": "1945:27:5",
																		"nodeType": "YulAssignment",
																		"src": "1945:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1959:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "1959:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1967:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1967:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1955:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1955:3:5"
																			},
																			"nativeSrc": "1955:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1955:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1945:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1945:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1923:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "1923:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1916:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1916:6:5"
																},
																"nativeSrc": "1916:26:5",
																"nodeType": "YulFunctionCall",
																"src": "1916:26:5"
															},
															"nativeSrc": "1913:61:5",
															"nodeType": "YulIf",
															"src": "1913:61:5"
														},
														{
															"body": {
																"nativeSrc": "2033:111:5",
																"nodeType": "YulBlock",
																"src": "2033:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2054:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2054:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2061:3:5",
																							"nodeType": "YulLiteral",
																							"src": "2061:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2066:10:5",
																							"nodeType": "YulLiteral",
																							"src": "2066:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2057:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2057:3:5"
																					},
																					"nativeSrc": "2057:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2057:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2047:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2047:6:5"
																			},
																			"nativeSrc": "2047:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2047:31:5"
																		},
																		"nativeSrc": "2047:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2047:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2098:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2098:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2101:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2101:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2091:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2091:6:5"
																			},
																			"nativeSrc": "2091:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2091:15:5"
																		},
																		"nativeSrc": "2091:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2091:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2126:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2126:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2129:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2129:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2119:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2119:6:5"
																			},
																			"nativeSrc": "2119:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2119:15:5"
																		},
																		"nativeSrc": "2119:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2119:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1989:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "1989:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2012:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2020:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2020:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2009:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2009:2:5"
																		},
																		"nativeSrc": "2009:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2009:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1986:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1986:2:5"
																},
																"nativeSrc": "1986:38:5",
																"nodeType": "YulFunctionCall",
																"src": "1986:38:5"
															},
															"nativeSrc": "1983:161:5",
															"nodeType": "YulIf",
															"src": "1983:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1770:380:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1805:4:5",
														"nodeType": "YulTypedName",
														"src": "1805:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1814:6:5",
														"nodeType": "YulTypedName",
														"src": "1814:6:5",
														"type": ""
													}
												],
												"src": "1770:380:5"
											},
											{
												"body": {
													"nativeSrc": "2211:65:5",
													"nodeType": "YulBlock",
													"src": "2211:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2228:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2228:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2231:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2231:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2221:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2221:6:5"
																},
																"nativeSrc": "2221:14:5",
																"nodeType": "YulFunctionCall",
																"src": "2221:14:5"
															},
															"nativeSrc": "2221:14:5",
															"nodeType": "YulExpressionStatement",
															"src": "2221:14:5"
														},
														{
															"nativeSrc": "2244:26:5",
															"nodeType": "YulAssignment",
															"src": "2244:26:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2262:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2262:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2265:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2265:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2252:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2252:9:5"
																},
																"nativeSrc": "2252:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2252:18:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2244:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2244:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "2155:121:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2194:3:5",
														"nodeType": "YulTypedName",
														"src": "2194:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2202:4:5",
														"nodeType": "YulTypedName",
														"src": "2202:4:5",
														"type": ""
													}
												],
												"src": "2155:121:5"
											},
											{
												"body": {
													"nativeSrc": "2362:437:5",
													"nodeType": "YulBlock",
													"src": "2362:437:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2395:398:5",
																"nodeType": "YulBlock",
																"src": "2395:398:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2416:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2416:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2419:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2419:5:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2409:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2409:6:5"
																			},
																			"nativeSrc": "2409:16:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2409:16:5"
																		},
																		"nativeSrc": "2409:16:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2409:16:5"
																	},
																	{
																		"nativeSrc": "2438:30:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2438:30:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2460:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2460:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2463:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2463:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2450:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2450:9:5"
																			},
																			"nativeSrc": "2450:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2450:18:5"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2442:4:5",
																				"nodeType": "YulTypedName",
																				"src": "2442:4:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2481:57:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2481:57:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2504:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "2504:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2514:1:5",
																							"nodeType": "YulLiteral",
																							"src": "2514:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2521:10:5",
																									"nodeType": "YulIdentifier",
																									"src": "2521:10:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2533:2:5",
																									"nodeType": "YulLiteral",
																									"src": "2533:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2517:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2517:3:5"
																							},
																							"nativeSrc": "2517:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2517:19:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2510:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2510:3:5"
																					},
																					"nativeSrc": "2510:27:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2510:27:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2500:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2500:3:5"
																			},
																			"nativeSrc": "2500:38:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2500:38:5"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2485:11:5",
																				"nodeType": "YulTypedName",
																				"src": "2485:11:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2575:23:5",
																			"nodeType": "YulBlock",
																			"src": "2575:23:5",
																			"statements": [
																				{
																					"nativeSrc": "2577:19:5",
																					"nodeType": "YulAssignment",
																					"src": "2577:19:5",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2592:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "2592:4:5"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2577:11:5",
																							"nodeType": "YulIdentifier",
																							"src": "2577:11:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2557:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "2557:10:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2569:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2569:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2554:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "2554:2:5"
																			},
																			"nativeSrc": "2554:20:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2554:20:5"
																		},
																		"nativeSrc": "2551:47:5",
																		"nodeType": "YulIf",
																		"src": "2551:47:5"
																	},
																	{
																		"nativeSrc": "2611:41:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2611:41:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2625:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "2625:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2635:1:5",
																							"nodeType": "YulLiteral",
																							"src": "2635:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2642:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2642:3:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2647:2:5",
																									"nodeType": "YulLiteral",
																									"src": "2647:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2638:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2638:3:5"
																							},
																							"nativeSrc": "2638:12:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2638:12:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2631:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2631:3:5"
																					},
																					"nativeSrc": "2631:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2631:20:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2621:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2621:3:5"
																			},
																			"nativeSrc": "2621:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2621:31:5"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2615:2:5",
																				"nodeType": "YulTypedName",
																				"src": "2615:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2665:24:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2665:24:5",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2678:11:5",
																			"nodeType": "YulIdentifier",
																			"src": "2678:11:5"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2669:5:5",
																				"nodeType": "YulTypedName",
																				"src": "2669:5:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2763:20:5",
																			"nodeType": "YulBlock",
																			"src": "2763:20:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2772:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "2772:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2779:1:5",
																								"nodeType": "YulLiteral",
																								"src": "2779:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2765:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "2765:6:5"
																						},
																						"nativeSrc": "2765:16:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2765:16:5"
																					},
																					"nativeSrc": "2765:16:5",
																					"nodeType": "YulExpressionStatement",
																					"src": "2765:16:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2713:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2713:5:5"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2720:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "2720:2:5"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2710:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "2710:2:5"
																			},
																			"nativeSrc": "2710:13:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2710:13:5"
																		},
																		"nativeSrc": "2702:81:5",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2724:26:5",
																			"nodeType": "YulBlock",
																			"src": "2724:26:5",
																			"statements": [
																				{
																					"nativeSrc": "2726:22:5",
																					"nodeType": "YulAssignment",
																					"src": "2726:22:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2739:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "2739:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2746:1:5",
																								"nodeType": "YulLiteral",
																								"src": "2746:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2735:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2735:3:5"
																						},
																						"nativeSrc": "2735:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2735:13:5"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2726:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "2726:5:5"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2706:3:5",
																			"nodeType": "YulBlock",
																			"src": "2706:3:5",
																			"statements": []
																		},
																		"src": "2702:81:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2378:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2378:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2383:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2383:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2375:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2375:2:5"
																},
																"nativeSrc": "2375:11:5",
																"nodeType": "YulFunctionCall",
																"src": "2375:11:5"
															},
															"nativeSrc": "2372:421:5",
															"nodeType": "YulIf",
															"src": "2372:421:5"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2281:518:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2334:5:5",
														"nodeType": "YulTypedName",
														"src": "2334:5:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2341:3:5",
														"nodeType": "YulTypedName",
														"src": "2341:3:5",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2346:10:5",
														"nodeType": "YulTypedName",
														"src": "2346:10:5",
														"type": ""
													}
												],
												"src": "2281:518:5"
											},
											{
												"body": {
													"nativeSrc": "2889:81:5",
													"nodeType": "YulBlock",
													"src": "2889:81:5",
													"statements": [
														{
															"nativeSrc": "2899:65:5",
															"nodeType": "YulAssignment",
															"src": "2899:65:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2914:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "2914:4:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2932:1:5",
																										"nodeType": "YulLiteral",
																										"src": "2932:1:5",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2935:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "2935:3:5"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2928:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2928:3:5"
																								},
																								"nativeSrc": "2928:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2928:11:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2945:1:5",
																										"nodeType": "YulLiteral",
																										"src": "2945:1:5",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2941:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2941:3:5"
																								},
																								"nativeSrc": "2941:6:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2941:6:5"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2924:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2924:3:5"
																						},
																						"nativeSrc": "2924:24:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2924:24:5"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2920:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2920:3:5"
																				},
																				"nativeSrc": "2920:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2920:29:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2910:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2910:3:5"
																		},
																		"nativeSrc": "2910:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2910:40:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2956:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2956:1:5",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2959:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2959:3:5"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2952:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2952:3:5"
																		},
																		"nativeSrc": "2952:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2952:11:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2907:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2907:2:5"
																},
																"nativeSrc": "2907:57:5",
																"nodeType": "YulFunctionCall",
																"src": "2907:57:5"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2899:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2899:4:5"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2804:166:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2866:4:5",
														"nodeType": "YulTypedName",
														"src": "2866:4:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2872:3:5",
														"nodeType": "YulTypedName",
														"src": "2872:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2880:4:5",
														"nodeType": "YulTypedName",
														"src": "2880:4:5",
														"type": ""
													}
												],
												"src": "2804:166:5"
											},
											{
												"body": {
													"nativeSrc": "3071:1249:5",
													"nodeType": "YulBlock",
													"src": "3071:1249:5",
													"statements": [
														{
															"nativeSrc": "3081:24:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3081:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3101:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3101:3:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3095:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "3095:5:5"
																},
																"nativeSrc": "3095:10:5",
																"nodeType": "YulFunctionCall",
																"src": "3095:10:5"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3085:6:5",
																	"nodeType": "YulTypedName",
																	"src": "3085:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3148:22:5",
																"nodeType": "YulBlock",
																"src": "3148:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3150:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "3150:16:5"
																			},
																			"nativeSrc": "3150:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3150:18:5"
																		},
																		"nativeSrc": "3150:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3150:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3120:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3120:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3136:2:5",
																						"nodeType": "YulLiteral",
																						"src": "3136:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3140:1:5",
																						"nodeType": "YulLiteral",
																						"src": "3140:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3132:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3132:3:5"
																				},
																				"nativeSrc": "3132:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3132:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3144:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3144:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3128:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3128:3:5"
																		},
																		"nativeSrc": "3128:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3128:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3117:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3117:2:5"
																},
																"nativeSrc": "3117:30:5",
																"nodeType": "YulFunctionCall",
																"src": "3117:30:5"
															},
															"nativeSrc": "3114:56:5",
															"nodeType": "YulIf",
															"src": "3114:56:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3223:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "3223:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3261:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "3261:4:5"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3255:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "3255:5:5"
																				},
																				"nativeSrc": "3255:11:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3255:11:5"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3229:25:5",
																			"nodeType": "YulIdentifier",
																			"src": "3229:25:5"
																		},
																		"nativeSrc": "3229:38:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3229:38:5"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3269:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3269:6:5"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "3179:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3179:43:5"
																},
																"nativeSrc": "3179:97:5",
																"nodeType": "YulFunctionCall",
																"src": "3179:97:5"
															},
															"nativeSrc": "3179:97:5",
															"nodeType": "YulExpressionStatement",
															"src": "3179:97:5"
														},
														{
															"nativeSrc": "3285:18:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3285:18:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3302:1:5",
																"nodeType": "YulLiteral",
																"src": "3302:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3289:9:5",
																	"nodeType": "YulTypedName",
																	"src": "3289:9:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3312:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3312:23:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3331:4:5",
																"nodeType": "YulLiteral",
																"src": "3331:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "3316:11:5",
																	"nodeType": "YulTypedName",
																	"src": "3316:11:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3344:17:5",
															"nodeType": "YulAssignment",
															"src": "3344:17:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3357:4:5",
																"nodeType": "YulLiteral",
																"src": "3357:4:5",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3344:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3344:9:5"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3407:656:5",
																		"nodeType": "YulBlock",
																		"src": "3407:656:5",
																		"statements": [
																			{
																				"nativeSrc": "3421:35:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3421:35:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3440:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3440:6:5"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3452:2:5",
																									"nodeType": "YulLiteral",
																									"src": "3452:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3448:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3448:3:5"
																							},
																							"nativeSrc": "3448:7:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3448:7:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3436:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3436:3:5"
																					},
																					"nativeSrc": "3436:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3436:20:5"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3425:7:5",
																						"nodeType": "YulTypedName",
																						"src": "3425:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3469:49:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3469:49:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3513:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3513:4:5"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3483:29:5",
																						"nodeType": "YulIdentifier",
																						"src": "3483:29:5"
																					},
																					"nativeSrc": "3483:35:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3483:35:5"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3473:6:5",
																						"nodeType": "YulTypedName",
																						"src": "3473:6:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3531:10:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3531:10:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3540:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3540:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3535:1:5",
																						"nodeType": "YulTypedName",
																						"src": "3535:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3618:172:5",
																					"nodeType": "YulBlock",
																					"src": "3618:172:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3643:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3643:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3661:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "3661:3:5"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3666:9:5",
																														"nodeType": "YulIdentifier",
																														"src": "3666:9:5"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3657:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "3657:3:5"
																												},
																												"nativeSrc": "3657:19:5",
																												"nodeType": "YulFunctionCall",
																												"src": "3657:19:5"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3651:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "3651:5:5"
																										},
																										"nativeSrc": "3651:26:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3651:26:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3636:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3636:6:5"
																								},
																								"nativeSrc": "3636:42:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3636:42:5"
																							},
																							"nativeSrc": "3636:42:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "3636:42:5"
																						},
																						{
																							"nativeSrc": "3695:24:5",
																							"nodeType": "YulAssignment",
																							"src": "3695:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3709:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3709:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3717:1:5",
																										"nodeType": "YulLiteral",
																										"src": "3717:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3705:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3705:3:5"
																								},
																								"nativeSrc": "3705:14:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3705:14:5"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3695:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3695:6:5"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3736:40:5",
																							"nodeType": "YulAssignment",
																							"src": "3736:40:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3753:9:5",
																										"nodeType": "YulIdentifier",
																										"src": "3753:9:5"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3764:11:5",
																										"nodeType": "YulIdentifier",
																										"src": "3764:11:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3749:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3749:3:5"
																								},
																								"nativeSrc": "3749:27:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3749:27:5"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3736:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "3736:9:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3565:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "3565:1:5"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3568:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "3568:7:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3562:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3562:2:5"
																					},
																					"nativeSrc": "3562:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3562:14:5"
																				},
																				"nativeSrc": "3554:236:5",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3577:28:5",
																					"nodeType": "YulBlock",
																					"src": "3577:28:5",
																					"statements": [
																						{
																							"nativeSrc": "3579:24:5",
																							"nodeType": "YulAssignment",
																							"src": "3579:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3588:1:5",
																										"nodeType": "YulIdentifier",
																										"src": "3588:1:5"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3591:11:5",
																										"nodeType": "YulIdentifier",
																										"src": "3591:11:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3584:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3584:3:5"
																								},
																								"nativeSrc": "3584:19:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3584:19:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3579:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "3579:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3558:3:5",
																					"nodeType": "YulBlock",
																					"src": "3558:3:5",
																					"statements": []
																				},
																				"src": "3554:236:5"
																			},
																			{
																				"body": {
																					"nativeSrc": "3838:166:5",
																					"nodeType": "YulBlock",
																					"src": "3838:166:5",
																					"statements": [
																						{
																							"nativeSrc": "3856:43:5",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3856:43:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3883:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "3883:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3888:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3888:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3879:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3879:3:5"
																										},
																										"nativeSrc": "3879:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3879:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3873:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3873:5:5"
																								},
																								"nativeSrc": "3873:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3873:26:5"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3860:9:5",
																									"nodeType": "YulTypedName",
																									"src": "3860:9:5",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3923:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3923:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3935:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3935:9:5"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3962:1:5",
																																				"nodeType": "YulLiteral",
																																				"src": "3962:1:5",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3965:6:5",
																																				"nodeType": "YulIdentifier",
																																				"src": "3965:6:5"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3958:3:5",
																																			"nodeType": "YulIdentifier",
																																			"src": "3958:3:5"
																																		},
																																		"nativeSrc": "3958:14:5",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3958:14:5"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3974:3:5",
																																		"nodeType": "YulLiteral",
																																		"src": "3974:3:5",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3954:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "3954:3:5"
																																},
																																"nativeSrc": "3954:24:5",
																																"nodeType": "YulFunctionCall",
																																"src": "3954:24:5"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3984:1:5",
																																		"nodeType": "YulLiteral",
																																		"src": "3984:1:5",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3980:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "3980:3:5"
																																},
																																"nativeSrc": "3980:6:5",
																																"nodeType": "YulFunctionCall",
																																"src": "3980:6:5"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3950:3:5",
																															"nodeType": "YulIdentifier",
																															"src": "3950:3:5"
																														},
																														"nativeSrc": "3950:37:5",
																														"nodeType": "YulFunctionCall",
																														"src": "3950:37:5"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3946:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "3946:3:5"
																												},
																												"nativeSrc": "3946:42:5",
																												"nodeType": "YulFunctionCall",
																												"src": "3946:42:5"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3931:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3931:3:5"
																										},
																										"nativeSrc": "3931:58:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3931:58:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3916:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3916:6:5"
																								},
																								"nativeSrc": "3916:74:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3916:74:5"
																							},
																							"nativeSrc": "3916:74:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "3916:74:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3809:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "3809:7:5"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3818:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3818:6:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3806:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3806:2:5"
																					},
																					"nativeSrc": "3806:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3806:19:5"
																				},
																				"nativeSrc": "3803:201:5",
																				"nodeType": "YulIf",
																				"src": "3803:201:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4024:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "4024:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "4038:1:5",
																											"nodeType": "YulLiteral",
																											"src": "4038:1:5",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "4041:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "4041:6:5"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "4034:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "4034:3:5"
																									},
																									"nativeSrc": "4034:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "4034:14:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4050:1:5",
																									"nodeType": "YulLiteral",
																									"src": "4050:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4030:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "4030:3:5"
																							},
																							"nativeSrc": "4030:22:5",
																							"nodeType": "YulFunctionCall",
																							"src": "4030:22:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4017:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4017:6:5"
																					},
																					"nativeSrc": "4017:36:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4017:36:5"
																				},
																				"nativeSrc": "4017:36:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "4017:36:5"
																			}
																		]
																	},
																	"nativeSrc": "3400:663:5",
																	"nodeType": "YulCase",
																	"src": "3400:663:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3405:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3405:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4080:234:5",
																		"nodeType": "YulBlock",
																		"src": "4080:234:5",
																		"statements": [
																			{
																				"nativeSrc": "4094:14:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4094:14:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4107:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4107:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "4098:5:5",
																						"nodeType": "YulTypedName",
																						"src": "4098:5:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4143:67:5",
																					"nodeType": "YulBlock",
																					"src": "4143:67:5",
																					"statements": [
																						{
																							"nativeSrc": "4161:35:5",
																							"nodeType": "YulAssignment",
																							"src": "4161:35:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4180:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "4180:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4185:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "4185:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4176:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "4176:3:5"
																										},
																										"nativeSrc": "4176:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "4176:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4170:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "4170:5:5"
																								},
																								"nativeSrc": "4170:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "4170:26:5"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "4161:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "4161:5:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "4124:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "4124:6:5"
																				},
																				"nativeSrc": "4121:89:5",
																				"nodeType": "YulIf",
																				"src": "4121:89:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4230:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "4230:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4289:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "4289:5:5"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4296:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "4296:6:5"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4236:52:5",
																								"nodeType": "YulIdentifier",
																								"src": "4236:52:5"
																							},
																							"nativeSrc": "4236:67:5",
																							"nodeType": "YulFunctionCall",
																							"src": "4236:67:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4223:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4223:6:5"
																					},
																					"nativeSrc": "4223:81:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4223:81:5"
																				},
																				"nativeSrc": "4223:81:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "4223:81:5"
																			}
																		]
																	},
																	"nativeSrc": "4072:242:5",
																	"nodeType": "YulCase",
																	"src": "4072:242:5",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3380:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3380:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3388:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3388:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3377:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3377:2:5"
																},
																"nativeSrc": "3377:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3377:14:5"
															},
															"nativeSrc": "3370:944:5",
															"nodeType": "YulSwitch",
															"src": "3370:944:5"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2975:1345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3056:4:5",
														"nodeType": "YulTypedName",
														"src": "3056:4:5",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3062:3:5",
														"nodeType": "YulTypedName",
														"src": "3062:3:5",
														"type": ""
													}
												],
												"src": "2975:1345:5"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162000d9238038062000d928339810160408190526200003391620001a8565b33806200005957604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b620000648162000098565b50600462000073838262000298565b50600562000082828262000298565b50506006805460ff191660121790555062000364565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126200010b575f80fd5b81516001600160401b0380821115620001285762000128620000e7565b604051601f8301601f19908116603f01168101908282118183101715620001535762000153620000e7565b816040528381526020925086602085880101111562000170575f80fd5b5f91505b8382101562000193578582018301518183018401529082019062000174565b5f602085830101528094505050505092915050565b5f8060408385031215620001ba575f80fd5b82516001600160401b0380821115620001d1575f80fd5b620001df86838701620000fb565b93506020850151915080821115620001f5575f80fd5b506200020485828601620000fb565b9150509250929050565b600181811c908216806200022357607f821691505b6020821081036200024257634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200029357805f5260205f20601f840160051c810160208510156200026f5750805b601f840160051c820191505b8181101562000290575f81556001016200027b565b50505b505050565b81516001600160401b03811115620002b457620002b4620000e7565b620002cc81620002c584546200020e565b8462000248565b602080601f83116001811462000302575f8415620002ea5750858301515b5f19600386901b1c1916600185901b1785556200035c565b5f85815260208120601f198616915b82811015620003325788860151825594840194600190910190840162000311565b50858210156200035057878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b610a2080620003725f395ff3fe608060405234801561000f575f80fd5b50600436106100fb575f3560e01c8063893d20e811610093578063a457c2d711610063578063a457c2d71461020e578063a9059cbb14610221578063dd62ed3e14610234578063f2fde38b1461026c575f80fd5b8063893d20e8146101bf5780638da5cb5b146101e357806395d89b41146101f3578063a0712d68146101fb575f80fd5b8063313ce567116100ce578063313ce56714610165578063395093511461017a57806370a082311461018d578063715018a6146101b5575f80fd5b806306fdde03146100ff578063095ea7b31461011d57806318160ddd1461014057806323b872dd14610152575b5f80fd5b61010761027f565b604051610114919061084d565b60405180910390f35b61013061012b3660046108af565b61030f565b6040519015158152602001610114565b6003545b604051908152602001610114565b6101306101603660046108d7565b610325565b60065460405160ff9091168152602001610114565b6101306101883660046108af565b610375565b61014461019b366004610910565b6001600160a01b03165f9081526001602052604090205490565b6101bd6103ab565b005b5f546001600160a01b03165b6040516001600160a01b039091168152602001610114565b5f546001600160a01b03166101cb565b6101076103be565b610130610209366004610930565b6103cd565b61013061021c3660046108af565b6103e9565b61013061022f3660046108af565b61041f565b610144610242366004610947565b6001600160a01b039182165f90815260026020908152604080832093909416825291909152205490565b6101bd61027a366004610910565b61042b565b60606004805461028e90610978565b80601f01602080910402602001604051908101604052809291908181526020018280546102ba90610978565b80156103055780601f106102dc57610100808354040283529160200191610305565b820191905f5260205f20905b8154815290600101906020018083116102e857829003601f168201915b5050505050905090565b5f61031b33848461046d565b5060015b92915050565b5f610331848484610591565b6001600160a01b0384165f9081526002602090815260408083203380855292529091205461036b9186916103669086906109c4565b61046d565b5060019392505050565b335f8181526002602090815260408083206001600160a01b0387168452909152812054909161031b9185906103669086906109d7565b6103b36106f6565b6103bc5f610722565b565b60606005805461028e90610978565b5f6103d66106f6565b6103e03383610771565b5060015b919050565b335f8181526002602090815260408083206001600160a01b0387168452909152812054909161031b9185906103669086906109c4565b5f61031b338484610591565b6104336106f6565b6001600160a01b03811661046157604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61046a81610722565b50565b6001600160a01b0383166104cf5760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610458565b6001600160a01b0382166105305760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610458565b6001600160a01b038381165f8181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166105f55760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610458565b6001600160a01b0382166106575760405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610458565b6001600160a01b0383165f908152600160205260408120805483929061067e9084906109c4565b90915550506001600160a01b0382165f90815260016020526040812080548392906106aa9084906109d7565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161058491815260200190565b5f546001600160a01b031633146103bc5760405163118cdaa760e01b8152336004820152602401610458565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0382166107c75760405162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610458565b8060035f8282546107d891906109d7565b90915550506001600160a01b0382165f90815260016020526040812080548392906108049084906109d7565b90915550506040518181526001600160a01b038316905f907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b5f602080835283518060208501525f5b818110156108795785810183015185820160400152820161085d565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146103e4575f80fd5b5f80604083850312156108c0575f80fd5b6108c983610899565b946020939093013593505050565b5f805f606084860312156108e9575f80fd5b6108f284610899565b925061090060208501610899565b9150604084013590509250925092565b5f60208284031215610920575f80fd5b61092982610899565b9392505050565b5f60208284031215610940575f80fd5b5035919050565b5f8060408385031215610958575f80fd5b61096183610899565b915061096f60208401610899565b90509250929050565b600181811c9082168061098c57607f821691505b6020821081036109aa57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561031f5761031f6109b0565b8082018082111561031f5761031f6109b056fea2646970667358221220b3f861a81140af383fb365600c35593772517c3f14ae7a70979798d38ce80a1864736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xD92 CODESIZE SUB DUP1 PUSH3 0xD92 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x1A8 JUMP JUMPDEST CALLER DUP1 PUSH3 0x59 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x64 DUP2 PUSH3 0x98 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x73 DUP4 DUP3 PUSH3 0x298 JUMP JUMPDEST POP PUSH1 0x5 PUSH3 0x82 DUP3 DUP3 PUSH3 0x298 JUMP JUMPDEST POP POP PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH3 0x364 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x10B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x128 JUMPI PUSH3 0x128 PUSH3 0xE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x153 JUMPI PUSH3 0x153 PUSH3 0xE7 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x170 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x193 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x174 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1BA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x1DF DUP7 DUP4 DUP8 ADD PUSH3 0xFB JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x1F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH3 0x204 DUP6 DUP3 DUP7 ADD PUSH3 0xFB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x223 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x242 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x293 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x26F JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x290 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x27B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2B4 JUMPI PUSH3 0x2B4 PUSH3 0xE7 JUMP JUMPDEST PUSH3 0x2CC DUP2 PUSH3 0x2C5 DUP5 SLOAD PUSH3 0x20E JUMP JUMPDEST DUP5 PUSH3 0x248 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x302 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x2EA JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x35C JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x332 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x311 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x350 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA20 DUP1 PUSH3 0x372 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x26C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x1FB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x152 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x107 PUSH2 0x27F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH2 0x12B CALLDATASIZE PUSH1 0x4 PUSH2 0x8AF JUMP JUMPDEST PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x130 PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0x8D7 JUMP JUMPDEST PUSH2 0x325 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x130 PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x8AF JUMP JUMPDEST PUSH2 0x375 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x910 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x3AB JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1CB JUMP JUMPDEST PUSH2 0x107 PUSH2 0x3BE JUMP JUMPDEST PUSH2 0x130 PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0x930 JUMP JUMPDEST PUSH2 0x3CD JUMP JUMPDEST PUSH2 0x130 PUSH2 0x21C CALLDATASIZE PUSH1 0x4 PUSH2 0x8AF JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST PUSH2 0x130 PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0x8AF JUMP JUMPDEST PUSH2 0x41F JUMP JUMPDEST PUSH2 0x144 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0x947 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0x910 JUMP JUMPDEST PUSH2 0x42B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x28E SWAP1 PUSH2 0x978 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2BA SWAP1 PUSH2 0x978 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x305 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x305 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x31B CALLER DUP5 DUP5 PUSH2 0x46D JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x331 DUP5 DUP5 DUP5 PUSH2 0x591 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x36B SWAP2 DUP7 SWAP2 PUSH2 0x366 SWAP1 DUP7 SWAP1 PUSH2 0x9C4 JUMP JUMPDEST PUSH2 0x46D JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x31B SWAP2 DUP6 SWAP1 PUSH2 0x366 SWAP1 DUP7 SWAP1 PUSH2 0x9D7 JUMP JUMPDEST PUSH2 0x3B3 PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x3BC PUSH0 PUSH2 0x722 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x28E SWAP1 PUSH2 0x978 JUMP JUMPDEST PUSH0 PUSH2 0x3D6 PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x3E0 CALLER DUP4 PUSH2 0x771 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x31B SWAP2 DUP6 SWAP1 PUSH2 0x366 SWAP1 DUP7 SWAP1 PUSH2 0x9C4 JUMP JUMPDEST PUSH0 PUSH2 0x31B CALLER DUP5 DUP5 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x433 PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x461 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x46A DUP2 PUSH2 0x722 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x657 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x67E SWAP1 DUP5 SWAP1 PUSH2 0x9C4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x6AA SWAP1 DUP5 SWAP1 PUSH2 0x9D7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x584 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x458 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x458 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7D8 SWAP2 SWAP1 PUSH2 0x9D7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x804 SWAP1 DUP5 SWAP1 PUSH2 0x9D7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x879 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x85D JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x8C9 DUP4 PUSH2 0x899 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x8F2 DUP5 PUSH2 0x899 JUMP JUMPDEST SWAP3 POP PUSH2 0x900 PUSH1 0x20 DUP6 ADD PUSH2 0x899 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x920 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x929 DUP3 PUSH2 0x899 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x940 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x958 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x961 DUP4 PUSH2 0x899 JUMP JUMPDEST SWAP2 POP PUSH2 0x96F PUSH1 0x20 DUP5 ADD PUSH2 0x899 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x98C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x9AA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x31F JUMPI PUSH2 0x31F PUSH2 0x9B0 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x31F JUMPI PUSH2 0x31F PUSH2 0x9B0 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xF8 PUSH2 0xA811 BLOCKHASH 0xAF CODESIZE EXTCODEHASH 0xB3 PUSH6 0x600C35593772 MLOAD PUSH29 0x3F14AE7A70979798D38CE80A1864736F6C634300081800330000000000 ",
							"sourceMap": "1401:8439:3:-:0;;;2041:177;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;735:10:2;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;1708:51:5;1681:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;2149:5:3::1;:12;2157:4:::0;2149:5;:12:::1;:::i;:::-;-1:-1:-1::0;2171:7:3::1;:16;2181:6:::0;2171:7;:16:::1;:::i;:::-;-1:-1:-1::0;;2197:9:3::1;:14:::0;;-1:-1:-1;;2197:14:3::1;2209:2;2197:14;::::0;;-1:-1:-1;1401:8439:3;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:127:5:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:844;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:5;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:5;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;732:3;725:4;720:2;712:6;708:15;704:26;701:35;698:55;;;749:1;746;739:12;698:55;771:1;762:10;;781:133;795:2;792:1;789:9;781:133;;;883:14;;;879:23;;873:30;852:14;;;848:23;;841:63;806:10;;;;781:133;;;958:1;951:4;946:2;938:6;934:15;930:26;923:37;978:6;969:15;;;;;;146:844;;;;:::o;995:562::-;1094:6;1102;1155:2;1143:9;1134:7;1130:23;1126:32;1123:52;;;1171:1;1168;1161:12;1123:52;1198:16;;-1:-1:-1;;;;;1263:14:5;;;1260:34;;;1290:1;1287;1280:12;1260:34;1313:61;1366:7;1357:6;1346:9;1342:22;1313:61;:::i;:::-;1303:71;;1420:2;1409:9;1405:18;1399:25;1383:41;;1449:2;1439:8;1436:16;1433:36;;;1465:1;1462;1455:12;1433:36;;1488:63;1543:7;1532:8;1521:9;1517:24;1488:63;:::i;:::-;1478:73;;;995:562;;;;;:::o;1770:380::-;1849:1;1845:12;;;;1892;;;1913:61;;1967:4;1959:6;1955:17;1945:27;;1913:61;2020:2;2012:6;2009:14;1989:18;1986:38;1983:161;;2066:10;2061:3;2057:20;2054:1;2047:31;2101:4;2098:1;2091:15;2129:4;2126:1;2119:15;1983:161;;1770:380;;;:::o;2281:518::-;2383:2;2378:3;2375:11;2372:421;;;2419:5;2416:1;2409:16;2463:4;2460:1;2450:18;2533:2;2521:10;2517:19;2514:1;2510:27;2504:4;2500:38;2569:4;2557:10;2554:20;2551:47;;;-1:-1:-1;2592:4:5;2551:47;2647:2;2642:3;2638:12;2635:1;2631:20;2625:4;2621:31;2611:41;;2702:81;2720:2;2713:5;2710:13;2702:81;;;2779:1;2765:16;;2746:1;2735:13;2702:81;;;2706:3;;2372:421;2281:518;;;:::o;2975:1345::-;3095:10;;-1:-1:-1;;;;;3117:30:5;;3114:56;;;3150:18;;:::i;:::-;3179:97;3269:6;3229:38;3261:4;3255:11;3229:38;:::i;:::-;3223:4;3179:97;:::i;:::-;3331:4;;3388:2;3377:14;;3405:1;3400:663;;;;4107:1;4124:6;4121:89;;;-1:-1:-1;4176:19:5;;;4170:26;4121:89;-1:-1:-1;;2932:1:5;2928:11;;;2924:24;2920:29;2910:40;2956:1;2952:11;;;2907:57;4223:81;;3370:944;;3400:663;2228:1;2221:14;;;2265:4;2252:18;;-1:-1:-1;;3436:20:5;;;3554:236;3568:7;3565:1;3562:14;3554:236;;;3657:19;;;3651:26;3636:42;;3749:27;;;;3717:1;3705:14;;;;3584:19;;3554:236;;;3558:3;3818:6;3809:7;3806:19;3803:201;;;3879:19;;;3873:26;-1:-1:-1;;3962:1:5;3958:14;;;3974:3;3954:24;3950:37;3946:42;3931:58;3916:74;;3803:201;;;4050:1;4041:6;4038:1;4034:14;4030:22;4024:4;4017:36;3370:944;;;;;2975:1345;;:::o;:::-;1401:8439:3;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_893": {
									"entryPoint": 1133,
									"id": 893,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1782,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_810": {
									"entryPoint": 1905,
									"id": 810,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_412": {
									"entryPoint": null,
									"id": 412,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1826,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_772": {
									"entryPoint": 1425,
									"id": 772,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_593": {
									"entryPoint": null,
									"id": 593,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_614": {
									"entryPoint": 783,
									"id": 614,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_554": {
									"entryPoint": null,
									"id": 554,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_520": {
									"entryPoint": null,
									"id": 520,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_704": {
									"entryPoint": 1001,
									"id": 704,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getOwner_500": {
									"entryPoint": null,
									"id": 500,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increaseAllowance_677": {
									"entryPoint": 885,
									"id": 677,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_723": {
									"entryPoint": 973,
									"id": 723,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_510": {
									"entryPoint": 639,
									"id": 510,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 939,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_530": {
									"entryPoint": 958,
									"id": 530,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_540": {
									"entryPoint": null,
									"id": 540,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_650": {
									"entryPoint": 805,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1067,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_575": {
									"entryPoint": 1055,
									"id": 575,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2480,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5504:5",
										"nodeType": "YulBlock",
										"src": "0:5504:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:427:5",
													"nodeType": "YulBlock",
													"src": "135:427:5",
													"statements": [
														{
															"nativeSrc": "145:12:5",
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:5",
															"value": {
																"kind": "number",
																"nativeSrc": "155:2:5",
																"nodeType": "YulLiteral",
																"src": "155:2:5",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "149:2:5",
																	"nodeType": "YulTypedName",
																	"src": "149:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "173:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "184:2:5",
																		"nodeType": "YulLiteral",
																		"src": "184:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "166:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:5"
																},
																"nativeSrc": "166:21:5",
																"nodeType": "YulFunctionCall",
																"src": "166:21:5"
															},
															"nativeSrc": "166:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "166:21:5"
														},
														{
															"nativeSrc": "196:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "216:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "210:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:5"
																},
																"nativeSrc": "210:13:5",
																"nodeType": "YulFunctionCall",
																"src": "210:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "200:6:5",
																	"nodeType": "YulTypedName",
																	"src": "200:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "243:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "254:2:5",
																				"nodeType": "YulLiteral",
																				"src": "254:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "239:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:5"
																		},
																		"nativeSrc": "239:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "259:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "232:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:5"
																},
																"nativeSrc": "232:34:5",
																"nodeType": "YulFunctionCall",
																"src": "232:34:5"
															},
															"nativeSrc": "232:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "232:34:5"
														},
														{
															"nativeSrc": "275:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "284:1:5",
																"nodeType": "YulLiteral",
																"src": "284:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "279:1:5",
																	"nodeType": "YulTypedName",
																	"src": "279:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:90:5",
																"nodeType": "YulBlock",
																"src": "344:90:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "373:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "384:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "369:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:5"
																							},
																							"nativeSrc": "369:17:5",
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "388:2:5",
																							"nodeType": "YulLiteral",
																							"src": "388:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "365:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:5"
																					},
																					"nativeSrc": "365:26:5",
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "407:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:5"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "415:1:5",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "403:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:5"
																									},
																									"nativeSrc": "403:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:5"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "419:2:5",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "399:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:5"
																							},
																							"nativeSrc": "399:23:5",
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "393:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:5"
																					},
																					"nativeSrc": "393:30:5",
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "358:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:5"
																			},
																			"nativeSrc": "358:66:5",
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:5"
																		},
																		"nativeSrc": "358:66:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "305:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "308:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "302:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:5"
																},
																"nativeSrc": "302:13:5",
																"nodeType": "YulFunctionCall",
																"src": "302:13:5"
															},
															"nativeSrc": "294:140:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "316:19:5",
																"nodeType": "YulBlock",
																"src": "316:19:5",
																"statements": [
																	{
																		"nativeSrc": "318:15:5",
																		"nodeType": "YulAssignment",
																		"src": "318:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "327:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:5"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "330:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "323:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:5"
																			},
																			"nativeSrc": "323:10:5",
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "318:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "298:3:5",
																"nodeType": "YulBlock",
																"src": "298:3:5",
																"statements": []
															},
															"src": "294:140:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "458:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "469:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "454:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:5"
																				},
																				"nativeSrc": "454:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "478:2:5",
																				"nodeType": "YulLiteral",
																				"src": "478:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "450:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:5"
																		},
																		"nativeSrc": "450:31:5",
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "483:1:5",
																		"nodeType": "YulLiteral",
																		"src": "483:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "443:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:5"
																},
																"nativeSrc": "443:42:5",
																"nodeType": "YulFunctionCall",
																"src": "443:42:5"
															},
															"nativeSrc": "443:42:5",
															"nodeType": "YulExpressionStatement",
															"src": "443:42:5"
														},
														{
															"nativeSrc": "494:62:5",
															"nodeType": "YulAssignment",
															"src": "494:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "510:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "529:6:5",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "537:2:5",
																								"nodeType": "YulLiteral",
																								"src": "537:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "525:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:5"
																						},
																						"nativeSrc": "525:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "546:2:5",
																								"nodeType": "YulLiteral",
																								"src": "546:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "542:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:5"
																						},
																						"nativeSrc": "542:7:5",
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "521:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:5"
																				},
																				"nativeSrc": "521:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "506:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:5"
																		},
																		"nativeSrc": "506:45:5",
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "553:2:5",
																		"nodeType": "YulLiteral",
																		"src": "553:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:5"
																},
																"nativeSrc": "502:54:5",
																"nodeType": "YulFunctionCall",
																"src": "502:54:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:548:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:5",
														"nodeType": "YulTypedName",
														"src": "104:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:5",
														"nodeType": "YulTypedName",
														"src": "115:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:5",
														"nodeType": "YulTypedName",
														"src": "126:4:5",
														"type": ""
													}
												],
												"src": "14:548:5"
											},
											{
												"body": {
													"nativeSrc": "616:124:5",
													"nodeType": "YulBlock",
													"src": "616:124:5",
													"statements": [
														{
															"nativeSrc": "626:29:5",
															"nodeType": "YulAssignment",
															"src": "626:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "648:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "635:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:5"
																},
																"nativeSrc": "635:20:5",
																"nodeType": "YulFunctionCall",
																"src": "635:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "626:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "718:16:5",
																"nodeType": "YulBlock",
																"src": "718:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "727:1:5",
																					"nodeType": "YulLiteral",
																					"src": "727:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "730:1:5",
																					"nodeType": "YulLiteral",
																					"src": "730:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "720:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:5"
																			},
																			"nativeSrc": "720:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:5"
																		},
																		"nativeSrc": "720:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "677:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "688:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "703:3:5",
																										"nodeType": "YulLiteral",
																										"src": "703:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "708:1:5",
																										"nodeType": "YulLiteral",
																										"src": "708:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "699:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:5"
																								},
																								"nativeSrc": "699:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "712:1:5",
																								"nodeType": "YulLiteral",
																								"src": "712:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "695:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:5"
																						},
																						"nativeSrc": "695:19:5",
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "684:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:5"
																				},
																				"nativeSrc": "684:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "674:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:5"
																		},
																		"nativeSrc": "674:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "667:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:5"
																},
																"nativeSrc": "667:50:5",
																"nodeType": "YulFunctionCall",
																"src": "667:50:5"
															},
															"nativeSrc": "664:70:5",
															"nodeType": "YulIf",
															"src": "664:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "567:173:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "595:6:5",
														"nodeType": "YulTypedName",
														"src": "595:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "606:5:5",
														"nodeType": "YulTypedName",
														"src": "606:5:5",
														"type": ""
													}
												],
												"src": "567:173:5"
											},
											{
												"body": {
													"nativeSrc": "832:167:5",
													"nodeType": "YulBlock",
													"src": "832:167:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "878:16:5",
																"nodeType": "YulBlock",
																"src": "878:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "887:1:5",
																					"nodeType": "YulLiteral",
																					"src": "887:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "890:1:5",
																					"nodeType": "YulLiteral",
																					"src": "890:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "880:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:5"
																			},
																			"nativeSrc": "880:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:5"
																		},
																		"nativeSrc": "880:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "853:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "862:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "849:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:5"
																		},
																		"nativeSrc": "849:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "874:2:5",
																		"nodeType": "YulLiteral",
																		"src": "874:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "845:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:5"
																},
																"nativeSrc": "845:32:5",
																"nodeType": "YulFunctionCall",
																"src": "845:32:5"
															},
															"nativeSrc": "842:52:5",
															"nodeType": "YulIf",
															"src": "842:52:5"
														},
														{
															"nativeSrc": "903:39:5",
															"nodeType": "YulAssignment",
															"src": "903:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "932:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "913:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:5"
																},
																"nativeSrc": "913:29:5",
																"nodeType": "YulFunctionCall",
																"src": "913:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "903:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:5"
																}
															]
														},
														{
															"nativeSrc": "951:42:5",
															"nodeType": "YulAssignment",
															"src": "951:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "978:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "989:2:5",
																				"nodeType": "YulLiteral",
																				"src": "989:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "974:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:5"
																		},
																		"nativeSrc": "974:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "961:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:5"
																},
																"nativeSrc": "961:32:5",
																"nodeType": "YulFunctionCall",
																"src": "961:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "951:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "745:254:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "790:9:5",
														"nodeType": "YulTypedName",
														"src": "790:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "801:7:5",
														"nodeType": "YulTypedName",
														"src": "801:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "813:6:5",
														"nodeType": "YulTypedName",
														"src": "813:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "821:6:5",
														"nodeType": "YulTypedName",
														"src": "821:6:5",
														"type": ""
													}
												],
												"src": "745:254:5"
											},
											{
												"body": {
													"nativeSrc": "1099:92:5",
													"nodeType": "YulBlock",
													"src": "1099:92:5",
													"statements": [
														{
															"nativeSrc": "1109:26:5",
															"nodeType": "YulAssignment",
															"src": "1109:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1121:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1132:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1117:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:5"
																},
																"nativeSrc": "1117:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1117:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1109:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1151:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1176:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1169:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:5"
																				},
																				"nativeSrc": "1169:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1162:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:5"
																		},
																		"nativeSrc": "1162:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1144:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:5"
																},
																"nativeSrc": "1144:41:5",
																"nodeType": "YulFunctionCall",
																"src": "1144:41:5"
															},
															"nativeSrc": "1144:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1004:187:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1068:9:5",
														"nodeType": "YulTypedName",
														"src": "1068:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1079:6:5",
														"nodeType": "YulTypedName",
														"src": "1079:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1090:4:5",
														"nodeType": "YulTypedName",
														"src": "1090:4:5",
														"type": ""
													}
												],
												"src": "1004:187:5"
											},
											{
												"body": {
													"nativeSrc": "1297:76:5",
													"nodeType": "YulBlock",
													"src": "1297:76:5",
													"statements": [
														{
															"nativeSrc": "1307:26:5",
															"nodeType": "YulAssignment",
															"src": "1307:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1319:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1330:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1315:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:5"
																},
																"nativeSrc": "1315:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1315:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1307:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1349:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1360:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1342:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:5"
																},
																"nativeSrc": "1342:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1342:25:5"
															},
															"nativeSrc": "1342:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1196:177:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1266:9:5",
														"nodeType": "YulTypedName",
														"src": "1266:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1277:6:5",
														"nodeType": "YulTypedName",
														"src": "1277:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1288:4:5",
														"nodeType": "YulTypedName",
														"src": "1288:4:5",
														"type": ""
													}
												],
												"src": "1196:177:5"
											},
											{
												"body": {
													"nativeSrc": "1482:224:5",
													"nodeType": "YulBlock",
													"src": "1482:224:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1528:16:5",
																"nodeType": "YulBlock",
																"src": "1528:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1537:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1540:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1530:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:5"
																			},
																			"nativeSrc": "1530:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:5"
																		},
																		"nativeSrc": "1530:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1503:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1512:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1499:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:5"
																		},
																		"nativeSrc": "1499:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1524:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1495:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:5"
																},
																"nativeSrc": "1495:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1495:32:5"
															},
															"nativeSrc": "1492:52:5",
															"nodeType": "YulIf",
															"src": "1492:52:5"
														},
														{
															"nativeSrc": "1553:39:5",
															"nodeType": "YulAssignment",
															"src": "1553:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1582:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1563:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:5"
																},
																"nativeSrc": "1563:29:5",
																"nodeType": "YulFunctionCall",
																"src": "1563:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1553:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:5"
																}
															]
														},
														{
															"nativeSrc": "1601:48:5",
															"nodeType": "YulAssignment",
															"src": "1601:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1634:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1645:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1630:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:5"
																		},
																		"nativeSrc": "1630:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1611:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:5"
																},
																"nativeSrc": "1611:38:5",
																"nodeType": "YulFunctionCall",
																"src": "1611:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1601:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:5"
																}
															]
														},
														{
															"nativeSrc": "1658:42:5",
															"nodeType": "YulAssignment",
															"src": "1658:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1685:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1696:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1681:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:5"
																		},
																		"nativeSrc": "1681:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1668:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:5"
																},
																"nativeSrc": "1668:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1668:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1658:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1378:328:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1432:9:5",
														"nodeType": "YulTypedName",
														"src": "1432:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1443:7:5",
														"nodeType": "YulTypedName",
														"src": "1443:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1455:6:5",
														"nodeType": "YulTypedName",
														"src": "1455:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1463:6:5",
														"nodeType": "YulTypedName",
														"src": "1463:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1471:6:5",
														"nodeType": "YulTypedName",
														"src": "1471:6:5",
														"type": ""
													}
												],
												"src": "1378:328:5"
											},
											{
												"body": {
													"nativeSrc": "1808:87:5",
													"nodeType": "YulBlock",
													"src": "1808:87:5",
													"statements": [
														{
															"nativeSrc": "1818:26:5",
															"nodeType": "YulAssignment",
															"src": "1818:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1830:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1841:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1826:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:5"
																},
																"nativeSrc": "1826:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1826:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1818:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1860:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1875:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1883:4:5",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1871:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:5"
																		},
																		"nativeSrc": "1871:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1853:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:5"
																},
																"nativeSrc": "1853:36:5",
																"nodeType": "YulFunctionCall",
																"src": "1853:36:5"
															},
															"nativeSrc": "1853:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1711:184:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1777:9:5",
														"nodeType": "YulTypedName",
														"src": "1777:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1788:6:5",
														"nodeType": "YulTypedName",
														"src": "1788:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1799:4:5",
														"nodeType": "YulTypedName",
														"src": "1799:4:5",
														"type": ""
													}
												],
												"src": "1711:184:5"
											},
											{
												"body": {
													"nativeSrc": "1970:116:5",
													"nodeType": "YulBlock",
													"src": "1970:116:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2016:16:5",
																"nodeType": "YulBlock",
																"src": "2016:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2025:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2028:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2018:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:5"
																			},
																			"nativeSrc": "2018:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:5"
																		},
																		"nativeSrc": "2018:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1991:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2000:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1987:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:5"
																		},
																		"nativeSrc": "1987:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2012:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1983:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:5"
																},
																"nativeSrc": "1983:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1983:32:5"
															},
															"nativeSrc": "1980:52:5",
															"nodeType": "YulIf",
															"src": "1980:52:5"
														},
														{
															"nativeSrc": "2041:39:5",
															"nodeType": "YulAssignment",
															"src": "2041:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2070:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2051:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:5"
																},
																"nativeSrc": "2051:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2051:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2041:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1900:186:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1936:9:5",
														"nodeType": "YulTypedName",
														"src": "1936:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1947:7:5",
														"nodeType": "YulTypedName",
														"src": "1947:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1959:6:5",
														"nodeType": "YulTypedName",
														"src": "1959:6:5",
														"type": ""
													}
												],
												"src": "1900:186:5"
											},
											{
												"body": {
													"nativeSrc": "2192:102:5",
													"nodeType": "YulBlock",
													"src": "2192:102:5",
													"statements": [
														{
															"nativeSrc": "2202:26:5",
															"nodeType": "YulAssignment",
															"src": "2202:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2214:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2214:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2225:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2225:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2210:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2210:3:5"
																},
																"nativeSrc": "2210:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2210:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2202:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2202:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2244:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2244:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2259:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2259:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2275:3:5",
																								"nodeType": "YulLiteral",
																								"src": "2275:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2280:1:5",
																								"nodeType": "YulLiteral",
																								"src": "2280:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2271:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2271:3:5"
																						},
																						"nativeSrc": "2271:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2271:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2284:1:5",
																						"nodeType": "YulLiteral",
																						"src": "2284:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2267:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2267:3:5"
																				},
																				"nativeSrc": "2267:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2267:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2255:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:5"
																		},
																		"nativeSrc": "2255:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2255:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2237:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2237:6:5"
																},
																"nativeSrc": "2237:51:5",
																"nodeType": "YulFunctionCall",
																"src": "2237:51:5"
															},
															"nativeSrc": "2237:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "2237:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2091:203:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2161:9:5",
														"nodeType": "YulTypedName",
														"src": "2161:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2172:6:5",
														"nodeType": "YulTypedName",
														"src": "2172:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2183:4:5",
														"nodeType": "YulTypedName",
														"src": "2183:4:5",
														"type": ""
													}
												],
												"src": "2091:203:5"
											},
											{
												"body": {
													"nativeSrc": "2369:110:5",
													"nodeType": "YulBlock",
													"src": "2369:110:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2415:16:5",
																"nodeType": "YulBlock",
																"src": "2415:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2424:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2424:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2427:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2427:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2417:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2417:6:5"
																			},
																			"nativeSrc": "2417:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2417:12:5"
																		},
																		"nativeSrc": "2417:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2417:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2390:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2390:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2399:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2399:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2386:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2386:3:5"
																		},
																		"nativeSrc": "2386:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2386:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2411:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2411:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2382:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2382:3:5"
																},
																"nativeSrc": "2382:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2382:32:5"
															},
															"nativeSrc": "2379:52:5",
															"nodeType": "YulIf",
															"src": "2379:52:5"
														},
														{
															"nativeSrc": "2440:33:5",
															"nodeType": "YulAssignment",
															"src": "2440:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2463:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2463:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2450:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2450:12:5"
																},
																"nativeSrc": "2450:23:5",
																"nodeType": "YulFunctionCall",
																"src": "2450:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2440:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2440:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2299:180:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2335:9:5",
														"nodeType": "YulTypedName",
														"src": "2335:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2346:7:5",
														"nodeType": "YulTypedName",
														"src": "2346:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2358:6:5",
														"nodeType": "YulTypedName",
														"src": "2358:6:5",
														"type": ""
													}
												],
												"src": "2299:180:5"
											},
											{
												"body": {
													"nativeSrc": "2571:173:5",
													"nodeType": "YulBlock",
													"src": "2571:173:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2617:16:5",
																"nodeType": "YulBlock",
																"src": "2617:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2626:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2626:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2629:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2629:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2619:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2619:6:5"
																			},
																			"nativeSrc": "2619:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2619:12:5"
																		},
																		"nativeSrc": "2619:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2619:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2592:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2592:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2601:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2601:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2588:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2588:3:5"
																		},
																		"nativeSrc": "2588:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2588:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2613:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2613:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2584:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2584:3:5"
																},
																"nativeSrc": "2584:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2584:32:5"
															},
															"nativeSrc": "2581:52:5",
															"nodeType": "YulIf",
															"src": "2581:52:5"
														},
														{
															"nativeSrc": "2642:39:5",
															"nodeType": "YulAssignment",
															"src": "2642:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2671:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2671:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2652:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2652:18:5"
																},
																"nativeSrc": "2652:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2652:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2642:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2642:6:5"
																}
															]
														},
														{
															"nativeSrc": "2690:48:5",
															"nodeType": "YulAssignment",
															"src": "2690:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2723:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2723:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2734:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2734:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2719:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2719:3:5"
																		},
																		"nativeSrc": "2719:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2719:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2700:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2700:18:5"
																},
																"nativeSrc": "2700:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2700:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2690:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2690:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2484:260:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2529:9:5",
														"nodeType": "YulTypedName",
														"src": "2529:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2540:7:5",
														"nodeType": "YulTypedName",
														"src": "2540:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2552:6:5",
														"nodeType": "YulTypedName",
														"src": "2552:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2560:6:5",
														"nodeType": "YulTypedName",
														"src": "2560:6:5",
														"type": ""
													}
												],
												"src": "2484:260:5"
											},
											{
												"body": {
													"nativeSrc": "2804:325:5",
													"nodeType": "YulBlock",
													"src": "2804:325:5",
													"statements": [
														{
															"nativeSrc": "2814:22:5",
															"nodeType": "YulAssignment",
															"src": "2814:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2828:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2828:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2831:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2831:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2824:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2824:3:5"
																},
																"nativeSrc": "2824:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2824:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2814:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2814:6:5"
																}
															]
														},
														{
															"nativeSrc": "2845:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2845:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2875:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2875:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2881:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2881:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2871:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2871:3:5"
																},
																"nativeSrc": "2871:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2871:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2849:18:5",
																	"nodeType": "YulTypedName",
																	"src": "2849:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2922:31:5",
																"nodeType": "YulBlock",
																"src": "2922:31:5",
																"statements": [
																	{
																		"nativeSrc": "2924:27:5",
																		"nodeType": "YulAssignment",
																		"src": "2924:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2938:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "2938:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2946:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2946:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2934:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2934:3:5"
																			},
																			"nativeSrc": "2934:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2934:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2924:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2924:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2902:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "2902:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2895:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2895:6:5"
																},
																"nativeSrc": "2895:26:5",
																"nodeType": "YulFunctionCall",
																"src": "2895:26:5"
															},
															"nativeSrc": "2892:61:5",
															"nodeType": "YulIf",
															"src": "2892:61:5"
														},
														{
															"body": {
																"nativeSrc": "3012:111:5",
																"nodeType": "YulBlock",
																"src": "3012:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3033:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3033:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3040:3:5",
																							"nodeType": "YulLiteral",
																							"src": "3040:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3045:10:5",
																							"nodeType": "YulLiteral",
																							"src": "3045:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3036:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3036:3:5"
																					},
																					"nativeSrc": "3036:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3036:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3026:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3026:6:5"
																			},
																			"nativeSrc": "3026:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3026:31:5"
																		},
																		"nativeSrc": "3026:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3026:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3077:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3077:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3080:4:5",
																					"nodeType": "YulLiteral",
																					"src": "3080:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3070:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3070:6:5"
																			},
																			"nativeSrc": "3070:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3070:15:5"
																		},
																		"nativeSrc": "3070:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3070:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3105:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3105:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3108:4:5",
																					"nodeType": "YulLiteral",
																					"src": "3108:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3098:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3098:6:5"
																			},
																			"nativeSrc": "3098:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3098:15:5"
																		},
																		"nativeSrc": "3098:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3098:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2968:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "2968:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2991:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2991:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2999:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2999:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2988:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2988:2:5"
																		},
																		"nativeSrc": "2988:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2988:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2965:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2965:2:5"
																},
																"nativeSrc": "2965:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2965:38:5"
															},
															"nativeSrc": "2962:161:5",
															"nodeType": "YulIf",
															"src": "2962:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2749:380:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2784:4:5",
														"nodeType": "YulTypedName",
														"src": "2784:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2793:6:5",
														"nodeType": "YulTypedName",
														"src": "2793:6:5",
														"type": ""
													}
												],
												"src": "2749:380:5"
											},
											{
												"body": {
													"nativeSrc": "3166:95:5",
													"nodeType": "YulBlock",
													"src": "3166:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3183:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3183:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3190:3:5",
																				"nodeType": "YulLiteral",
																				"src": "3190:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3195:10:5",
																				"nodeType": "YulLiteral",
																				"src": "3195:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3186:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3186:3:5"
																		},
																		"nativeSrc": "3186:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3186:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3176:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3176:6:5"
																},
																"nativeSrc": "3176:31:5",
																"nodeType": "YulFunctionCall",
																"src": "3176:31:5"
															},
															"nativeSrc": "3176:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "3176:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3223:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3223:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3226:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3226:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3216:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3216:6:5"
																},
																"nativeSrc": "3216:15:5",
																"nodeType": "YulFunctionCall",
																"src": "3216:15:5"
															},
															"nativeSrc": "3216:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "3216:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3247:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3247:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3250:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3250:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3240:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3240:6:5"
																},
																"nativeSrc": "3240:15:5",
																"nodeType": "YulFunctionCall",
																"src": "3240:15:5"
															},
															"nativeSrc": "3240:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "3240:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3134:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "3134:127:5"
											},
											{
												"body": {
													"nativeSrc": "3315:79:5",
													"nodeType": "YulBlock",
													"src": "3315:79:5",
													"statements": [
														{
															"nativeSrc": "3325:17:5",
															"nodeType": "YulAssignment",
															"src": "3325:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3337:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3337:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3340:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3340:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3333:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3333:3:5"
																},
																"nativeSrc": "3333:9:5",
																"nodeType": "YulFunctionCall",
																"src": "3333:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3325:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3325:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3366:22:5",
																"nodeType": "YulBlock",
																"src": "3366:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3368:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "3368:16:5"
																			},
																			"nativeSrc": "3368:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3368:18:5"
																		},
																		"nativeSrc": "3368:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3368:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3357:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "3357:4:5"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "3363:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3363:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3354:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3354:2:5"
																},
																"nativeSrc": "3354:11:5",
																"nodeType": "YulFunctionCall",
																"src": "3354:11:5"
															},
															"nativeSrc": "3351:37:5",
															"nodeType": "YulIf",
															"src": "3351:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "3266:128:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3297:1:5",
														"nodeType": "YulTypedName",
														"src": "3297:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3300:1:5",
														"nodeType": "YulTypedName",
														"src": "3300:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3306:4:5",
														"nodeType": "YulTypedName",
														"src": "3306:4:5",
														"type": ""
													}
												],
												"src": "3266:128:5"
											},
											{
												"body": {
													"nativeSrc": "3447:77:5",
													"nodeType": "YulBlock",
													"src": "3447:77:5",
													"statements": [
														{
															"nativeSrc": "3457:16:5",
															"nodeType": "YulAssignment",
															"src": "3457:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3468:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3468:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3471:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3471:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3464:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3464:3:5"
																},
																"nativeSrc": "3464:9:5",
																"nodeType": "YulFunctionCall",
																"src": "3464:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3457:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3457:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3496:22:5",
																"nodeType": "YulBlock",
																"src": "3496:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3498:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "3498:16:5"
																			},
																			"nativeSrc": "3498:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3498:18:5"
																		},
																		"nativeSrc": "3498:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3498:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3488:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3488:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3491:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3491:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3485:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3485:2:5"
																},
																"nativeSrc": "3485:10:5",
																"nodeType": "YulFunctionCall",
																"src": "3485:10:5"
															},
															"nativeSrc": "3482:36:5",
															"nodeType": "YulIf",
															"src": "3482:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3399:125:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3430:1:5",
														"nodeType": "YulTypedName",
														"src": "3430:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3433:1:5",
														"nodeType": "YulTypedName",
														"src": "3433:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3439:3:5",
														"nodeType": "YulTypedName",
														"src": "3439:3:5",
														"type": ""
													}
												],
												"src": "3399:125:5"
											},
											{
												"body": {
													"nativeSrc": "3703:226:5",
													"nodeType": "YulBlock",
													"src": "3703:226:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3720:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3720:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3731:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3731:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3713:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3713:6:5"
																},
																"nativeSrc": "3713:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3713:21:5"
															},
															"nativeSrc": "3713:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "3713:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3754:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3754:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3765:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3765:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3750:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3750:3:5"
																		},
																		"nativeSrc": "3750:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3750:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3770:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3770:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3743:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3743:6:5"
																},
																"nativeSrc": "3743:30:5",
																"nodeType": "YulFunctionCall",
																"src": "3743:30:5"
															},
															"nativeSrc": "3743:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "3743:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3793:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3793:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3804:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3804:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3789:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3789:3:5"
																		},
																		"nativeSrc": "3789:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3789:18:5"
																	},
																	{
																		"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "3809:34:5",
																		"nodeType": "YulLiteral",
																		"src": "3809:34:5",
																		"type": "",
																		"value": "BEP20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3782:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3782:6:5"
																},
																"nativeSrc": "3782:62:5",
																"nodeType": "YulFunctionCall",
																"src": "3782:62:5"
															},
															"nativeSrc": "3782:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "3782:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3864:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3864:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3875:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3875:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3860:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3860:3:5"
																		},
																		"nativeSrc": "3860:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3860:18:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "3880:6:5",
																		"nodeType": "YulLiteral",
																		"src": "3880:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3853:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3853:6:5"
																},
																"nativeSrc": "3853:34:5",
																"nodeType": "YulFunctionCall",
																"src": "3853:34:5"
															},
															"nativeSrc": "3853:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "3853:34:5"
														},
														{
															"nativeSrc": "3896:27:5",
															"nodeType": "YulAssignment",
															"src": "3896:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3908:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3908:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3919:3:5",
																		"nodeType": "YulLiteral",
																		"src": "3919:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3904:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3904:3:5"
																},
																"nativeSrc": "3904:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3904:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3896:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3896:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3529:400:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3680:9:5",
														"nodeType": "YulTypedName",
														"src": "3680:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3694:4:5",
														"nodeType": "YulTypedName",
														"src": "3694:4:5",
														"type": ""
													}
												],
												"src": "3529:400:5"
											},
											{
												"body": {
													"nativeSrc": "4108:224:5",
													"nodeType": "YulBlock",
													"src": "4108:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4125:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4125:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4136:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4136:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4118:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4118:6:5"
																},
																"nativeSrc": "4118:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4118:21:5"
															},
															"nativeSrc": "4118:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4118:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4159:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4159:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4170:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4170:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4155:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4155:3:5"
																		},
																		"nativeSrc": "4155:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4155:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4175:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4175:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4148:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4148:6:5"
																},
																"nativeSrc": "4148:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4148:30:5"
															},
															"nativeSrc": "4148:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "4148:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4198:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4198:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4209:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4209:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4194:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4194:3:5"
																		},
																		"nativeSrc": "4194:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4194:18:5"
																	},
																	{
																		"hexValue": "42455032303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "4214:34:5",
																		"nodeType": "YulLiteral",
																		"src": "4214:34:5",
																		"type": "",
																		"value": "BEP20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4187:6:5"
																},
																"nativeSrc": "4187:62:5",
																"nodeType": "YulFunctionCall",
																"src": "4187:62:5"
															},
															"nativeSrc": "4187:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "4187:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4269:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4269:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4280:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4280:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4265:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4265:3:5"
																		},
																		"nativeSrc": "4265:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4265:18:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "4285:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4285:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4258:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4258:6:5"
																},
																"nativeSrc": "4258:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4258:32:5"
															},
															"nativeSrc": "4258:32:5",
															"nodeType": "YulExpressionStatement",
															"src": "4258:32:5"
														},
														{
															"nativeSrc": "4299:27:5",
															"nodeType": "YulAssignment",
															"src": "4299:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4311:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4311:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4322:3:5",
																		"nodeType": "YulLiteral",
																		"src": "4322:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4307:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4307:3:5"
																},
																"nativeSrc": "4307:19:5",
																"nodeType": "YulFunctionCall",
																"src": "4307:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4299:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4299:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3934:398:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4085:9:5",
														"nodeType": "YulTypedName",
														"src": "4085:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4099:4:5",
														"nodeType": "YulTypedName",
														"src": "4099:4:5",
														"type": ""
													}
												],
												"src": "3934:398:5"
											},
											{
												"body": {
													"nativeSrc": "4511:227:5",
													"nodeType": "YulBlock",
													"src": "4511:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4528:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4528:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4539:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4539:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4521:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4521:6:5"
																},
																"nativeSrc": "4521:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4521:21:5"
															},
															"nativeSrc": "4521:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4521:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4562:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4562:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4573:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4573:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4558:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4558:3:5"
																		},
																		"nativeSrc": "4558:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4558:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4578:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4578:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4551:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4551:6:5"
																},
																"nativeSrc": "4551:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4551:30:5"
															},
															"nativeSrc": "4551:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "4551:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4601:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4601:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4612:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4612:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4597:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4597:3:5"
																		},
																		"nativeSrc": "4597:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4597:18:5"
																	},
																	{
																		"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "4617:34:5",
																		"nodeType": "YulLiteral",
																		"src": "4617:34:5",
																		"type": "",
																		"value": "BEP20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4590:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4590:6:5"
																},
																"nativeSrc": "4590:62:5",
																"nodeType": "YulFunctionCall",
																"src": "4590:62:5"
															},
															"nativeSrc": "4590:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "4590:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4672:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4672:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4683:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4683:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4668:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4668:3:5"
																		},
																		"nativeSrc": "4668:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4668:18:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "4688:7:5",
																		"nodeType": "YulLiteral",
																		"src": "4688:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4661:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4661:6:5"
																},
																"nativeSrc": "4661:35:5",
																"nodeType": "YulFunctionCall",
																"src": "4661:35:5"
															},
															"nativeSrc": "4661:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "4661:35:5"
														},
														{
															"nativeSrc": "4705:27:5",
															"nodeType": "YulAssignment",
															"src": "4705:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4717:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4717:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4728:3:5",
																		"nodeType": "YulLiteral",
																		"src": "4728:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4713:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4713:3:5"
																},
																"nativeSrc": "4713:19:5",
																"nodeType": "YulFunctionCall",
																"src": "4713:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4705:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4705:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4337:401:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4488:9:5",
														"nodeType": "YulTypedName",
														"src": "4488:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4502:4:5",
														"nodeType": "YulTypedName",
														"src": "4502:4:5",
														"type": ""
													}
												],
												"src": "4337:401:5"
											},
											{
												"body": {
													"nativeSrc": "4917:225:5",
													"nodeType": "YulBlock",
													"src": "4917:225:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4934:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4934:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4945:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4945:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4927:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4927:6:5"
																},
																"nativeSrc": "4927:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4927:21:5"
															},
															"nativeSrc": "4927:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4927:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4968:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4968:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4979:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4979:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4964:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4964:3:5"
																		},
																		"nativeSrc": "4964:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4964:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4984:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4984:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4957:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4957:6:5"
																},
																"nativeSrc": "4957:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4957:30:5"
															},
															"nativeSrc": "4957:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "4957:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5007:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5007:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5018:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5018:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5003:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5003:3:5"
																		},
																		"nativeSrc": "5003:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5003:18:5"
																	},
																	{
																		"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "5023:34:5",
																		"nodeType": "YulLiteral",
																		"src": "5023:34:5",
																		"type": "",
																		"value": "BEP20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4996:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4996:6:5"
																},
																"nativeSrc": "4996:62:5",
																"nodeType": "YulFunctionCall",
																"src": "4996:62:5"
															},
															"nativeSrc": "4996:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "4996:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5078:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5078:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5089:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5089:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5074:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5074:3:5"
																		},
																		"nativeSrc": "5074:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5074:18:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "5094:5:5",
																		"nodeType": "YulLiteral",
																		"src": "5094:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5067:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5067:6:5"
																},
																"nativeSrc": "5067:33:5",
																"nodeType": "YulFunctionCall",
																"src": "5067:33:5"
															},
															"nativeSrc": "5067:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "5067:33:5"
														},
														{
															"nativeSrc": "5109:27:5",
															"nodeType": "YulAssignment",
															"src": "5109:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5121:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5121:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5132:3:5",
																		"nodeType": "YulLiteral",
																		"src": "5132:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5117:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5117:3:5"
																},
																"nativeSrc": "5117:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5117:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5109:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5109:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4743:399:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4894:9:5",
														"nodeType": "YulTypedName",
														"src": "4894:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4908:4:5",
														"nodeType": "YulTypedName",
														"src": "4908:4:5",
														"type": ""
													}
												],
												"src": "4743:399:5"
											},
											{
												"body": {
													"nativeSrc": "5321:181:5",
													"nodeType": "YulBlock",
													"src": "5321:181:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5338:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5338:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5349:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5349:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5331:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5331:6:5"
																},
																"nativeSrc": "5331:21:5",
																"nodeType": "YulFunctionCall",
																"src": "5331:21:5"
															},
															"nativeSrc": "5331:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "5331:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5372:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5372:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5383:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5383:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5368:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5368:3:5"
																		},
																		"nativeSrc": "5368:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5368:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5388:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5388:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5361:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5361:6:5"
																},
																"nativeSrc": "5361:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5361:30:5"
															},
															"nativeSrc": "5361:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "5361:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5411:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5411:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5422:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5422:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5407:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5407:3:5"
																		},
																		"nativeSrc": "5407:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5407:18:5"
																	},
																	{
																		"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "5427:33:5",
																		"nodeType": "YulLiteral",
																		"src": "5427:33:5",
																		"type": "",
																		"value": "BEP20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5400:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5400:6:5"
																},
																"nativeSrc": "5400:61:5",
																"nodeType": "YulFunctionCall",
																"src": "5400:61:5"
															},
															"nativeSrc": "5400:61:5",
															"nodeType": "YulExpressionStatement",
															"src": "5400:61:5"
														},
														{
															"nativeSrc": "5470:26:5",
															"nodeType": "YulAssignment",
															"src": "5470:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5482:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5482:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5493:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5493:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5478:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5478:3:5"
																},
																"nativeSrc": "5478:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5478:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5470:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5470:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5147:355:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5298:9:5",
														"nodeType": "YulTypedName",
														"src": "5298:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5312:4:5",
														"nodeType": "YulTypedName",
														"src": "5312:4:5",
														"type": ""
													}
												],
												"src": "5147:355:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"BEP20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"BEP20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"BEP20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"BEP20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"BEP20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100fb575f3560e01c8063893d20e811610093578063a457c2d711610063578063a457c2d71461020e578063a9059cbb14610221578063dd62ed3e14610234578063f2fde38b1461026c575f80fd5b8063893d20e8146101bf5780638da5cb5b146101e357806395d89b41146101f3578063a0712d68146101fb575f80fd5b8063313ce567116100ce578063313ce56714610165578063395093511461017a57806370a082311461018d578063715018a6146101b5575f80fd5b806306fdde03146100ff578063095ea7b31461011d57806318160ddd1461014057806323b872dd14610152575b5f80fd5b61010761027f565b604051610114919061084d565b60405180910390f35b61013061012b3660046108af565b61030f565b6040519015158152602001610114565b6003545b604051908152602001610114565b6101306101603660046108d7565b610325565b60065460405160ff9091168152602001610114565b6101306101883660046108af565b610375565b61014461019b366004610910565b6001600160a01b03165f9081526001602052604090205490565b6101bd6103ab565b005b5f546001600160a01b03165b6040516001600160a01b039091168152602001610114565b5f546001600160a01b03166101cb565b6101076103be565b610130610209366004610930565b6103cd565b61013061021c3660046108af565b6103e9565b61013061022f3660046108af565b61041f565b610144610242366004610947565b6001600160a01b039182165f90815260026020908152604080832093909416825291909152205490565b6101bd61027a366004610910565b61042b565b60606004805461028e90610978565b80601f01602080910402602001604051908101604052809291908181526020018280546102ba90610978565b80156103055780601f106102dc57610100808354040283529160200191610305565b820191905f5260205f20905b8154815290600101906020018083116102e857829003601f168201915b5050505050905090565b5f61031b33848461046d565b5060015b92915050565b5f610331848484610591565b6001600160a01b0384165f9081526002602090815260408083203380855292529091205461036b9186916103669086906109c4565b61046d565b5060019392505050565b335f8181526002602090815260408083206001600160a01b0387168452909152812054909161031b9185906103669086906109d7565b6103b36106f6565b6103bc5f610722565b565b60606005805461028e90610978565b5f6103d66106f6565b6103e03383610771565b5060015b919050565b335f8181526002602090815260408083206001600160a01b0387168452909152812054909161031b9185906103669086906109c4565b5f61031b338484610591565b6104336106f6565b6001600160a01b03811661046157604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61046a81610722565b50565b6001600160a01b0383166104cf5760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610458565b6001600160a01b0382166105305760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610458565b6001600160a01b038381165f8181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166105f55760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610458565b6001600160a01b0382166106575760405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610458565b6001600160a01b0383165f908152600160205260408120805483929061067e9084906109c4565b90915550506001600160a01b0382165f90815260016020526040812080548392906106aa9084906109d7565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161058491815260200190565b5f546001600160a01b031633146103bc5760405163118cdaa760e01b8152336004820152602401610458565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0382166107c75760405162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610458565b8060035f8282546107d891906109d7565b90915550506001600160a01b0382165f90815260016020526040812080548392906108049084906109d7565b90915550506040518181526001600160a01b038316905f907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b5f602080835283518060208501525f5b818110156108795785810183015185820160400152820161085d565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146103e4575f80fd5b5f80604083850312156108c0575f80fd5b6108c983610899565b946020939093013593505050565b5f805f606084860312156108e9575f80fd5b6108f284610899565b925061090060208501610899565b9150604084013590509250925092565b5f60208284031215610920575f80fd5b61092982610899565b9392505050565b5f60208284031215610940575f80fd5b5035919050565b5f8060408385031215610958575f80fd5b61096183610899565b915061096f60208401610899565b90509250929050565b600181811c9082168061098c57607f821691505b6020821081036109aa57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561031f5761031f6109b0565b8082018082111561031f5761031f6109b056fea2646970667358221220b3f861a81140af383fb365600c35593772517c3f14ae7a70979798d38ce80a1864736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x26C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x1FB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x152 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x107 PUSH2 0x27F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH2 0x12B CALLDATASIZE PUSH1 0x4 PUSH2 0x8AF JUMP JUMPDEST PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x130 PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0x8D7 JUMP JUMPDEST PUSH2 0x325 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x130 PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x8AF JUMP JUMPDEST PUSH2 0x375 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x910 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x3AB JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1CB JUMP JUMPDEST PUSH2 0x107 PUSH2 0x3BE JUMP JUMPDEST PUSH2 0x130 PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0x930 JUMP JUMPDEST PUSH2 0x3CD JUMP JUMPDEST PUSH2 0x130 PUSH2 0x21C CALLDATASIZE PUSH1 0x4 PUSH2 0x8AF JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST PUSH2 0x130 PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0x8AF JUMP JUMPDEST PUSH2 0x41F JUMP JUMPDEST PUSH2 0x144 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0x947 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0x910 JUMP JUMPDEST PUSH2 0x42B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x28E SWAP1 PUSH2 0x978 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2BA SWAP1 PUSH2 0x978 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x305 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x305 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x31B CALLER DUP5 DUP5 PUSH2 0x46D JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x331 DUP5 DUP5 DUP5 PUSH2 0x591 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x36B SWAP2 DUP7 SWAP2 PUSH2 0x366 SWAP1 DUP7 SWAP1 PUSH2 0x9C4 JUMP JUMPDEST PUSH2 0x46D JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x31B SWAP2 DUP6 SWAP1 PUSH2 0x366 SWAP1 DUP7 SWAP1 PUSH2 0x9D7 JUMP JUMPDEST PUSH2 0x3B3 PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x3BC PUSH0 PUSH2 0x722 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x28E SWAP1 PUSH2 0x978 JUMP JUMPDEST PUSH0 PUSH2 0x3D6 PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x3E0 CALLER DUP4 PUSH2 0x771 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x31B SWAP2 DUP6 SWAP1 PUSH2 0x366 SWAP1 DUP7 SWAP1 PUSH2 0x9C4 JUMP JUMPDEST PUSH0 PUSH2 0x31B CALLER DUP5 DUP5 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x433 PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x461 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x46A DUP2 PUSH2 0x722 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x657 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x458 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x67E SWAP1 DUP5 SWAP1 PUSH2 0x9C4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x6AA SWAP1 DUP5 SWAP1 PUSH2 0x9D7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x584 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x458 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x458 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7D8 SWAP2 SWAP1 PUSH2 0x9D7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x804 SWAP1 DUP5 SWAP1 PUSH2 0x9D7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x879 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x85D JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x8C9 DUP4 PUSH2 0x899 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x8F2 DUP5 PUSH2 0x899 JUMP JUMPDEST SWAP3 POP PUSH2 0x900 PUSH1 0x20 DUP6 ADD PUSH2 0x899 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x920 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x929 DUP3 PUSH2 0x899 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x940 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x958 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x961 DUP4 PUSH2 0x899 JUMP JUMPDEST SWAP2 POP PUSH2 0x96F PUSH1 0x20 DUP5 ADD PUSH2 0x899 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x98C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x9AA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x31F JUMPI PUSH2 0x31F PUSH2 0x9B0 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x31F JUMPI PUSH2 0x31F PUSH2 0x9B0 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xF8 PUSH2 0xA811 BLOCKHASH 0xAF CODESIZE EXTCODEHASH 0xB3 PUSH6 0x600C35593772 MLOAD PUSH29 0x3F14AE7A70979798D38CE80A1864736F6C634300081800330000000000 ",
							"sourceMap": "1401:8439:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2431:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3903:180;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:5;;1162:22;1144:41;;1132:2;1117:18;3903:180:3;1004:187:5;2886:98:3;2965:12;;2886:98;;;1342:25:5;;;1330:2;1315:18;2886:98:3;1196:177:5;4540:338:3;;;;;;:::i;:::-;;:::i;2583:90::-;2657:9;;2583:90;;2657:9;;;;1853:36:5;;1841:2;1826:18;2583:90:3;1711:184:5;5272:272:3;;;;;;:::i;:::-;;:::i;3041:117::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3133:18:3;3107:7;3133:18;;;:9;:18;;;;;;;3041:117;2293:101:0;;;:::i;:::-;;2281:92:3;2333:7;1710:6:0;-1:-1:-1;;;;;1710:6:0;2281:92:3;;;-1:-1:-1;;;;;2255:32:5;;;2237:51;;2225:2;2210:18;2281:92:3;2091:203:5;1638:85:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;2733:94:3;;;:::i;6520:127::-;;;;;;:::i;:::-;;:::i;6030:282::-;;;;;;:::i;:::-;;:::i;3360:186::-;;;;;;:::i;:::-;;:::i;3603:163::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3732:18:3;;;3706:7;3732:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3603:163;2543:215:0;;;;;;:::i;:::-;;:::i;2431:90:3:-;2477:13;2509:5;2502:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2431:90;:::o;3903:180::-;4000:4;4016:39;735:10:2;4039:7:3;4048:6;4016:8;:39::i;:::-;-1:-1:-1;4072:4:3;3903:180;;;;;:::o;4540:338::-;4668:4;4684:36;4694:6;4702:9;4713:6;4684:9;:36::i;:::-;-1:-1:-1;;;;;4798:19:3;;;;;;:11;:19;;;;;;;;735:10:2;4798:33:3;;;;;;;;;4730:120;;4752:6;;4798:42;;4834:6;;4798:42;:::i;:::-;4730:8;:120::i;:::-;-1:-1:-1;4867:4:3;4540:338;;;;;:::o;5272:272::-;735:10:2;5374:4:3;5459:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5459:34:3;;;;;;;;;;5374:4;;5390:126;;5438:7;;5459:47;;5496:10;;5459:47;:::i;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2733:94:3:-;2781:13;2813:7;2806:14;;;;;:::i;6520:127::-;6576:4;1531:13:0;:11;:13::i;:::-;6592:27:3::1;735:10:2::0;6612:6:3::1;6592:5;:27::i;:::-;-1:-1:-1::0;6636:4:3::1;1554:1:0;6520:127:3::0;;;:::o;6030:282::-;735:10:2;6137:4:3;6222:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6222:34:3;;;;;;;;;;6137:4;;6153:131;;6201:7;;6222:52;;6259:15;;6222:52;:::i;3360:186::-;3460:4;3476:42;735:10:2;3500:9:3;3511:6;3476:9;:42::i;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2237:51:5::0;2210:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;9066:362:3:-;-1:-1:-1;;;;;9189:19:3;;9181:68;;;;-1:-1:-1;;;9181:68:3;;3731:2:5;9181:68:3;;;3713:21:5;3770:2;3750:18;;;3743:30;3809:34;3789:18;;;3782:62;-1:-1:-1;;;3860:18:5;;;3853:34;3904:19;;9181:68:3;3529:400:5;9181:68:3;-1:-1:-1;;;;;9267:21:3;;9259:68;;;;-1:-1:-1;;;9259:68:3;;4136:2:5;9259:68:3;;;4118:21:5;4175:2;4155:18;;;4148:30;4214:34;4194:18;;;4187:62;-1:-1:-1;;;4265:18:5;;;4258:32;4307:19;;9259:68:3;3934:398:5;9259:68:3;-1:-1:-1;;;;;9338:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9389:32;;1342:25:5;;;9389:32:3;;1315:18:5;9389:32:3;;;;;;;;9066:362;;;:::o;7121:405::-;-1:-1:-1;;;;;7248:20:3;;7240:70;;;;-1:-1:-1;;;7240:70:3;;4539:2:5;7240:70:3;;;4521:21:5;4578:2;4558:18;;;4551:30;4617:34;4597:18;;;4590:62;-1:-1:-1;;;4668:18:5;;;4661:35;4713:19;;7240:70:3;4337:401:5;7240:70:3;-1:-1:-1;;;;;7328:23:3;;7320:71;;;;-1:-1:-1;;;7320:71:3;;4945:2:5;7320:71:3;;;4927:21:5;4984:2;4964:18;;;4957:30;5023:34;5003:18;;;4996:62;-1:-1:-1;;;5074:18:5;;;5067:33;5117:19;;7320:71:3;4743:399:5;7320:71:3;-1:-1:-1;;;;;7402:17:3;;;;;;:9;:17;;;;;:27;;7423:6;;7402:17;:27;;7423:6;;7402:27;:::i;:::-;;;;-1:-1:-1;;;;;;;7439:20:3;;;;;;:9;:20;;;;;:30;;7463:6;;7439:20;:30;;7463:6;;7439:30;:::i;:::-;;;;;;;;7501:9;-1:-1:-1;;;;;7484:35:3;7493:6;-1:-1:-1;;;;;7484:35:3;;7512:6;7484:35;;;;1342:25:5;;1330:2;1315:18;;1196:177;1796:162:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:2;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:2;1901:40:0;;;2237:51:5;2210:18;;1901:40:0;2091:203:5;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;7796:262:3:-;-1:-1:-1;;;;;7871:21:3;;7863:65;;;;-1:-1:-1;;;7863:65:3;;5349:2:5;7863:65:3;;;5331:21:5;5388:2;5368:18;;;5361:30;5427:33;5407:18;;;5400:61;5478:18;;7863:65:3;5147:355:5;7863:65:3;7955:6;7939:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;7971:18:3;;;;;;:9;:18;;;;;:28;;7993:6;;7971:18;:28;;7993:6;;7971:28;:::i;:::-;;;;-1:-1:-1;;8014:37:3;;1342:25:5;;;-1:-1:-1;;;;;8014:37:3;;;8031:1;;8014:37;;1330:2:5;1315:18;8014:37:3;;;;;;;7796:262;;:::o;14:548:5:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:5;;674:42;;664:70;;730:1;727;720:12;745:254;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:5:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:5:o;2299:180::-;2358:6;2411:2;2399:9;2390:7;2386:23;2382:32;2379:52;;;2427:1;2424;2417:12;2379:52;-1:-1:-1;2450:23:5;;2299:180;-1:-1:-1;2299:180:5:o;2484:260::-;2552:6;2560;2613:2;2601:9;2592:7;2588:23;2584:32;2581:52;;;2629:1;2626;2619:12;2581:52;2652:29;2671:9;2652:29;:::i;:::-;2642:39;;2700:38;2734:2;2723:9;2719:18;2700:38;:::i;:::-;2690:48;;2484:260;;;;;:::o;2749:380::-;2828:1;2824:12;;;;2871;;;2892:61;;2946:4;2938:6;2934:17;2924:27;;2892:61;2999:2;2991:6;2988:14;2968:18;2965:38;2962:161;;3045:10;3040:3;3036:20;3033:1;3026:31;3080:4;3077:1;3070:15;3108:4;3105:1;3098:15;2962:161;;2749:380;;;:::o;3134:127::-;3195:10;3190:3;3186:20;3183:1;3176:31;3226:4;3223:1;3216:15;3250:4;3247:1;3240:15;3266:128;3333:9;;;3354:11;;;3351:37;;;3368:18;;:::i;3399:125::-;3464:9;;;3485:10;;;3482:36;;;3498:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "518400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24640",
								"balanceOf(address)": "2601",
								"decimals()": "2311",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "2341",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2374",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2348",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28417"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1401,
									"end": 9840,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1401,
									"end": 9840,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1401,
									"end": 9840,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 2041,
									"end": 2218,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 2041,
									"end": 2218,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 735,
									"end": 745,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1708,
									"end": 1759,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1681,
									"end": 1699,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1681,
									"end": 1699,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2149,
									"end": 2154,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2149,
									"end": 2161,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 2157,
									"end": 2161,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2149,
									"end": 2154,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2149,
									"end": 2161,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 2149,
									"end": 2161,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2149,
									"end": 2161,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 2149,
									"end": 2161,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2171,
									"end": 2178,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2171,
									"end": 2187,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2171,
									"end": 2178,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2171,
									"end": 2187,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 2171,
									"end": 2187,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2171,
									"end": 2187,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 2171,
									"end": 2187,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2197,
									"end": 2206,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 2197,
									"end": 2211,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2197,
									"end": 2211,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2197,
									"end": 2211,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2209,
									"end": 2211,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 2197,
									"end": 2211,
									"modifierDepth": 1,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2197,
									"end": 2211,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2197,
									"end": 2211,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1401,
									"end": 9840,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 1401,
									"end": 9840,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 146,
									"end": 990,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 990,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 5,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 732,
									"end": 735,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 725,
									"end": 729,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 704,
									"end": 730,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 701,
									"end": 736,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 753,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 698,
									"end": 753,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 698,
									"end": 753,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 749,
									"end": 750,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 746,
									"end": 747,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 739,
									"end": 751,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 753,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 698,
									"end": 753,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 771,
									"end": 772,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 762,
									"end": 772,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 762,
									"end": 772,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 781,
									"end": 914,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 795,
									"end": 797,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 792,
									"end": 793,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 789,
									"end": 798,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 781,
									"end": 914,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 781,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 883,
									"end": 897,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 883,
									"end": 897,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 883,
									"end": 897,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 879,
									"end": 902,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 879,
									"end": 902,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 873,
									"end": 903,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 852,
									"end": 866,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 852,
									"end": 866,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 852,
									"end": 866,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 848,
									"end": 871,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 848,
									"end": 871,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 841,
									"end": 904,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 806,
									"end": 816,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 806,
									"end": 816,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 806,
									"end": 816,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 806,
									"end": 816,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 781,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 781,
									"end": 914,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 958,
									"end": 959,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 955,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 946,
									"end": 948,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 938,
									"end": 944,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 934,
									"end": 949,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 930,
									"end": 956,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 923,
									"end": 960,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 978,
									"end": 984,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 969,
									"end": 984,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 146,
									"end": 990,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 146,
									"end": 990,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 146,
									"end": 990,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 146,
									"end": 990,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 146,
									"end": 990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1094,
									"end": 1100,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1102,
									"end": 1108,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1155,
									"end": 1157,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1143,
									"end": 1152,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1134,
									"end": 1141,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1130,
									"end": 1153,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1126,
									"end": 1158,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1171,
									"end": 1172,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1168,
									"end": 1169,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1161,
									"end": 1173,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1198,
									"end": 1214,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1198,
									"end": 1214,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1263,
									"end": 1277,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1263,
									"end": 1277,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1263,
									"end": 1277,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1290,
									"end": 1291,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1287,
									"end": 1288,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1280,
									"end": 1292,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1366,
									"end": 1373,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1357,
									"end": 1363,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1364,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1313,
									"end": 1374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1303,
									"end": 1374,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1303,
									"end": 1374,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1420,
									"end": 1422,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1409,
									"end": 1418,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1405,
									"end": 1423,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1399,
									"end": 1424,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1383,
									"end": 1424,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1383,
									"end": 1424,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1449,
									"end": 1451,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1439,
									"end": 1447,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1465,
									"end": 1466,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1462,
									"end": 1463,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1455,
									"end": 1467,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1543,
									"end": 1550,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1532,
									"end": 1540,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1521,
									"end": 1530,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1517,
									"end": 1541,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1488,
									"end": 1551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1551,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1551,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1551,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 995,
									"end": 1557,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 2150,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 1770,
									"end": 2150,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1849,
									"end": 1850,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1845,
									"end": 1857,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1845,
									"end": 1857,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1845,
									"end": 1857,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1845,
									"end": 1857,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1892,
									"end": 1904,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1892,
									"end": 1904,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1892,
									"end": 1904,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1913,
									"end": 1974,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1913,
									"end": 1974,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1967,
									"end": 1971,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 1959,
									"end": 1965,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1955,
									"end": 1972,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1945,
									"end": 1972,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1945,
									"end": 1972,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1913,
									"end": 1974,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1913,
									"end": 1974,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2020,
									"end": 2022,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2012,
									"end": 2018,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1989,
									"end": 2007,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1986,
									"end": 2024,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1983,
									"end": 2144,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 1983,
									"end": 2144,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2066,
									"end": 2076,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 2061,
									"end": 2064,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 2057,
									"end": 2077,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2047,
									"end": 2078,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2101,
									"end": 2105,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 2098,
									"end": 2099,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 2091,
									"end": 2106,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2129,
									"end": 2133,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 2126,
									"end": 2127,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2119,
									"end": 2134,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1983,
									"end": 2144,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 1983,
									"end": 2144,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1983,
									"end": 2144,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 2150,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 2150,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 2150,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 2150,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2281,
									"end": 2799,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 2281,
									"end": 2799,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2383,
									"end": 2385,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2378,
									"end": 2381,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2375,
									"end": 2386,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2372,
									"end": 2793,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2372,
									"end": 2793,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 2372,
									"end": 2793,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2419,
									"end": 2424,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2416,
									"end": 2417,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2409,
									"end": 2425,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2463,
									"end": 2467,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2450,
									"end": 2468,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 2533,
									"end": 2535,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2521,
									"end": 2531,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2517,
									"end": 2536,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2514,
									"end": 2515,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2510,
									"end": 2537,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2504,
									"end": 2508,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2500,
									"end": 2538,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2569,
									"end": 2573,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2557,
									"end": 2567,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2554,
									"end": 2574,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2551,
									"end": 2598,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2551,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 2551,
									"end": 2598,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2592,
									"end": 2596,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2551,
									"end": 2598,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 2551,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2647,
									"end": 2649,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2642,
									"end": 2645,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2638,
									"end": 2650,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2635,
									"end": 2636,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2631,
									"end": 2651,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2625,
									"end": 2629,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2621,
									"end": 2652,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2611,
									"end": 2652,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2611,
									"end": 2652,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2702,
									"end": 2783,
									"name": "tag",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 2702,
									"end": 2783,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2720,
									"end": 2722,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2713,
									"end": 2718,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2710,
									"end": 2723,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2702,
									"end": 2783,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2702,
									"end": 2783,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 2702,
									"end": 2783,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2779,
									"end": 2780,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2765,
									"end": 2781,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2765,
									"end": 2781,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2746,
									"end": 2747,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2735,
									"end": 2748,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2702,
									"end": 2783,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 2702,
									"end": 2783,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2702,
									"end": 2783,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 2702,
									"end": 2783,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2706,
									"end": 2709,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2706,
									"end": 2709,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2372,
									"end": 2793,
									"name": "tag",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 2372,
									"end": 2793,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2281,
									"end": 2799,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2281,
									"end": 2799,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2281,
									"end": 2799,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2281,
									"end": 2799,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2975,
									"end": 4320,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 2975,
									"end": 4320,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 3105,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 3105,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3117,
									"end": 3147,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3117,
									"end": 3147,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3114,
									"end": 3170,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3114,
									"end": 3170,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 3114,
									"end": 3170,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3150,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 3150,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 3150,
									"end": 3168,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3150,
									"end": 3168,
									"name": "tag",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 3150,
									"end": 3168,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3179,
									"end": 3276,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 3269,
									"end": 3275,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3229,
									"end": 3267,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 3261,
									"end": 3265,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3255,
									"end": 3266,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 3229,
									"end": 3267,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 3229,
									"end": 3267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3229,
									"end": 3267,
									"name": "tag",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 3229,
									"end": 3267,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3223,
									"end": 3227,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3179,
									"end": 3276,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 3179,
									"end": 3276,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3179,
									"end": 3276,
									"name": "tag",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 3179,
									"end": 3276,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3331,
									"end": 3335,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3331,
									"end": 3335,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3388,
									"end": 3390,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 3377,
									"end": 3391,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3377,
									"end": 3391,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3405,
									"end": 3406,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3400,
									"end": 4063,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3400,
									"end": 4063,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 3400,
									"end": 4063,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 3400,
									"end": 4063,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4107,
									"end": 4108,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4124,
									"end": 4130,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4121,
									"end": 4210,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4121,
									"end": 4210,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 4121,
									"end": 4210,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4176,
									"end": 4195,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 4176,
									"end": 4195,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4176,
									"end": 4195,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4170,
									"end": 4196,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4121,
									"end": 4210,
									"name": "tag",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 4121,
									"end": 4210,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2933,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 2928,
									"end": 2939,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 2928,
									"end": 2939,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2928,
									"end": 2939,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2924,
									"end": 2948,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2920,
									"end": 2949,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2910,
									"end": 2950,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2956,
									"end": 2957,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2952,
									"end": 2963,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2952,
									"end": 2963,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2952,
									"end": 2963,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2907,
									"end": 2964,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 4223,
									"end": 4304,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 4223,
									"end": 4304,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3370,
									"end": 4314,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 3370,
									"end": 4314,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3400,
									"end": 4063,
									"name": "tag",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 3400,
									"end": 4063,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2228,
									"end": 2229,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2235,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2221,
									"end": 2235,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2221,
									"end": 2235,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2265,
									"end": 2269,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2252,
									"end": 2270,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2252,
									"end": 2270,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3436,
									"end": 3456,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3436,
									"end": 3456,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3436,
									"end": 3456,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3554,
									"end": 3790,
									"name": "tag",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 3554,
									"end": 3790,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3568,
									"end": 3575,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3565,
									"end": 3566,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3562,
									"end": 3576,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3554,
									"end": 3790,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3554,
									"end": 3790,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 3554,
									"end": 3790,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3657,
									"end": 3676,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 3657,
									"end": 3676,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3657,
									"end": 3676,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3651,
									"end": 3677,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3636,
									"end": 3678,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3636,
									"end": 3678,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3749,
									"end": 3776,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 3749,
									"end": 3776,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3749,
									"end": 3776,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3749,
									"end": 3776,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 3717,
									"end": 3718,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3705,
									"end": 3719,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3705,
									"end": 3719,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3705,
									"end": 3719,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3705,
									"end": 3719,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3584,
									"end": 3603,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3584,
									"end": 3603,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3554,
									"end": 3790,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 3554,
									"end": 3790,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3554,
									"end": 3790,
									"name": "tag",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 3554,
									"end": 3790,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3558,
									"end": 3561,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3818,
									"end": 3824,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3809,
									"end": 3816,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3806,
									"end": 3825,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3803,
									"end": 4004,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3803,
									"end": 4004,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 3803,
									"end": 4004,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3879,
									"end": 3898,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 3879,
									"end": 3898,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3879,
									"end": 3898,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3873,
									"end": 3899,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3962,
									"end": 3963,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 3958,
									"end": 3972,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 3958,
									"end": 3972,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3958,
									"end": 3972,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3974,
									"end": 3977,
									"name": "PUSH",
									"source": 5,
									"value": "F8"
								},
								{
									"begin": 3954,
									"end": 3978,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 3946,
									"end": 3988,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 3931,
									"end": 3989,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3916,
									"end": 3990,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3916,
									"end": 3990,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3803,
									"end": 4004,
									"name": "tag",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 3803,
									"end": 4004,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3803,
									"end": 4004,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3803,
									"end": 4004,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4050,
									"end": 4051,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 4041,
									"end": 4047,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4038,
									"end": 4039,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 4034,
									"end": 4048,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 4030,
									"end": 4052,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4024,
									"end": 4028,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 4017,
									"end": 4053,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3370,
									"end": 4314,
									"name": "tag",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 3370,
									"end": 4314,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3370,
									"end": 4314,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3370,
									"end": 4314,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3370,
									"end": 4314,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3370,
									"end": 4314,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2975,
									"end": 4320,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2975,
									"end": 4320,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2975,
									"end": 4320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2975,
									"end": 4320,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 2975,
									"end": 4320,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1401,
									"end": 9840,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1401,
									"end": 9840,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 9840,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1401,
									"end": 9840,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 9840,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 9840,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 9840,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b3f861a81140af383fb365600c35593772517c3f14ae7a70979798d38ce80a1864736f6c63430008180033",
									".code": [
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "893D20E8"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "A457C2D7"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "A457C2D7"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "DD62ED3E"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "893D20E8"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "A0712D68"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "39509351"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 9840,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2431,
											"end": 2521,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2431,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2431,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2431,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2431,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2431,
											"end": 2521,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2431,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2431,
											"end": 2521,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2431,
											"end": 2521,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2431,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2431,
											"end": 2521,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2431,
											"end": 2521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2431,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2431,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2431,
											"end": 2521,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2431,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2431,
											"end": 2521,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2431,
											"end": 2521,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2431,
											"end": 2521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2431,
											"end": 2521,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2431,
											"end": 2521,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2431,
											"end": 2521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2431,
											"end": 2521,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3903,
											"end": 4083,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3903,
											"end": 4083,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3903,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3903,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3903,
											"end": 4083,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3903,
											"end": 4083,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3903,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3903,
											"end": 4083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3903,
											"end": 4083,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3903,
											"end": 4083,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3903,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3903,
											"end": 4083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3903,
											"end": 4083,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3903,
											"end": 4083,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3903,
											"end": 4083,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3903,
											"end": 4083,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3903,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2886,
											"end": 2984,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2886,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2965,
											"end": 2977,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2965,
											"end": 2977,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2886,
											"end": 2984,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2886,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2886,
											"end": 2984,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2886,
											"end": 2984,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2886,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4878,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4540,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4540,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4540,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 4540,
											"end": 4878,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4540,
											"end": 4878,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4540,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 4540,
											"end": 4878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4540,
											"end": 4878,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 4540,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4540,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 4540,
											"end": 4878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2583,
											"end": 2673,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2583,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2657,
											"end": 2666,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2657,
											"end": 2666,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2583,
											"end": 2673,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2583,
											"end": 2673,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2657,
											"end": 2666,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2657,
											"end": 2666,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2657,
											"end": 2666,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2657,
											"end": 2666,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2583,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5544,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 5272,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5272,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 5272,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 5272,
											"end": 5544,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5272,
											"end": 5544,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5272,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 5272,
											"end": 5544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5272,
											"end": 5544,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 5272,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5272,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 5272,
											"end": 5544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3041,
											"end": 3158,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3041,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3041,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3041,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3041,
											"end": 3158,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3041,
											"end": 3158,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3041,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3041,
											"end": 3158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3041,
											"end": 3158,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3041,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3133,
											"end": 3151,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3107,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3151,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3133,
											"end": 3151,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3133,
											"end": 3151,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3133,
											"end": 3142,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3133,
											"end": 3151,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3133,
											"end": 3151,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3133,
											"end": 3151,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3133,
											"end": 3151,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3133,
											"end": 3151,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3133,
											"end": 3151,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3133,
											"end": 3151,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3041,
											"end": 3158,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2373,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2281,
											"end": 2373,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2373,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2281,
											"end": 2373,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2281,
											"end": 2373,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2281,
											"end": 2373,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2255,
											"end": 2287,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2255,
											"end": 2287,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2255,
											"end": 2287,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2225,
											"end": 2227,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2733,
											"end": 2827,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2733,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2733,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2733,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2733,
											"end": 2827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6520,
											"end": 6647,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 6520,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6520,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 6520,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 6520,
											"end": 6647,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6520,
											"end": 6647,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6520,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 6520,
											"end": 6647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6520,
											"end": 6647,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 6520,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6520,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 6520,
											"end": 6647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6030,
											"end": 6312,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 6030,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6030,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 6030,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 6030,
											"end": 6312,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6030,
											"end": 6312,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6030,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 6030,
											"end": 6312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6030,
											"end": 6312,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 6030,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6030,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 6030,
											"end": 6312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3360,
											"end": 3546,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 3360,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3360,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3360,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3360,
											"end": 3546,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3360,
											"end": 3546,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3360,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3360,
											"end": 3546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3360,
											"end": 3546,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3360,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3360,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3360,
											"end": 3546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3603,
											"end": 3766,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 3603,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3603,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3603,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3603,
											"end": 3766,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3603,
											"end": 3766,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3603,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3603,
											"end": 3766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3603,
											"end": 3766,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3603,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3732,
											"end": 3750,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3750,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3750,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3706,
											"end": 3713,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3750,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3750,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3750,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3743,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3732,
											"end": 3750,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3732,
											"end": 3750,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3750,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3750,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3750,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3732,
											"end": 3750,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3750,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3750,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3759,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3759,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3759,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3759,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3759,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3759,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3759,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3759,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3759,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3759,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3759,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3759,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3759,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3603,
											"end": 3766,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2521,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2431,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2477,
											"end": 2490,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2509,
											"end": 2514,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2502,
											"end": 2514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2502,
											"end": 2514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2431,
											"end": 2521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2431,
											"end": 2521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3903,
											"end": 4083,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3903,
											"end": 4083,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4004,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4016,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4046,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4048,
											"end": 4054,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4016,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4016,
											"end": 4055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4016,
											"end": 4055,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4016,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4072,
											"end": 4076,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3903,
											"end": 4083,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3903,
											"end": 4083,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3903,
											"end": 4083,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3903,
											"end": 4083,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3903,
											"end": 4083,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3903,
											"end": 4083,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3903,
											"end": 4083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4540,
											"end": 4878,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 4540,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4668,
											"end": 4672,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4684,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 4694,
											"end": 4700,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4702,
											"end": 4711,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4713,
											"end": 4719,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4684,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 4684,
											"end": 4720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4684,
											"end": 4720,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 4684,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4798,
											"end": 4817,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4798,
											"end": 4817,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4798,
											"end": 4817,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4798,
											"end": 4817,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4798,
											"end": 4817,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4798,
											"end": 4817,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4798,
											"end": 4809,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4798,
											"end": 4817,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4798,
											"end": 4817,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4798,
											"end": 4817,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4798,
											"end": 4817,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4798,
											"end": 4817,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4798,
											"end": 4817,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4798,
											"end": 4817,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4798,
											"end": 4817,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 4798,
											"end": 4831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4798,
											"end": 4831,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4798,
											"end": 4831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4798,
											"end": 4831,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4798,
											"end": 4831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4798,
											"end": 4831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4798,
											"end": 4831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4798,
											"end": 4831,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4798,
											"end": 4831,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4730,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 4730,
											"end": 4850,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4758,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4758,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4798,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 4798,
											"end": 4840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4834,
											"end": 4840,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4834,
											"end": 4840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4798,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 4798,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4798,
											"end": 4840,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 4798,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4730,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4730,
											"end": 4850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4730,
											"end": 4850,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 4730,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4867,
											"end": 4871,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4540,
											"end": 4878,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4540,
											"end": 4878,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4540,
											"end": 4878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4540,
											"end": 4878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4540,
											"end": 4878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4540,
											"end": 4878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5272,
											"end": 5544,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 5272,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5459,
											"end": 5484,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5459,
											"end": 5484,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5459,
											"end": 5484,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5459,
											"end": 5470,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5459,
											"end": 5484,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5459,
											"end": 5484,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5459,
											"end": 5484,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5459,
											"end": 5484,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5459,
											"end": 5484,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5459,
											"end": 5484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5459,
											"end": 5484,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5459,
											"end": 5484,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5459,
											"end": 5493,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5459,
											"end": 5493,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5459,
											"end": 5493,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5459,
											"end": 5493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5459,
											"end": 5493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5459,
											"end": 5493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5459,
											"end": 5493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5459,
											"end": 5493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5459,
											"end": 5493,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5459,
											"end": 5493,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5378,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5378,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5390,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 5390,
											"end": 5516,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5438,
											"end": 5445,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5438,
											"end": 5445,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5459,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 5459,
											"end": 5506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5496,
											"end": 5506,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5496,
											"end": 5506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5459,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 5459,
											"end": 5506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2733,
											"end": 2827,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2733,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2794,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2806,
											"end": 2820,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2806,
											"end": 2820,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2806,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2806,
											"end": 2820,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2806,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2806,
											"end": 2820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6520,
											"end": 6647,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 6520,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6576,
											"end": 6580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6619,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6612,
											"end": 6618,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6592,
											"end": 6597,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 6592,
											"end": 6619,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6592,
											"end": 6619,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 6592,
											"end": 6619,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6636,
											"end": 6640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1554,
											"end": 1555,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1554,
											"end": 1555,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6520,
											"end": 6647,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6520,
											"end": 6647,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6520,
											"end": 6647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6520,
											"end": 6647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6030,
											"end": 6312,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 6030,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6141,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6222,
											"end": 6247,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6247,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6247,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6233,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6222,
											"end": 6247,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6222,
											"end": 6247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6247,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6247,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6247,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6222,
											"end": 6247,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6247,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6247,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6222,
											"end": 6256,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6256,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6256,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6256,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6256,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6256,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6256,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6256,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6256,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6256,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6141,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6141,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6153,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 6153,
											"end": 6284,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6201,
											"end": 6208,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6201,
											"end": 6208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 6222,
											"end": 6274,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6259,
											"end": 6274,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6259,
											"end": 6274,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 6222,
											"end": 6274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3360,
											"end": 3546,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3360,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3460,
											"end": 3464,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3476,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3476,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3476,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9066,
											"end": 9428,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 9066,
											"end": 9428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9189,
											"end": 9208,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9189,
											"end": 9208,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9181,
											"end": 9249,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 9181,
											"end": 9249,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9181,
											"end": 9249,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9181,
											"end": 9249,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9181,
											"end": 9249,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9181,
											"end": 9249,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3733,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9181,
											"end": 9249,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9181,
											"end": 9249,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9181,
											"end": 9249,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3713,
											"end": 3734,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3770,
											"end": 3772,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3750,
											"end": 3768,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3768,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3768,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3743,
											"end": 3773,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3809,
											"end": 3843,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3789,
											"end": 3807,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3789,
											"end": 3807,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3789,
											"end": 3807,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3844,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3860,
											"end": 3878,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3860,
											"end": 3878,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3860,
											"end": 3878,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3853,
											"end": 3887,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3904,
											"end": 3923,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3904,
											"end": 3923,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9181,
											"end": 9249,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3529,
											"end": 3929,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9181,
											"end": 9249,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 9181,
											"end": 9249,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9267,
											"end": 9288,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9267,
											"end": 9288,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9259,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 9259,
											"end": 9327,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9259,
											"end": 9327,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9259,
											"end": 9327,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9259,
											"end": 9327,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9259,
											"end": 9327,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4136,
											"end": 4138,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9259,
											"end": 9327,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9259,
											"end": 9327,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9259,
											"end": 9327,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4118,
											"end": 4139,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4175,
											"end": 4177,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 4155,
											"end": 4173,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4155,
											"end": 4173,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4155,
											"end": 4173,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4148,
											"end": 4178,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4214,
											"end": 4248,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4194,
											"end": 4212,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4194,
											"end": 4212,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4194,
											"end": 4212,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4187,
											"end": 4249,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4265,
											"end": 4283,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4265,
											"end": 4283,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4265,
											"end": 4283,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4290,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4307,
											"end": 4326,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4307,
											"end": 4326,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9259,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3934,
											"end": 4332,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9259,
											"end": 9327,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 9259,
											"end": 9327,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9338,
											"end": 9356,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9338,
											"end": 9356,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9338,
											"end": 9356,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9338,
											"end": 9356,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9338,
											"end": 9356,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9338,
											"end": 9356,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9338,
											"end": 9356,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9338,
											"end": 9349,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 9338,
											"end": 9356,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9338,
											"end": 9356,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9338,
											"end": 9356,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9338,
											"end": 9356,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9338,
											"end": 9356,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9338,
											"end": 9356,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9338,
											"end": 9356,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9338,
											"end": 9356,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9338,
											"end": 9365,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 9338,
											"end": 9365,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9338,
											"end": 9365,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9338,
											"end": 9365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9338,
											"end": 9365,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9338,
											"end": 9365,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9338,
											"end": 9365,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 9338,
											"end": 9365,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9338,
											"end": 9365,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9338,
											"end": 9365,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9338,
											"end": 9365,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9338,
											"end": 9365,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9338,
											"end": 9365,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9338,
											"end": 9374,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9338,
											"end": 9374,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9338,
											"end": 9374,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9421,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9421,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9389,
											"end": 9421,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9389,
											"end": 9421,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9389,
											"end": 9421,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 9389,
											"end": 9421,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9421,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9389,
											"end": 9421,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9421,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9421,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9421,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9421,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9421,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 9066,
											"end": 9428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9066,
											"end": 9428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9066,
											"end": 9428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9066,
											"end": 9428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7121,
											"end": 7526,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 7121,
											"end": 7526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7248,
											"end": 7268,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7268,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7240,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 7240,
											"end": 7310,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7240,
											"end": 7310,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7240,
											"end": 7310,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7240,
											"end": 7310,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7240,
											"end": 7310,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4539,
											"end": 4541,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7240,
											"end": 7310,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7240,
											"end": 7310,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7240,
											"end": 7310,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4521,
											"end": 4542,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4580,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4558,
											"end": 4576,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4558,
											"end": 4576,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4558,
											"end": 4576,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4581,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4617,
											"end": 4651,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4597,
											"end": 4615,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4597,
											"end": 4615,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4597,
											"end": 4615,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4590,
											"end": 4652,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4668,
											"end": 4686,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4668,
											"end": 4686,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4668,
											"end": 4686,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4661,
											"end": 4696,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4713,
											"end": 4732,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4713,
											"end": 4732,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7240,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 4337,
											"end": 4738,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7240,
											"end": 7310,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 7240,
											"end": 7310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7328,
											"end": 7351,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7328,
											"end": 7351,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7320,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 7320,
											"end": 7391,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7320,
											"end": 7391,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7320,
											"end": 7391,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7320,
											"end": 7391,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7320,
											"end": 7391,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4945,
											"end": 4947,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7320,
											"end": 7391,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7320,
											"end": 7391,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7320,
											"end": 7391,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4927,
											"end": 4948,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 4986,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 4964,
											"end": 4982,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4964,
											"end": 4982,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4964,
											"end": 4982,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4957,
											"end": 4987,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5023,
											"end": 5057,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5003,
											"end": 5021,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5003,
											"end": 5021,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5003,
											"end": 5021,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4996,
											"end": 5058,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5074,
											"end": 5092,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5074,
											"end": 5092,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5074,
											"end": 5092,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5067,
											"end": 5100,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5117,
											"end": 5136,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5117,
											"end": 5136,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7320,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 4743,
											"end": 5142,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7320,
											"end": 7391,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 7320,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7402,
											"end": 7419,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7419,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7419,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7402,
											"end": 7419,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7419,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7419,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7411,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7402,
											"end": 7419,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7402,
											"end": 7419,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7419,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7402,
											"end": 7419,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7419,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7429,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7429,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7423,
											"end": 7429,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7423,
											"end": 7429,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7419,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 7402,
											"end": 7429,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7423,
											"end": 7429,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7423,
											"end": 7429,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 7402,
											"end": 7429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7429,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 7402,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7429,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7429,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7429,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7439,
											"end": 7459,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7459,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7459,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7439,
											"end": 7459,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7459,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7459,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7439,
											"end": 7459,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7439,
											"end": 7459,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7459,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7439,
											"end": 7459,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7459,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7469,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7469,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7463,
											"end": 7469,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7463,
											"end": 7469,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7459,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 7439,
											"end": 7469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7463,
											"end": 7469,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7463,
											"end": 7469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 7439,
											"end": 7469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7469,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 7439,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7469,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7469,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7469,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7469,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7469,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7469,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7501,
											"end": 7510,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7493,
											"end": 7499,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7512,
											"end": 7518,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7796,
											"end": 8058,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 7796,
											"end": 8058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7871,
											"end": 7892,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7871,
											"end": 7892,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7863,
											"end": 7928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 7863,
											"end": 7928,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7863,
											"end": 7928,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7863,
											"end": 7928,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7863,
											"end": 7928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7863,
											"end": 7928,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5349,
											"end": 5351,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7863,
											"end": 7928,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7863,
											"end": 7928,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7863,
											"end": 7928,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5331,
											"end": 5352,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5388,
											"end": 5390,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5368,
											"end": 5386,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5368,
											"end": 5386,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5368,
											"end": 5386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5361,
											"end": 5391,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5427,
											"end": 5460,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 5407,
											"end": 5425,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5407,
											"end": 5425,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5425,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5400,
											"end": 5461,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5478,
											"end": 5496,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5478,
											"end": 5496,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7863,
											"end": 7928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 5147,
											"end": 5502,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7863,
											"end": 7928,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 7863,
											"end": 7928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7955,
											"end": 7961,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7939,
											"end": 7951,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 7939,
											"end": 7951,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7939,
											"end": 7961,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7939,
											"end": 7961,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7939,
											"end": 7961,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7939,
											"end": 7961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 7939,
											"end": 7961,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7939,
											"end": 7961,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7939,
											"end": 7961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 7939,
											"end": 7961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7939,
											"end": 7961,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 7939,
											"end": 7961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7939,
											"end": 7961,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7939,
											"end": 7961,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7939,
											"end": 7961,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7971,
											"end": 7989,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7971,
											"end": 7989,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7971,
											"end": 7989,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7971,
											"end": 7989,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7971,
											"end": 7989,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7971,
											"end": 7989,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7971,
											"end": 7980,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7971,
											"end": 7989,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7971,
											"end": 7989,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7971,
											"end": 7989,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7971,
											"end": 7989,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7971,
											"end": 7989,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7971,
											"end": 7999,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7971,
											"end": 7999,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 7999,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 7999,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7971,
											"end": 7989,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7971,
											"end": 7999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 7971,
											"end": 7999,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 7999,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 7999,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7971,
											"end": 7999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 7971,
											"end": 7999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7971,
											"end": 7999,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 7971,
											"end": 7999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7971,
											"end": 7999,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7971,
											"end": 7999,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7971,
											"end": 7999,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8014,
											"end": 8051,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8014,
											"end": 8051,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8014,
											"end": 8051,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8051,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8051,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8031,
											"end": 8032,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8031,
											"end": 8032,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8051,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8014,
											"end": 8051,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8014,
											"end": 8051,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8014,
											"end": 8051,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8051,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8051,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8051,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8051,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8051,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 7796,
											"end": 8058,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7796,
											"end": 8058,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7796,
											"end": 8058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 254,
											"end": 256,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2479,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2299,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2413,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2399,
											"end": 2408,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 2397,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2409,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2382,
											"end": 2414,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 2431,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2379,
											"end": 2431,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2427,
											"end": 2428,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2424,
											"end": 2425,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2429,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 2431,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2379,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2450,
											"end": 2473,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2473,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2479,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2299,
											"end": 2479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2552,
											"end": 2558,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2615,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2599,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2588,
											"end": 2611,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2616,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2629,
											"end": 2630,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2619,
											"end": 2631,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2671,
											"end": 2680,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2652,
											"end": 2681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2734,
											"end": 2736,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2723,
											"end": 2732,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 2737,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2700,
											"end": 2738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2738,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2738,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2484,
											"end": 2744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2828,
											"end": 2829,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2946,
											"end": 2950,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 2938,
											"end": 2944,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2934,
											"end": 2951,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2924,
											"end": 2951,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2924,
											"end": 2951,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2999,
											"end": 3001,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2991,
											"end": 2997,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2988,
											"end": 3002,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2968,
											"end": 2986,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2965,
											"end": 3003,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3045,
											"end": 3055,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 3040,
											"end": 3043,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3036,
											"end": 3056,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3033,
											"end": 3034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3026,
											"end": 3057,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3080,
											"end": 3084,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3077,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3070,
											"end": 3085,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3108,
											"end": 3112,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3113,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 3129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3134,
											"end": 3261,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 3134,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3195,
											"end": 3205,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 3190,
											"end": 3193,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3186,
											"end": 3206,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3183,
											"end": 3184,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3176,
											"end": 3207,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3226,
											"end": 3230,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 3223,
											"end": 3224,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3216,
											"end": 3231,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3254,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3247,
											"end": 3248,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3240,
											"end": 3255,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3266,
											"end": 3394,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3266,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3333,
											"end": 3342,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3333,
											"end": 3342,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3333,
											"end": 3342,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3354,
											"end": 3365,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3354,
											"end": 3365,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3354,
											"end": 3365,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3351,
											"end": 3388,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3351,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3351,
											"end": 3388,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3368,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 3368,
											"end": 3386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3464,
											"end": 3473,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3464,
											"end": 3473,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3464,
											"end": 3473,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3495,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3495,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3495,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3482,
											"end": 3518,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3482,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3482,
											"end": 3518,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3498,
											"end": 3516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 3498,
											"end": 3516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"projects/bsc-library/contracts/BEP20.sol",
								"projects/bsc-library/contracts/IBEP20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IBEP20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {BEP20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-BEP20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of BEP20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IBEP20-approve}.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"projects/bsc-library/contracts/BEP20.sol\":\"BEP20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"projects/bsc-library/contracts/BEP20.sol\":{\"keccak256\":\"0x23f52d36147d59edd08854e45d28e9bb820ff959125ac569d7415b2f3bd87516\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2fd2560eefe99dd4900223d79e12d9abc6ef58cf0efe3049c5fb101974d3403c\",\"dweb:/ipfs/Qme652ZjCsZGkBDmQhTkLBdy6P4ZJk7msKoaWRKae5Fr6v\"]},\"projects/bsc-library/contracts/IBEP20.sol\":{\"keccak256\":\"0x0e6aa53b507e51ea817623b502e388dc29e8fe31c3b55d3a1b597f07fbe40bfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa49c4b232689cd98c87533a36eafa74f0bed1bec0c80a7df9c8e91369c46052\",\"dweb:/ipfs/QmctzLK7NuUzohTXhoEBCqzdpxxcuzQYUc3XgRxxXZTWxd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "projects/bsc-library/contracts/BEP20.sol:BEP20",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 450,
								"contract": "projects/bsc-library/contracts/BEP20.sol:BEP20",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 456,
								"contract": "projects/bsc-library/contracts/BEP20.sol:BEP20",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 458,
								"contract": "projects/bsc-library/contracts/BEP20.sol:BEP20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 460,
								"contract": "projects/bsc-library/contracts/BEP20.sol:BEP20",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 462,
								"contract": "projects/bsc-library/contracts/BEP20.sol:BEP20",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 464,
								"contract": "projects/bsc-library/contracts/BEP20.sol:BEP20",
								"label": "_decimals",
								"offset": 0,
								"slot": "6",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"projects/bsc-library/contracts/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"projects/bsc-library/contracts/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"projects/bsc-library/contracts/IBEP20.sol\":{\"keccak256\":\"0x0e6aa53b507e51ea817623b502e388dc29e8fe31c3b55d3a1b597f07fbe40bfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa49c4b232689cd98c87533a36eafa74f0bed1bec0c80a7df9c8e91369c46052\",\"dweb:/ipfs/QmctzLK7NuUzohTXhoEBCqzdpxxcuzQYUc3XgRxxXZTWxd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> projects/bsc-library/contracts/BEP20.sol:54:9:\n   |\n54 |         string memory name,\n   |         ^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> projects/bsc-library/contracts/BEP20.sol:72:5:\n   |\n72 |     function name() public view override returns (string memory) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 2521,
						"file": "projects/bsc-library/contracts/BEP20.sol",
						"message": "The shadowed declaration is here:",
						"start": 2431
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 2080,
					"file": "projects/bsc-library/contracts/BEP20.sol",
					"start": 2062
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> projects/bsc-library/contracts/BEP20.sol:55:9:\n   |\n55 |         string memory symbol\n   |         ^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> projects/bsc-library/contracts/BEP20.sol:86:5:\n   |\n86 |     function symbol() public view override returns (string memory) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 2827,
						"file": "projects/bsc-library/contracts/BEP20.sol",
						"message": "The shadowed declaration is here:",
						"start": 2733
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 2110,
					"file": "projects/bsc-library/contracts/BEP20.sol",
					"start": 2090
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							430
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 431,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 430,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 430,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								430
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 412,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							400
						]
					},
					"id": 401,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:1",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 400,
							"linearizedBaseContracts": [
								400
							],
							"name": "Address",
							"nameLocation": "203:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:1",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 155,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "349:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:1"
									},
									"src": "316:50:1"
								},
								{
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:1",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 160,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "475:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:1"
									},
									"src": "452:39:1"
								},
								{
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:1",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 163,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:1"
									},
									"src": "591:24:1"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "1602:260:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 173,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$400",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$400",
																		"typeString": "library Address"
																	}
																],
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 171,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:1",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 176,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "1640:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 186,
												"nodeType": "IfStatement",
												"src": "1612:109:1",
												"trueBody": {
													"id": 185,
													"nodeType": "Block",
													"src": "1648:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 181,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$400",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$400",
																					"typeString": "library Address"
																				}
																			],
																			"id": 180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 179,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 178,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 155,
																	"src": "1669:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 184,
															"nodeType": "RevertStatement",
															"src": "1662:48:1"
														}
													]
												}
											},
											{
												"assignments": [
													188,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 188,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 203,
														"src": "1732:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 187,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 195,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 189,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "1750:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:1",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 191,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 168,
																"src": "1772:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:1"
											},
											{
												"condition": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:1",
													"subExpression": {
														"id": 196,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "1798:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 202,
												"nodeType": "IfStatement",
												"src": "1793:63:1",
												"trueBody": {
													"id": 201,
													"nodeType": "Block",
													"src": "1807:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 198,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 163,
																	"src": "1828:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 200,
															"nodeType": "RevertStatement",
															"src": "1821:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:1",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1550:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1577:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:1"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:1"
									},
									"scope": 400,
									"src": "1531:331:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2794:62:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "2833:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "2841:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 214,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "2811:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 213,
												"id": 219,
												"nodeType": "Return",
												"src": "2804:45:1"
											}
										]
									},
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:1",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2727:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2743:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 208,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:1"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2780:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 211,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:1"
									},
									"scope": 400,
									"src": "2705:151:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "3293:279:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 235,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$400",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$400",
																		"typeString": "library Address"
																	}
																],
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 233,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:1",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 238,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "3331:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 248,
												"nodeType": "IfStatement",
												"src": "3303:108:1",
												"trueBody": {
													"id": 247,
													"nodeType": "Block",
													"src": "3338:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 243,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$400",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$400",
																					"typeString": "library Address"
																				}
																			],
																			"id": 242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 241,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 240,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 155,
																	"src": "3359:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 246,
															"nodeType": "RevertStatement",
															"src": "3352:48:1"
														}
													]
												}
											},
											{
												"assignments": [
													250,
													252
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 266,
														"src": "3421:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 249,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 252,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 266,
														"src": "3435:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 251,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 259,
												"initialValue": {
													"arguments": [
														{
															"id": 257,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "3488:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 253,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 224,
																"src": "3462:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:1",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 255,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "3481:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 261,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "3537:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 262,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "3545:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 263,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "3554:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 260,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "3510:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 232,
												"id": 265,
												"nodeType": "Return",
												"src": "3503:62:1"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "3211:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "3227:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 225,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "3246:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:1"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "3279:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:1"
									},
									"scope": 400,
									"src": "3180:392:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "3811:154:1",
										"statements": [
											{
												"assignments": [
													278,
													280
												],
												"declarations": [
													{
														"constant": false,
														"id": 278,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 292,
														"src": "3822:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 277,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 280,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 292,
														"src": "3836:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 279,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 285,
												"initialValue": {
													"arguments": [
														{
															"id": 283,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "3881:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 281,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "3863:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:1",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 287,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "3930:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 288,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "3938:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 289,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "3947:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 286,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "3903:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 276,
												"id": 291,
												"nodeType": "Return",
												"src": "3896:62:1"
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "3739:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "3755:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 271,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:1"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "3797:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 274,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:1"
									},
									"scope": 400,
									"src": "3711:254:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "4203:156:1",
										"statements": [
											{
												"assignments": [
													304,
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 304,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 318,
														"src": "4214:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 303,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 318,
														"src": "4228:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 305,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 311,
												"initialValue": {
													"arguments": [
														{
															"id": 309,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "4275:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 307,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "4255:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:1",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 313,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "4324:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 314,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "4332:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 315,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "4341:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 312,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "4297:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 302,
												"id": 317,
												"nodeType": "Return",
												"src": "4290:62:1"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4136:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4152:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 297,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:1"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4189:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 300,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:1"
									},
									"scope": 400,
									"src": "4106:253:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "4783:424:1",
										"statements": [
											{
												"condition": {
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:1",
													"subExpression": {
														"id": 331,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "4798:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 356,
													"nodeType": "Block",
													"src": "4857:344:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 338,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 326,
																			"src": "5045:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 342,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 322,
																				"src": "5071:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:1",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 353,
															"nodeType": "IfStatement",
															"src": "5041:119:1",
															"trueBody": {
																"id": 352,
																"nodeType": "Block",
																"src": "5096:64:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 349,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 322,
																					"src": "5138:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 348,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 160,
																				"src": "5121:16:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 351,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:1"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 354,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "5180:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 330,
															"id": 355,
															"nodeType": "Return",
															"src": "5173:17:1"
														}
													]
												},
												"id": 357,
												"nodeType": "IfStatement",
												"src": "4793:408:1",
												"trueBody": {
													"id": 337,
													"nodeType": "Block",
													"src": "4807:44:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 334,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 326,
																		"src": "4829:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 333,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "4821:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 336,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:1",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "4670:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "4694:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 323,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "4716:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 325,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:1"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "4769:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 328,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:1"
									},
									"scope": 400,
									"src": "4625:582:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5509:122:1",
										"statements": [
											{
												"condition": {
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:1",
													"subExpression": {
														"id": 369,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "5524:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 378,
													"nodeType": "Block",
													"src": "5583:42:1",
													"statements": [
														{
															"expression": {
																"id": 376,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "5604:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 368,
															"id": 377,
															"nodeType": "Return",
															"src": "5597:17:1"
														}
													]
												},
												"id": 379,
												"nodeType": "IfStatement",
												"src": "5519:106:1",
												"trueBody": {
													"id": 375,
													"nodeType": "Block",
													"src": "5533:44:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 372,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "5555:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 371,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "5547:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 374,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:1",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5433:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5447:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 363,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5495:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 366,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:1"
									},
									"scope": 400,
									"src": "5407:224:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "5798:461:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "5874:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 389,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 396,
													"nodeType": "Block",
													"src": "6204:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 393,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 163,
																	"src": "6225:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 395,
															"nodeType": "RevertStatement",
															"src": "6218:24:1"
														}
													]
												},
												"id": 397,
												"nodeType": "IfStatement",
												"src": "5870:383:1",
												"trueBody": {
													"id": 392,
													"nodeType": "Block",
													"src": "5897:301:1",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:1",
																"nodeType": "YulBlock",
																"src": "6055:133:1",
																"statements": [
																	{
																		"nativeSrc": "6073:40:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:1"
																			},
																			"nativeSrc": "6096:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:1"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:1",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:1",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:1",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:1"
																					},
																					"nativeSrc": "6137:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:1"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:1",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:1"
																			},
																			"nativeSrc": "6130:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:1"
																		},
																		"nativeSrc": "6130:44:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:1"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 384,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:1",
																	"valueSize": 1
																},
																{
																	"declaration": 384,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:1",
																	"valueSize": 1
																}
															],
															"id": 391,
															"nodeType": "InlineAssembly",
															"src": "6046:142:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:1",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "5760:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:1"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:1"
									},
									"scope": 400,
									"src": "5743:516:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 401,
							"src": "195:6066:1",
							"usedErrors": [
								155,
								160,
								163
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							430
						]
					},
					"id": 431,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 402,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 403,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 430,
							"linearizedBaseContracts": [
								430
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 408,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 407,
												"id": 410,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 430,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 420,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 417,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 416,
												"id": 419,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 414,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 430,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 425,
												"id": 427,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 430,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 431,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"projects/bsc-library/contracts/BEP20.sol": {
				"ast": {
					"absolutePath": "projects/bsc-library/contracts/BEP20.sol",
					"exportedSymbols": {
						"Address": [
							400
						],
						"BEP20": [
							922
						],
						"Context": [
							430
						],
						"IBEP20": [
							1023
						],
						"Ownable": [
							147
						]
					},
					"id": 923,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 432,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 433,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 923,
							"sourceUnit": 148,
							"src": "57:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 434,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 923,
							"sourceUnit": 431,
							"src": "110:51:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 435,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 923,
							"sourceUnit": 401,
							"src": "162:51:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "projects/bsc-library/contracts/IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 436,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 923,
							"sourceUnit": 1024,
							"src": "214:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 438,
										"name": "Context",
										"nameLocations": [
											"1419:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 430,
										"src": "1419:7:3"
									},
									"id": 439,
									"nodeType": "InheritanceSpecifier",
									"src": "1419:7:3"
								},
								{
									"baseName": {
										"id": 440,
										"name": "IBEP20",
										"nameLocations": [
											"1428:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1023,
										"src": "1428:6:3"
									},
									"id": 441,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:6:3"
								},
								{
									"baseName": {
										"id": 442,
										"name": "Ownable",
										"nameLocations": [
											"1436:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "1436:7:3"
									},
									"id": 443,
									"nodeType": "InheritanceSpecifier",
									"src": "1436:7:3"
								}
							],
							"canonicalName": "BEP20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 437,
								"nodeType": "StructuredDocumentation",
								"src": "238:1162:3",
								"text": " @dev Implementation of the {IBEP20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {BEP20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-BEP20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of BEP20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IBEP20-approve}."
							},
							"fullyImplemented": true,
							"id": 922,
							"linearizedBaseContracts": [
								922,
								147,
								1023,
								430
							],
							"name": "BEP20",
							"nameLocation": "1410:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 446,
									"libraryName": {
										"id": 444,
										"name": "Address",
										"nameLocations": [
											"1456:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 400,
										"src": "1456:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "1450:26:3",
									"typeName": {
										"id": 445,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1468:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 450,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1518:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 922,
									"src": "1482:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 449,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 447,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1490:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1482:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 448,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1501:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 456,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1589:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 922,
									"src": "1533:67:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 455,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 451,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1541:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1533:47:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 454,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 452,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1560:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1552:27:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 453,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1571:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 458,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1623:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 922,
									"src": "1607:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 457,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1607:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 460,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1656:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 922,
									"src": "1641:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 459,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1641:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 462,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1682:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 922,
									"src": "1667:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 461,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1667:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 464,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "1709:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 922,
									"src": "1695:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 463,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1695:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "2139:79:3",
										"statements": [
											{
												"expression": {
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 476,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "2149:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 477,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "2157:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2149:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "2149:12:3"
											},
											{
												"expression": {
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 480,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "2171:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 481,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 469,
														"src": "2181:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2171:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "2171:16:3"
											},
											{
												"expression": {
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 484,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "2197:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 485,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2209:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "2197:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "2197:14:3"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "1725:311:3",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 489,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 472,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "2125:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2125:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 474,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 471,
												"name": "Ownable",
												"nameLocations": [
													"2117:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2117:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2117:21:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2076:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "2062:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 466,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2062:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "2104:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "2090:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 468,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2090:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:64:3"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2139:0:3"
									},
									"scope": 922,
									"src": "2041:177:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										954
									],
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "2342:31:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 496,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2359:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2359:7:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 495,
												"id": 498,
												"nodeType": "Return",
												"src": "2352:14:3"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "2224:52:3",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "2290:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 492,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2315:8:3"
									},
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2298:2:3"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "2333:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2333:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2332:9:3"
									},
									"scope": 922,
									"src": "2281:92:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										948
									],
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "2492:29:3",
										"statements": [
											{
												"expression": {
													"id": 507,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 460,
													"src": "2509:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 506,
												"id": 508,
												"nodeType": "Return",
												"src": "2502:12:3"
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "2379:47:3",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2440:4:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 503,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2459:8:3"
									},
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2444:2:3"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "2477:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 504,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2477:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2476:15:3"
									},
									"scope": 922,
									"src": "2431:90:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										936
									],
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "2640:33:3",
										"statements": [
											{
												"expression": {
													"id": 517,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 464,
													"src": "2657:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 516,
												"id": 518,
												"nodeType": "Return",
												"src": "2650:16:3"
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "2527:51:3",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2592:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 513,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2615:8:3"
									},
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2600:2:3"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2633:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 514,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2633:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2632:7:3"
									},
									"scope": 922,
									"src": "2583:90:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										942
									],
									"body": {
										"id": 529,
										"nodeType": "Block",
										"src": "2796:31:3",
										"statements": [
											{
												"expression": {
													"id": 527,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 462,
													"src": "2813:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 526,
												"id": 528,
												"nodeType": "Return",
												"src": "2806:14:3"
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "2679:49:3",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2742:6:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 523,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2763:8:3"
									},
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2748:2:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2781:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 524,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2781:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2780:15:3"
									},
									"scope": 922,
									"src": "2733:94:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										930
									],
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "2948:36:3",
										"statements": [
											{
												"expression": {
													"id": 537,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 458,
													"src": "2965:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 536,
												"id": 538,
												"nodeType": "Return",
												"src": "2958:19:3"
											}
										]
									},
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "2833:48:3",
										"text": " @dev See {BEP20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2895:11:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 533,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2921:8:3"
									},
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2906:2:3"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "2939:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2939:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2938:9:3"
									},
									"scope": 922,
									"src": "2886:98:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										962
									],
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "3116:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 549,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "3133:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 551,
													"indexExpression": {
														"id": 550,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "3143:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3133:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 548,
												"id": 552,
												"nodeType": "Return",
												"src": "3126:25:3"
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "2990:46:3",
										"text": " @dev See {BEP20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3050:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 545,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3089:8:3"
									},
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3068:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3060:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3060:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3059:17:3"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3107:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3107:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3106:9:3"
									},
									"scope": 922,
									"src": "3041:117:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										972
									],
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "3466:80:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 566,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "3486:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3486:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 568,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "3500:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 569,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "3511:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 565,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "3476:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3476:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "3476:42:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3535:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 564,
												"id": 573,
												"nodeType": "Return",
												"src": "3528:11:3"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "3164:191:3",
										"text": " @dev See {BEP20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3369:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 561,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3442:8:3"
									},
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3395:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3387:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3387:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3422:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3414:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3377:57:3"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3460:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 562,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3460:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3459:6:3"
									},
									"scope": 922,
									"src": "3360:186:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										982
									],
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "3715:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 586,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "3732:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 587,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "3744:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3732:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 590,
													"indexExpression": {
														"id": 589,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "3751:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3732:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 585,
												"id": 591,
												"nodeType": "Return",
												"src": "3725:34:3"
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "3552:46:3",
										"text": " @dev See {BEP20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3612:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 582,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3688:8:3"
									},
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3639:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "3631:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3662:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "3654:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3654:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3621:54:3"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "3706:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3706:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3705:9:3"
									},
									"scope": 922,
									"src": "3603:163:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										992
									],
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "4006:77:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 605,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "4025:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4025:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "4039:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 608,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "4048:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 604,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "4016:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4016:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "4016:39:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4072:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 603,
												"id": 612,
												"nodeType": "Return",
												"src": "4065:11:3"
											}
										]
									},
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "3772:126:3",
										"text": " @dev See {BEP20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3912:7:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 600,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3982:8:3"
									},
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3937:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "3929:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3929:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3962:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "3954:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3919:55:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "4000:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 601,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4000:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3999:6:3"
									},
									"scope": 922,
									"src": "3903:180:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1004
									],
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "4674:204:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 628,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "4694:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 629,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "4702:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 630,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "4713:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 627,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "4684:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4684:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 632,
												"nodeType": "ExpressionStatement",
												"src": "4684:36:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 634,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "4752:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 635,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "4772:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4772:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 637,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "4798:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 639,
																	"indexExpression": {
																		"id": 638,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "4810:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4798:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 642,
																"indexExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 640,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 412,
																		"src": "4818:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4818:12:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4798:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 643,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 621,
																"src": "4834:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4798:42:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 633,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "4730:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4730:120:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "4730:120:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4867:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 626,
												"id": 648,
												"nodeType": "Return",
												"src": "4860:11:3"
											}
										]
									},
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "4089:446:3",
										"text": " @dev See {BEP20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {BEP20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for `sender`'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4549:12:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 623,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4650:8:3"
									},
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4579:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "4571:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4571:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4603:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "4595:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4595:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4630:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "4622:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4561:81:3"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "4668:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 624,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4668:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:6:3"
									},
									"scope": 922,
									"src": "4540:338:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "5380:164:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 661,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "5412:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5412:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 663,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "5438:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 664,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "5459:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 667,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 665,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 412,
																			"src": "5471:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5471:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5459:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 669,
																"indexExpression": {
																	"id": 668,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 653,
																	"src": "5485:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5459:34:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 670,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 655,
																"src": "5496:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5459:47:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 660,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "5390:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5390:126:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 673,
												"nodeType": "ExpressionStatement",
												"src": "5390:126:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5533:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 659,
												"id": 675,
												"nodeType": "Return",
												"src": "5526:11:3"
											}
										]
									},
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "4884:383:3",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5281:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5316:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5308:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5308:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5341:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5333:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5333:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5298:59:3"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5374:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 657,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5374:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5373:6:3"
									},
									"scope": 922,
									"src": "5272:272:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "6143:169:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 688,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "6175:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6175:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 690,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "6201:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 691,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "6222:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 694,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 692,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 412,
																			"src": "6234:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6234:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6222:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 696,
																"indexExpression": {
																	"id": 695,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 680,
																	"src": "6248:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6222:34:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 697,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 682,
																"src": "6259:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6222:52:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 687,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "6153:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6153:131:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "6153:131:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6301:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 686,
												"id": 702,
												"nodeType": "Return",
												"src": "6294:11:3"
											}
										]
									},
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "5550:475:3",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6039:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6074:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "6066:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6066:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6099:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "6091:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6091:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6056:64:3"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "6137:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 684,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6137:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6136:6:3"
									},
									"scope": 922,
									"src": "6030:282:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "6582:65:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 715,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "6598:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6598:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 717,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "6612:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 714,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "6592:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6592:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 719,
												"nodeType": "ExpressionStatement",
												"src": "6592:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6636:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 713,
												"id": 721,
												"nodeType": "Return",
												"src": "6629:11:3"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "6318:197:3",
										"text": " @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n the total supply.\n Requirements\n - `msg.sender` must be the token owner"
									},
									"functionSelector": "a0712d68",
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 710,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 709,
												"name": "onlyOwner",
												"nameLocations": [
													"6557:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6557:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "6557:9:3"
										}
									],
									"name": "mint",
									"nameLocation": "6529:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6542:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "6534:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6534:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6533:16:3"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "6576:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 711,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6576:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:6:3"
									},
									"scope": 922,
									"src": "6520:127:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "7230:296:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 734,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "7248:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7266:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7258:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 735,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7258:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7258:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7248:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7270:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 733,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7240:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7240:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "7240:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 744,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "7328:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7349:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7341:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 745,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7341:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7341:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7328:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7353:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 743,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7320:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7320:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "7320:71:3"
											},
											{
												"expression": {
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 753,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "7402:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 755,
														"indexExpression": {
															"id": 754,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "7412:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7402:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 756,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "7423:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7402:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "7402:27:3"
											},
											{
												"expression": {
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 759,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "7439:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 761,
														"indexExpression": {
															"id": 760,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "7449:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7439:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 762,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "7463:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7439:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "7439:30:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 766,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "7493:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 767,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "7501:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 768,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "7512:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 765,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "7484:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7484:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 770,
												"nodeType": "EmitStatement",
												"src": "7479:40:3"
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "6653:463:3",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7130:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7157:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "7149:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7149:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7181:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "7173:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7173:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7208:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "7200:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7200:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7139:81:3"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7230:0:3"
									},
									"scope": 922,
									"src": "7121:405:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "7853:205:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 781,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "7871:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7890:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7882:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 782,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7882:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7882:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7871:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7894:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 780,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7863:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7863:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "7863:65:3"
											},
											{
												"expression": {
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 790,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7939:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 791,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "7955:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7939:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "7939:22:3"
											},
											{
												"expression": {
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 794,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "7971:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 796,
														"indexExpression": {
															"id": 795,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "7981:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7971:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 797,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "7993:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7971:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "7971:28:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8031:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8023:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 801,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8023:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8023:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 805,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "8035:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 806,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "8044:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 800,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "8014:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8014:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 808,
												"nodeType": "EmitStatement",
												"src": "8009:42:3"
											}
										]
									},
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "7532:259:3",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7805:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7819:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "7811:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7811:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7836:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "7828:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7828:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7810:33:3"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7853:0:3"
									},
									"scope": 922,
									"src": "7796:262:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "8434:207:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 819,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 813,
																"src": "8452:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8471:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8463:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 820,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8463:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8463:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8452:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8475:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 818,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8444:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8444:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 827,
												"nodeType": "ExpressionStatement",
												"src": "8444:67:3"
											},
											{
												"expression": {
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 828,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "8522:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 830,
														"indexExpression": {
															"id": 829,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "8532:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8522:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 831,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "8544:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8522:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 833,
												"nodeType": "ExpressionStatement",
												"src": "8522:28:3"
											},
											{
												"expression": {
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 834,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8560:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 835,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "8576:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8560:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "8560:22:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 839,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "8606:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8623:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8615:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 840,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8615:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8615:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 844,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "8627:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 838,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "8597:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8597:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 846,
												"nodeType": "EmitStatement",
												"src": "8592:42:3"
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "8064:308:3",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8386:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8400:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "8392:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8392:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8417:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "8409:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8409:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8391:33:3"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8434:0:3"
									},
									"scope": 922,
									"src": "8377:264:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 892,
										"nodeType": "Block",
										"src": "9171:257:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 859,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "9189:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9206:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9198:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 860,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9198:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9198:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9189:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9210:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 858,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9181:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9181:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 867,
												"nodeType": "ExpressionStatement",
												"src": "9181:68:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 869,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "9267:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9286:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9278:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 870,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9278:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9278:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9267:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9290:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 868,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9259:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9259:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "9259:68:3"
											},
											{
												"expression": {
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 878,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "9338:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 881,
															"indexExpression": {
																"id": 879,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "9350:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9338:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 882,
														"indexExpression": {
															"id": 880,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "9357:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9338:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 883,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "9368:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9338:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 885,
												"nodeType": "ExpressionStatement",
												"src": "9338:36:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 887,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "9398:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 888,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "9405:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 889,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "9414:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 886,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "9389:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9389:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "EmitStatement",
												"src": "9384:37:3"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "8647:414:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9075:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9101:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "9093:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9093:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9124:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "9116:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9116:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9149:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "9141:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9141:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9083:78:3"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9171:0:3"
									},
									"scope": 922,
									"src": "9066:362:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "9667:171:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 902,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "9683:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 903,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "9692:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 901,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "9677:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9677:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "9677:22:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 907,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "9731:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 908,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "9752:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9752:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 910,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "9778:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 912,
																	"indexExpression": {
																		"id": 911,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 896,
																		"src": "9790:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9778:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 915,
																"indexExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 913,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 412,
																		"src": "9799:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9799:12:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9778:34:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 916,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 898,
																"src": "9815:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9778:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 906,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "9709:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9709:122:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "9709:122:3"
											}
										]
									},
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "9434:167:3",
										"text": " @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n from the caller's allowance.\n See {_burn} and {_approve}."
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nameLocation": "9615:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9633:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "9625:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9625:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9650:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "9642:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9642:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:3"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9667:0:3"
									},
									"scope": 922,
									"src": "9606:232:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 923,
							"src": "1401:8439:3",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								1013,
								1022
							]
						}
					],
					"src": "32:9809:3"
				},
				"id": 3
			},
			"projects/bsc-library/contracts/IBEP20.sol": {
				"ast": {
					"absolutePath": "projects/bsc-library/contracts/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							1023
						]
					},
					"id": 1024,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 924,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBEP20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1023,
							"linearizedBaseContracts": [
								1023
							],
							"name": "IBEP20",
							"nameLocation": "69:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "80:62:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 930,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "154:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "165:2:4"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "191:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "191:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "190:9:4"
									},
									"scope": 1023,
									"src": "145:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "204:47:4",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "263:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "271:2:4"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "297:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 933,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "297:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "296:7:4"
									},
									"scope": 1023,
									"src": "254:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "308:45:4",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "365:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "371:2:4"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "397:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 939,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "397:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "396:15:4"
									},
									"scope": 1023,
									"src": "356:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "416:43:4",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "471:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "475:2:4"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "501:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 945,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "501:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:15:4"
									},
									"scope": 1023,
									"src": "462:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "520:48:4",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 954,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "580:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "588:2:4"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "614:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "613:9:4"
									},
									"scope": 1023,
									"src": "571:52:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "627:68:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 962,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "707:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "725:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "717:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "716:17:4"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "757:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "757:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:9:4"
									},
									"scope": 1023,
									"src": "698:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "770:197:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 972,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "979:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "996:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "988:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1015:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "1007:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1007:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "987:35:4"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "1041:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 969,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1041:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1040:6:4"
									},
									"scope": 1023,
									"src": "970:77:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "1051:252:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 982,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1315:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1333:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1325:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1349:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1341:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:33:4"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1393:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1393:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:9:4"
									},
									"scope": 1023,
									"src": "1306:96:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "1406:616:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 992,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2034:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2050:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "2042:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2042:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2067:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "2059:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:33:4"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "2093:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 989,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2093:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2092:6:4"
									},
									"scope": 1023,
									"src": "2025:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "2103:280:4",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1004,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2395:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2421:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "2413:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2413:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2441:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "2433:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2433:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2464:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "2456:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2456:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2407:67:4"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "2493:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1001,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2493:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:6:4"
									},
									"scope": 1023,
									"src": "2386:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1005,
										"nodeType": "StructuredDocumentation",
										"src": "2503:148:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1013,
									"name": "Transfer",
									"nameLocation": "2660:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "2669:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2669:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "2691:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2719:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "2711:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2668:57:4"
									},
									"src": "2654:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1014,
										"nodeType": "StructuredDocumentation",
										"src": "2730:142:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1022,
									"name": "Approval",
									"nameLocation": "2881:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2906:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "2890:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2890:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2929:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "2913:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2913:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2946:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "2938:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2938:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2889:63:4"
									},
									"src": "2875:78:4"
								}
							],
							"scope": 1024,
							"src": "59:2896:4",
							"usedErrors": [],
							"usedEvents": [
								1013,
								1022
							]
						}
					],
					"src": "33:2923:4"
				},
				"id": 4
			}
		}
	}
}
{
	"compiler": {
		"version": "0.8.27+commit.40a35a09"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_WBNBAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_exzoneRouter",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_maxZapReverseRatio",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "initialOwner",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "target",
						"type": "address"
					}
				],
				"name": "AddressEmptyCode",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "AddressInsufficientBalance",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "FailedInnerCall",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "SafeERC20FailedOperation",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountTokens",
						"type": "uint256"
					}
				],
				"name": "AdminTokenRecovery",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "maxZapReverseRatio",
						"type": "uint256"
					}
				],
				"name": "NewMaxZapReverseRatio",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "tokenToZap",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "lpToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokenAmountIn",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "lpTokenAmountReceived",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "ZapIn",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "token0ToZap",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "token1ToZap",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "lpToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "token0AmountIn",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "token1AmountIn",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "lpTokenAmountReceived",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "ZapInRebalancing",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "lpToken",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "tokenToReceive",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "lpTokenAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokenAmountReceived",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "ZapOut",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "MAX_INT",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MINIMUM_AMOUNT",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "WBNB",
				"outputs": [
					{
						"internalType": "contract IWETH",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token0ToZap",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_token1ToZap",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_token0AmountIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_token1AmountIn",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					}
				],
				"name": "estimateZapInRebalancingSwap",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "swapAmountIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "swapAmountOut",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "sellToken0",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_tokenToZap",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenAmountIn",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					}
				],
				"name": "estimateZapInSwap",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "swapAmountIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "swapAmountOut",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "swapTokenOut",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_lpTokenAmount",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_tokenToReceive",
						"type": "address"
					}
				],
				"name": "estimateZapOutSwap",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "swapAmountIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "swapAmountOut",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "swapTokenOut",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "exzoneRouter",
				"outputs": [
					{
						"internalType": "contract IExzoneRouter02",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxZapReverseRatio",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_tokenAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenAmount",
						"type": "uint256"
					}
				],
				"name": "recoverWrongTokens",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_maxZapInverseRatio",
						"type": "uint256"
					}
				],
				"name": "updateMaxZapInverseRatio",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenAmountOutMin",
						"type": "uint256"
					}
				],
				"name": "zapInBNB",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token1ToZap",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_token1AmountIn",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenAmountInMax",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_tokenAmountOutMin",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "_isToken0Sold",
						"type": "bool"
					}
				],
				"name": "zapInBNBRebalancing",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_tokenToZap",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenAmountIn",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenAmountOutMin",
						"type": "uint256"
					}
				],
				"name": "zapInToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token0ToZap",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_token1ToZap",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_token0AmountIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_token1AmountIn",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenAmountInMax",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_tokenAmountOutMin",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "_isToken0Sold",
						"type": "bool"
					}
				],
				"name": "zapInTokenRebalancing",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_lpTokenAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_tokenAmountOutMin",
						"type": "uint256"
					}
				],
				"name": "zapOutBNB",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_tokenToReceive",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_lpTokenAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_tokenAmountOutMin",
						"type": "uint256"
					}
				],
				"name": "zapOutToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"errors": {
				"AddressEmptyCode(address)": [
					{
						"details": "There's no code at `target` (it is not a contract)."
					}
				],
				"AddressInsufficientBalance(address)": [
					{
						"details": "The ETH balance of the account is not enough to perform the operation."
					}
				],
				"FailedInnerCall()": [
					{
						"details": "A call to an address target failed. The target may have reverted."
					}
				],
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				],
				"SafeERC20FailedOperation(address)": [
					{
						"details": "An operation with an ERC20 token failed."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"recoverWrongTokens(address,uint256)": {
					"details": "This function is only callable by owner.",
					"params": {
						"_tokenAddress": ": the address of the token to withdraw (18 decimals)",
						"_tokenAmount": ": the number of token amount to withdraw"
					}
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"updateMaxZapInverseRatio(uint256)": {
					"details": "This function is only callable by owner.",
					"params": {
						"_maxZapInverseRatio": ": new inverse ratio"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"recoverWrongTokens(address,uint256)": {
					"notice": "It allows the owner to recover wrong tokens sent to the contract"
				},
				"updateMaxZapInverseRatio(uint256)": {
					"notice": "It allows the owner to change the risk parameter for quantities"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"projects/exchange-protocol/contracts/ExzoneZapV1.sol": "ExzoneZapV1"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
			"license": "MIT",
			"urls": [
				"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
				"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
			"license": "MIT",
			"urls": [
				"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
				"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
			]
		},
		"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
			"keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
			"license": "MIT",
			"urls": [
				"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
				"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
			]
		},
		"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
			"keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
			"license": "MIT",
			"urls": [
				"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
				"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
			"license": "MIT",
			"urls": [
				"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
				"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"projects/exchange-protocol/contracts/ExzoneZapV1.sol": {
			"keccak256": "0x2eeea7549ab1b7d58652b691f8804e232e69fcac625380fe6d3c3c4f09d33a0c",
			"license": "MIT",
			"urls": [
				"bzz-raw://bd99db6f43f0ee690a015b9726cae9db472801172ba3573facef942a6635d0e5",
				"dweb:/ipfs/QmcVSphQ8EYUrxCqkhJVJWXDcnG55fR3CYJCik2S18ry2R"
			]
		},
		"projects/exchange-protocol/contracts/interfaces/IExzonePair.sol": {
			"keccak256": "0x36d66cdaa4f39d665205afe4277b72cb45d2087ebad749ed296ac2af76a72c09",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://130e01b22166c5aa7aa0703c32d4911f99090ca8395e7f0380ea85daebe9d70f",
				"dweb:/ipfs/QmZEPXvvuVrBFXE7GWbKkbzLZXZmz5uugNbY2UsgrSizau"
			]
		},
		"projects/exchange-protocol/contracts/interfaces/IExzoneRouter01.sol": {
			"keccak256": "0xd760db1bb494936550c88b84eb79e8af978168703735e9e617efefdd9cf0cb3c",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://4d8e32dbba530a8b54a8a349524e1017310d5150cfaf11e2e81cc66872c9f434",
				"dweb:/ipfs/QmV5hJwHx9wuvQEkH7EL3cpsNAMSbNaKw5uh91tWje1Tn7"
			]
		},
		"projects/exchange-protocol/contracts/interfaces/IExzoneRouter02.sol": {
			"keccak256": "0xc0950b3c9845603ca137a6f10a96dac94985a3512d992d9a35ef288e42365b84",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://80ddf47ce3ba18138453f87479f1b62747c4b4a1b00b39e53c15ded94469a6f3",
				"dweb:/ipfs/QmYWMcfym1JyWW4mhsSSHQ83knx97BrpohskyFabaHXHzJ"
			]
		},
		"projects/exchange-protocol/contracts/interfaces/IWETH.sol": {
			"keccak256": "0xc47452d9f0f9b92785cecb145290f5fd121c7037851297fef53045dab1535ed1",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://727c3e00a3f4b866c7c77556f8c7dc58e5deb7d628c6029d389ffe2a805f1f18",
				"dweb:/ipfs/QmTVb8mWmi9LrG9NaBfAjypKgx3jCUWMh3PdhN2B5P66Tg"
			]
		},
		"projects/exchange-protocol/contracts/libraries/Babylonian.sol": {
			"keccak256": "0x843ce1653b291352aac0c5db5d6b887c7ad43824d1386e643a7c7b8b93095edb",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://5ed1045f1fff866f85ee8566fe6072625a7603e80e0645f82dd912d185d3d15f",
				"dweb:/ipfs/QmPbmWEMY2VK2QVtuX46Ygeyu4dMFufrGZdZuiyCWwJ5gq"
			]
		}
	},
	"version": 1
}